{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/shizai/.vscode-oss/extensions/extensions.json","path":"/home/shizai/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1752773041458,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.101.2","productDate":"2025-06-25T19:40:00.687Z","productCommit":"2901c5ac6db8a986a5666c3af51ff804d05af0d4","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2025.6.0","publisher":"ms-python","enabledApiProposals":["portsAttributes","debugVisualization","contribViewsWelcome"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.92.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"},"debugpy.showPythonInlineValues":{"default":false,"description":"Whether to display inline values in the editor while debugging.","scope":"resource","type":"boolean","tags":["experimental"]}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}],"viewsWelcome":[{"view":"debug","contents":"\n[Show automatic Python configurations](command:workbench.action.debug.selectandstart?%5B%22debugpy%22%5D)\n","when":"dynamicPythonConfigAvailable && !virtualWorkspace"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.3.4","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/mocha":"^10.0.7","@types/node":"18.x","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.7.0","prettier":"^3.0.3","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.5.4","webpack":"^5.87.0","webpack-cli":"^5.1.4"},"dependencies":{"@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"^0.8.5","@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","jsonc-parser":"^3.2.0","lodash":"^4.17.21","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/ms-python.debugpy-2025.6.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1752772576613,"pinned":false,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"linux-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":38034335},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2025.4.0","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","codeActionAI","notebookReplDocument","notebookVariableProvider"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.94.0-20240918"},"enableTelemetry":false,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.copilotSetupTests","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py","workspaceContains:.venv","workspaceContains:.conda"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"problemMatchers":[{"name":"python","owner":"python","source":"python","fileLocation":"autoDetect","pattern":[{"regexp":"^.*File \\\"([^\\\"]|.*)\\\", line (\\d+).*","file":1,"line":2},{"regexp":"^\\s*(.*)\\s*$"},{"regexp":"^\\s*(.*Error.*)$","message":1}]}],"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiments to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiments to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["onExP","preview"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pixiToolPath":{"default":"pixi","description":"Path to the pixi executable.","scope":"machine-overridable","type":"string"},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.terminal.shellIntegration.enabled":{"default":false,"markdownDescription":"Enable [shell integration](https://code.visualstudio.com/docs/terminal/shell-integration) for the terminals running python. Shell integration enhances the terminal experience by enabling command decorations, run recent command, improving accessibility among other things.","scope":"resource","type":"boolean","tags":["preview"]},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean","tags":["onExP","preview"]},"python.REPL.provideVariables":{"default":true,"description":"Toggle to provide variables for the REPL variable view for the native REPL.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSavePattern":{"default":"**/*.py","description":"Glob pattern used to determine which files are used by autoTestDiscoverOnSaveEnabled.","scope":"resource","type":"string"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest. You can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPL","key":"shift+enter","when":"config.python.REPL.sendToNativeREPL && editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.repl' && !inlineChatFocused && !notebookCellListFocused"},{"command":"python.execInInteractiveWindowEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive' && !inlineChatFocused && !notebookCellListFocused"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock","uv.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && (editorLangId == python || notebookType == jupyter-notebook)"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL","when":"false"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted && !inChat  && notebookType != jupyter-notebook"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted && !inChat"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"copilot":{"tests":{"getSetupConfirmation":"python.copilotSetupTests"}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint  src build pythonExtensionApi","lint-fix":"eslint --fix src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","arch":"^2.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.2","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.2.2","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.93.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.27.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-env":"^7.0.3","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^8.57.1","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.31.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-only-tests":"^3.3.0","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^5.0.0","gulp-typescript":"^5.0.0","mocha":"^11.1.0","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^18.0.0","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"~5.2","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy"]},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/ms-python.python-2025.4.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ms-python","metadata":{"installedTimestamp":1752772576612,"pinned":false,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":23961664},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"kylinideteam.kylin-cpp-pack","uuid":"6457d60c-b10c-4a6d-b79a-12c7fe7504e8"},"manifest":{"name":"kylin-cpp-pack","displayName":"Extension Pack for C/C++","publisher":"KylinIdeTeam","description":"C/C++ Extension Pack","version":"0.1.0","engines":{"vscode":"^1.65.0"},"author":{"name":"KylinIdeTeam"},"icon":"icon.png","categories":["Extension Packs"],"keywords":["C","C++","KylinIdeTeam","clangd","cmake","KylinIdeDev","KylinIdeDevCYuYan","KylinIdeDevCPlusPlus"],"repository":{"type":"git","url":"https://github.com/quanzhuo/cpp-extension-pack.git"},"extensionPack":["KylinIdeTeam.kylin-clangd","KylinIdeTeam.kylin-cmake-tools","KylinIdeTeam.cppdebug"]},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/kylinideteam.kylin-cpp-pack-0.1.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"KylinIdeTeam","metadata":{"installedTimestamp":1752772631348,"pinned":false,"source":"gallery","id":"6457d60c-b10c-4a6d-b79a-12c7fe7504e8","publisherId":"d7162f76-ba97-421e-ad7b-61d4e260c7d1","publisherDisplayName":"KylinIdeTeam","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":34103},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"kylinideteam.cmake-intellisence","uuid":"b02fa3e5-06d4-4aad-8dbb-fe54a1cc58f9"},"manifest":{"name":"cmake-intellisence","displayName":"CMake IntelliSence","description":"CMake format, completion, go to definition, document link, semantic tokens, and more...","author":"quanzhuo","version":"0.3.5","engines":{"vscode":"^1.68.0"},"repository":{"type":"git","url":"https://github.com/quanzhuo/cmake-intellisence"},"bugs":{"url":"https://github.com/quanzhuo/cmake-intellisence/issues","email":"quanzhuo@kylinos.cn"},"categories":["Programming Languages","Snippets","Formatters"],"keywords":["CMake","C++","KylinIdeDev","KylinIdeDevEdit","KylinIdeDevCYuYan","KylinIdeDevCPlusPlus","KylinIdeDevOtherLanguages"],"downloadUrl":"https://gitee.com/openkylin/cmake-intellisence/releases","publisher":"KylinIdeTeam","icon":"images/icon.png","activationEvents":["onLanguage:cmake","workspaceContains:CMakeLists.txt","workspaceContains:**/*.cmake"],"main":"./dist/client","contributes":{"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/cmake.tmLanguage.json"},{"language":"cmakecache","scopeName":"source.cmakecache","path":"./syntaxes/cmakecache.tmLanguage.json"},{"language":"cmdsignature","scopeName":"source.cmdsignature","path":"./syntaxes/cmdsignature.tmLanguage.json"}],"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakeLists.txt"],"aliases":["CMake"],"configuration":"./language-configuration.json"},{"id":"cmakecache","filenames":["CMakeCache.txt"],"aliases":["CMakeCache"]},{"id":"cmdsignature"}],"snippets":[{"language":"cmake","path":"./snippets.json"}],"configuration":[{"title":"CMake IntelliSence","properties":{"cmakeIntelliSence.cmakePath":{"type":"string","default":"cmake","description":"Set the path to the CMake command"},"cmakeIntelliSence.pkgConfigPath":{"type":"string","default":"pkg-config","description":"Set the path to the pkg-config command, used to provide module completion in the pkg_check_modules command"},"cmakeIntelliSence.cmdCaseDiagnostics":{"type":"boolean","description":"Whether to generate warnings for non-lowercase CMake commands","default":"true"},"cmakeIntelliSence.loggingLevel":{"type":"string","enum":["off","error","warning","info","debug"],"default":"off","markdownDescription":"Control the logging level"},"cmakeIntelliSence.trace.server":{"type":"string","enum":["verbose","message","off"],"default":"off"}}}]},"scripts":{"vscode:prepublish":"rimraf dist syntaxes/*.json && npm run product","compile":"tsc -p ./server","tsc-watch":"tsc -p ./server -w","develop":"npm run grammar && npm run antlr4 && webpack --mode development --watch","product":"npm run grammar && npm run antlr4 && webpack --mode production --devtool false","pretest":"npm run compile && npm run lint","lint":"eslint . --ext ts","test":"mocha","postinstall":"cd client && npm install && cd ../server && npm install && cd ..","grammar-cmake":"npx js-yaml ./syntaxes/cmake.tmLanguage.yml > ./syntaxes/cmake.tmLanguage.json","grammar-cmakecache":"npx js-yaml ./syntaxes/cmakecache.tmLanguage.yml > ./syntaxes/cmakecache.tmLanguage.json","grammar-cmdsignature":"npx js-yaml ./syntaxes/cmdsignature.tmLanguage.yml > ./syntaxes/cmdsignature.tmLanguage.json","grammar":"node ./build/yaml-to-json.mjs","antlr4":"cd server/src/antlr && antlr4 -o ../generated/ -visitor -Dlanguage=TypeScript CMakeLexer.g4 && antlr4 -o ../generated/ -visitor -Dlanguage=TypeScript CMakeParser.g4 && antlr4 -o ../generated/ -Dlanguage=TypeScript CMakeSimpleLexer.g4 && antlr4 -o ../generated/ -Dlanguage=TypeScript CMakeSimpleParser.g4"},"devDependencies":{"@types/mocha":"^10.0.10","@types/node":"18.x","@types/which":"^3.0.4","@typescript-eslint/eslint-plugin":"^7.13.1","@typescript-eslint/parser":"^7.13.1","eslint":"^8.57.0","js-yaml":"^4.1.0","mocha":"^11.0.1","rimraf":"^6.0.1","ts-loader":"^9.5.1","typescript":"^5.3.3","webpack":"^5.91.0","webpack-cli":"^5.1.4"},"dependencies":{"which":"^5.0.0"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/kylinideteam.cmake-intellisence-0.3.5-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"KylinIdeTeam","metadata":{"installedTimestamp":1752772631350,"pinned":false,"source":"gallery","id":"b02fa3e5-06d4-4aad-8dbb-fe54a1cc58f9","publisherId":"d7162f76-ba97-421e-ad7b-61d4e260c7d1","publisherDisplayName":"KylinIdeTeam","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1523337},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"kylinideteam.kylin-cmake-tools","uuid":"b83703ef-ad83-4e08-8c01-463e1ea145ff"},"manifest":{"name":"kylin-cmake-tools","displayName":"CMake Tools (Fork)","description":"Fork of CMake Tools, Extended CMake support in VSCode","version":"0.0.4","publisher":"KylinIdeTeam","repository":{"type":"git","url":"https://github.com/quanzhuo/vscode-cmake-tools"},"license":"MIT","bugs":{"url":"https://github.com/quanzhuo/vscode-cmake-tools/issues"},"homepage":"https://github.com/quanzhuo/vscode-cmake-tools","keywords":["cmake","build","C","C++","KylinIdeDev","KylinIdeDevCYuYan","KylinIdeDevCPlusPlus","KylinIdeDevEdit"],"engines":{"vscode":"^1.67.0"},"categories":["Other","Debuggers"],"galleryBanner":{"color":"#13578c","theme":"dark"},"icon":"res/logo.png","activationEvents":["onCommand:cmake.activeFolderName","onCommand:cmake.activeFolderPath","onCommand:cmake.activeConfigurePresetName","onCommand:cmake.activeBuildPresetName","onCommand:cmake.activeTestPresetName","onCommand:cmake.activePackagePresetName","onCommand:cmake.activeWorkflowPresetName","onCommand:cmake.buildTargetName","onCommand:cmake.launchTargetPath","onCommand:cmake.launchTargetDirectory","onCommand:cmake.launchTargetFilename","onCommand:cmake.getLaunchTargetPath","onCommand:cmake.getLaunchTargetDirectory","onCommand:cmake.getLaunchTargetFilename","onCommand:cmake.buildType","onCommand:cmake.buildDirectory","onCommand:cmake.executableTargets","onCommand:cmake.buildKit","onCommand:cmake.tasksBuildCommand","onDebugResolve:cmake","onDebugInitialConfigurations","onDebugDynamicConfigurations:cmake","workspaceContains:CMakeLists.txt","workspaceContains:*/CMakeLists.txt","workspaceContains:*/*/CMakeLists.txt","workspaceContains:*/*/*/CMakeLists.txt","workspaceContains:.vscode/cmake-kits.json","onFileSystem:cmake-tools-schema"],"main":"./dist/main","contributes":{"commands":[{"command":"cmake.openCMakePresets","title":"Open CMakePresets.json","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addConfigurePreset","title":"Add Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addBuildPreset","title":"Add Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addTestPreset","title":"Add Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addPackagePreset","title":"Add Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addWorkflowPreset","title":"Add Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewConfigureSettings","title":"View the settings overriding your Configure Preset","when":"cmake:enabelFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewBuildSettings","title":"View the settings overriding your Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.viewTestSettings","title":"View the settings overriding your Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.viewPackageSettings","title":"View the settings overriding your Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.setTestTarget","title":"Set Test Target","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.viewLog","title":"Open the CMake Tools Log File","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.logDiagnostics","title":"Log Diagnostics","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectActiveFolder","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.selectActiveProject","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet","title":"Select Active Folder","icon":"$(gear)"},{"command":"cmake.editKits","title":"Edit User-Local CMake Kits","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.scanForKits","title":"Scan for Kits","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.scanForCompilers","title":"Scan for Compilers","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariantAll","title":"Select Variant for All Projects","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.configure","title":"Configure","category":"CMake"},{"command":"cmake.configureWithDebugger","title":"Configure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configure","title":"Configure","icon":{"dark":"res/dark/configure-icon.svg","light":"res/light/configure-icon.svg"}},{"command":"cmake.projectStatus.configure","title":"Configure","icon":{"dark":"res/dark/configure-icon.svg","light":"res/light/configure-icon.svg"},"when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.configureWithDebugger","title":"Configure with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand","title":"Show Configure Command","category":"CMake"},{"command":"cmake.configureAll","title":"Configure All Projects","category":"CMake"},{"command":"cmake.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configureAll","title":"Configure All Projects","icon":{"dark":"res/dark/configure-icon.svg","light":"res/light/configure-icon.svg"}},{"command":"cmake.outline.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","title":"Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.projectStatus.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.outline.buildTarget","title":"Build","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.showBuildCommand","title":"Show Build Command","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.compileFile","title":"Compile Active File","category":"CMake","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.outline.compileFile","title":"Compile File","when":"cmake:enableFullFeatureSet","icon":{"dark":"res/dark/build-icon.svg","light":"res/light/build-icon.svg"}},{"command":"cmake.install","title":"Install","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.installAll","title":"Install All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildWithTarget","title":"Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setDefaultTarget","when":"cmake:enableFullFeatureSet","title":"Set as Build Target"},{"command":"cmake.projectStatus.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.cleanConfigure","title":"Delete Cache and Reconfigure","category":"CMake"},{"command":"cmake.outline.cleanConfigure","title":"Clean Reconfigure"},{"command":"cmake.projectStatus.cleanConfigure","title":"Delete Cache and Reconfigure","when":"cmake:enableFullFeatureSet","category":"CMake","icon":{"dark":"res/dark/clean-configure-icon.svg","light":"res/light/clean-configure-icon.svg"}},{"command":"cmake.projectStatus.openSettings","title":"Open CMake Tools Extension Settings","when":"cmake:enableFullFeatureSet","category":"CMake","icon":{"dark":"res/dark/settings-icon.svg","light":"res/light/settings-icon.svg"}},{"command":"cmake.projectStatus.openVisibilitySettings","title":"Open Visibility Settings","when":"cmake:enabelFullFeatureSet","category":"CMake","icon":{"dark":"res/dark/json-icon.svg","light":"res/light/json-icon.svg"}},{"command":"cmake.cleanConfigureWithDebugger","title":"Delete Cache and Reconfigure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureWithDebugger","title":"Clean Reconfigure with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAll","title":"Delete Cache and Reconfigure All Projects","category":"CMake"},{"command":"cmake.outline.cleanConfigureAll","title":"Clean Reconfigure All Projects"},{"command":"cmake.cleanConfigureAllWithDebugger","title":"Delete Cache and Reconfigure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","title":"Clean Reconfigure All Projects with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","title":"Clean","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet","title":"Clean","icon":{"dark":"res/dark/clean-icon.svg","light":"res/light/clean-icon.svg"}},{"command":"cmake.cleanAll","title":"Clean All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet","title":"Clean All Projects"},{"command":"cmake.cleanRebuild","title":"Clean Rebuild","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuild","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild"},{"command":"cmake.cleanRebuildAll","title":"Clean Rebuild All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild All Projects"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)","category":"CMake"},{"command":"cmake.outline.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)"},{"command":"cmake.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","icon":"$(beaker)","category":"CMake"},{"command":"cmake.ctestAll","title":"Run Tests for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.revealTestExplorer","title":"Reveal Test Explorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTests","title":"Refresh Tests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTestsAll","title":"Refresh Tests for All Projects","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(package)","category":"CMake"},{"command":"cmake.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(run)","category":"CMake"},{"command":"cmake.cpackAll","title":"Run CPack for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.workflowAll","title":"Run Workflow for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.editCache","title":"Edit CMake Cache","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.quickStart","title":"Quick Start","category":"CMake"},{"command":"cmake.debugTarget","title":"Debug","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug"},{"command":"cmake.projectStatus.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug","category":"CMake","icon":"$(debug-alt)"},{"command":"cmake.debugTargetAll","title":"Debug All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.setDebugger","when":"cmake:enableFullFeatureSet","title":"Select Debugger Extension","icon":"$(edit)"},{"command":"cmake.projectStatus.setDebugTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.launchTarget","title":"Run Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal"},{"command":"cmake.projectStatus.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal","category":"CMake","icon":"$(run)"},{"command":"cmake.launchTargetAll","title":"Run All Projects Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectLaunchTarget","title":"Set Launch/Debug Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set as Launch/Debug Target"},{"command":"cmake.projectStatus.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set as Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(x)"},{"command":"cmake.outline.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.resetState","title":"Reset CMake Tools Extension State (For troubleshooting)","category":"CMake"},{"command":"cmake.openSettings","title":"Open CMake Tools Extension Settings","category":"CMake"},{"command":"cmake.outline.runUtilityTarget","when":"cmake:enableFullFeatureSet","title":"Run Utility"},{"command":"cmake.outline.revealInCMakeLists","when":"cmake:enableFullFeatureSet","title":"Open CMakeLists.txt"},{"command":"cmake.projectStatus.update","when":"cmake:enableFullFeatureSet","title":"Refresh the project status","category":"CMake","icon":"$(refresh)"},{"command":"cmake.pinnedCommands.add","when":"cmake:enableFullFeatureSet","title":"Add a CMake command to pin","category":"CMake","icon":"$(add)"},{"command":"cmake.pinnedCommands.remove","when":"cmake:enableFullFeatureSet","title":"Unpin Command","category":"CMake","icon":"$(remove)"},{"command":"cmake.pinnedCommands.run","when":"cmake:enableFullFeatureSet","title":"Run Command","category":"CMake","icon":"$(play-circle)"},{"command":"cmake.appendBuildDirectoryToWorkspace","when":"cmake:enableFullFeatureSet","title":"Append Build Directory to Current Workspace","category":"CMake"}],"taskDefinitions":[{"type":"cmake","required":["command"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","enum":["build","configure","install","test","clean","cleanRebuild"],"description":"CMake command"},"targets":{"type":"array","items":{"type":"string"},"description":"CMake build targets"},"preset":{"type":"string","description":"CMake preset name. This is a configuration, build or test preset, based on the CMake command"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."},"environment":{"type":"object","markdownDescription":"Environment variables in the format of \"name\": \"value\"."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"breakpoints":[{"language":"cmake"}],"debuggers":[{"type":"cmake","label":"CMake Debugger","languages":["cmake"],"configurationAttributes":{"launch":{"properties":{"scriptPath":{"type":"string","descripttion":"The path to the script to debug.","default":"script.cmake"},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""},"pipeName":{"type":"string","description":"Name of the pipe (on Windows) or domain socket (on Unix) to use for debugger communication.","default":""},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"cmakeDebugType":{"type":"string","enum":["configure","external","script"],"description":"The type of the CMake debug session. Available options are: \"configure\", \"external\", \"script\"."}},"required":["cmakeDebugType"],"oneOf":[{"properties":{"cmakeDebugType":{"enum":["script"]},"scriptPath":{"type":"string","description":"The path to the script to debug.","default":""},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}},"required":["scriptPath"]},{"properties":{"cmakeDebugType":{"enum":["configure"]},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}}},{"properties":{"cmakeDebugType":{"enum":["external"]}},"required":["pipeName"]}]}},"initialConfigurations":[],"configurationSnippets":[{"label":"CMake: Configure","description":"Debug a CMake project configuration","body":{"type":"cmake","request":"launch","name":"CMake: Configure project","cmakeDebugType":"configure","clean":false,"configureAll":false}},{"label":"CMake: Script","description":"Debug a CMake script","body":{"type":"cmake","request":"launch","name":"CMake: Script debugging","cmakeDebugType":"script","scriptPath":"^\"\\${workspaceFolder}/<...>.cmake\""}},{"label":"CMake: External","description":"Connect to an externally launched CMake invocation","body":{"type":"cmake","request":"launch","name":"CMake: Externally launched","cmakeDebugType":"external","pipeName":"<...>"}}]}],"menus":{"commandPalette":[{"command":"cmake.openCMakePresets","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.viewLog","when":"cmake:enableFullFeatureSet"},{"command":"cmake.configure"},{"command":"cmake.configureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand"},{"command":"cmake.scanForKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.scanForCompilers","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectKit","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.editKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.quickStart"},{"command":"cmake.selectActiveFolder","when":"cmake:enableFullFeatureSet"},{"command":"cmake.resetState"},{"command":"cmake.openSettings"},{"command":"cmake.configureAll","when":"cmake:multiProject"},{"command":"cmake.configureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","when":"cmake:enableFullFeatureSet"},{"command":"cmake.showBuildCommand","when":"cmake:enableFullFeatureSet"},{"command":"cmake.buildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.install","when":"cmake:enableFullFeatureSet"},{"command":"cmake.installAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.buildWithTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"cmake:enableFullFeatureSet"},{"command":"cmake.setVariant","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setVariantAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setDefaultTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanConfigure"},{"command":"cmake.cleanConfigureAll","when":"cmake:multiProject"},{"command":"cmake.cleanConfigureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuild","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet"},{"command":"cmake.ctest","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cpack","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflow","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.ctestAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cpackAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflowAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.revealTestExplorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTestsAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.editCache","when":"cmake:enableFullFeatureSet"},{"command":"cmake.debugTarget","when":"!cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.debugTargetAll","when":"cmake:multiProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTarget","when":"!cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTargetAll","when":"cmake:multiProject && !cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.selectLaunchTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stop","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stopAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.logDiagnostics","when":"cmake:enableFullFeatureSet"},{"command":"cmake.outline.configure","when":"never"},{"command":"cmake.outline.configureAll","when":"never"},{"command":"cmake.outline.configureWithDebugger","when":"never"},{"command":"cmake.outline.configureAllWithDebugger","when":"never"},{"command":"cmake.outline.build","when":"never"},{"command":"cmake.outline.buildAll","when":"never"},{"command":"cmake.outline.compileFile","when":"never"},{"command":"cmake.outline.selectWorkspace","when":"never"},{"command":"cmake.outline.cleanConfigure","when":"never"},{"command":"cmake.outline.cleanConfigureAll","when":"never"},{"command":"cmake.outline.cleanConfigureWithDebugger","when":"never"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"never"},{"command":"cmake.outline.clean","when":"never"},{"command":"cmake.outline.cleanAll","when":"never"},{"command":"cmake.outline.cleanRebuild","when":"never"},{"command":"cmake.outline.cleanRebuildAll","when":"never"},{"command":"cmake.outline.editCacheUI","when":"never"},{"command":"cmake.outline.stop","when":"never"},{"command":"cmake.outline.stopAll","when":"never"},{"command":"cmake.outline.buildTarget","when":"never"},{"command":"cmake.outline.runUtilityTarget","when":"never"},{"command":"cmake.outline.debugTarget","when":"never"},{"command":"cmake.outline.launchTarget","when":"never"},{"command":"cmake.outline.setDefaultTarget","when":"never"},{"command":"cmake.outline.setLaunchTarget","when":"never"},{"command":"cmake.outline.revealInCMakeLists","when":"never"},{"command":"cmake.projectStatus.update","when":"never"},{"command":"cmake.pinnedCommands.add","when":"never"},{"command":"cmake.pinnedCommands.remove","when":"never"},{"command":"cmake.pinnedCommands.run","when":"never"},{"command":"cmake.projectStatus.stop","when":"never"},{"command":"cmake.projectStatus.selectKit","when":"never"},{"command":"cmake.projectStatus.configure","when":"never"},{"command":"cmake.projectStatus.cleanConfigure","when":"never"},{"command":"cmake.projectStatus.openSettings","when":"never"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"never"},{"command":"cmake.projectStatus.setVariant","when":"never"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"never"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"never"},{"command":"cmake.projectStatus.build","when":"never"},{"command":"cmake.projectStatus.viewBuildSettings","when":"never"},{"command":"cmake.projectStatus.setDefaultTarget","when":"never"},{"command":"cmake.projectStatus.selectBuildPreset","when":"never"},{"command":"cmake.projectStatus.viewTestSettings","when":"never"},{"command":"cmake.projectStatus.viewPackageSettings","when":"never"},{"command":"cmake.projectStatus.selectPackagePreset","when":"never"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"never"},{"command":"cmake.projectStatus.ctest","when":"never"},{"command":"cmake.projectStatus.cpack","when":"never"},{"command":"cmake.projectStatus.workflow","when":"never"},{"command":"cmake.projectStatus.debugTarget","when":"never"},{"command":"cmake.projectStatus.launchTarget","when":"never"},{"command":"cmake.projectStatus.setDebugger","when":"never"},{"command":"cmake.projectStatus.setDebugTarget","when":"never"},{"command":"cmake.projectStatus.setLaunchTarget","when":"never"},{"command":"cmake.projectStatus.selectActiveProject","when":"never"},{"command":"cmake.projectStatus.selectTestPreset","when":"never"},{"command":"cmake.projectStatus.setTestTarget","when":"never"}],"view/title":[{"command":"cmake.projectStatus.update","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@1"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@2"},{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && !cmake:isBuilding","group":"navigation@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && !cmake:isBuilding && cmake:cmakeDebuggerAvailable","group":"navigation@2"},{"command":"cmake.outline.buildAll","when":"view == cmake.outline && !cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.outline.stopAll","when":"view == cmake.outline && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.cleanAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && cmake:cmakeDebuggerAvailable","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanRebuildAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.editCacheUI","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.pinnedCommands.add","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"navigation@1"}],"view/item/context":[{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'stop'","group":"inline"},{"command":"cmake.projectStatus.selectKit","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'kit'","group":"inline"},{"command":"cmake.projectStatus.configure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configure'","group":"inline"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'cleanConfigure'","group":"inline"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openSettings'","group":"inline"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openVisibilitySettings'","group":"inline"},{"command":"cmake.projectStatus.setVariant","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'variant'","group":"inline"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /configPreset/","group":"inline"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.build","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'build'","group":"inline"},{"command":"cmake.projectStatus.setDefaultTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildTarget'","group":"inline"},{"command":"cmake.projectStatus.selectBuildPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /buildPreset/","group":"inline"},{"command":"cmake.projectStatus.viewBuildSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.ctest","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'test'","group":"inline"},{"command":"cmake.projectStatus.cpack","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'package' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.workflow","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflow' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.setTestTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testTarget'","group":"inline"},{"command":"cmake.projectStatus.selectTestPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /testPreset/","group":"inline"},{"command":"cmake.projectStatus.viewTestSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.viewPackageSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'packagePreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.selectPackagePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /packagePreset/","group":"inline"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflowPreset'","group":"inline"},{"command":"cmake.projectStatus.debugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debug'","group":"inline"},{"command":"cmake.projectStatus.setDebugger","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debugger'","group":"inline"},{"command":"cmake.projectStatus.setDebugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debugTarget'","group":"inline"},{"command":"cmake.projectStatus.launchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launch'","group":"inline"},{"command":"cmake.projectStatus.setLaunchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launchTarget'","group":"inline"},{"command":"cmake.projectStatus.selectActiveProject","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'activeProject'","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true|canRun=true/","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true/","group":"1_targetActions@1"},{"command":"cmake.outline.runUtilityTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true/","group":"1_targetActions@2"},{"command":"cmake.outline.debugTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@3"},{"command":"cmake.outline.launchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@4"},{"command":"cmake.outline.revealInCMakeLists","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /nodeType=target/","group":"1_targetActions@5"},{"command":"cmake.outline.setDefaultTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true|canBuild=true/ && viewItem =~ /isDefault=false/","group":"2_targetState@1"},{"command":"cmake.outline.setLaunchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/ && viewItem =~ /isLaunch=false/","group":"2_targetState@2"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@2"},{"command":"cmake.outline.buildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@3"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@4"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@5"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@5"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@6"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"1_fileActions@7"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@1"},{"command":"cmake.outline.build","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@2"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@3"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"inline"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"inline"},{"command":"cmake.outline.configureWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"inline"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=workspace/ && viewItem =~ /selected=false/","group":"inline"},{"command":"cmake.pinnedCommands.remove","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"pinnedCommands@1"},{"command":"cmake.pinnedCommands.run","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"inline"}],"editor/title/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"}],"editor/title":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet","group":"navigation"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet","group":"navigation"}],"explorer/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"},{"command":"cmake.outline.configureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.configureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.buildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanConfigureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanRebuildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"}],"touchBar":[{"command":"cmake.quickStart","when":"cmake:enableTouchBar && !cmake:enableFullFeatureSet","group":"CMake:start"},{"command":"cmake.configure","when":"cmake:enableTouchBar.configure && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.build","alt":"cmake.configure","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.stop","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && cmake:isBuilding","group":"CMake:build"},{"command":"cmake.debugTarget","alt":"cmake.selectLaunchTarget","when":"cmake:enableTouchBar.debug && cmake:enableFullFeatureSet && !cmake:hideDebugCommand","group":"CMake:run"},{"command":"cmake.launchTarget","when":"cmake:enableTouchBar.launch && cmake:enableFullFeatureSet && !cmake:hideLaunchCommand","group":"CMake:run"}]},"configuration":{"type":"object","title":"CMake Tools","properties":{"cmake.autoSelectActiveFolder":{"type":"boolean","default":true,"description":"Select active folder automatically.","scope":"window"},"cmake.cmakePath":{"type":"string","default":"cmake","description":"Name/path of the CMake executable to use.","scope":"resource"},"cmake.buildDirectory":{"type":"string","default":"${workspaceFolder}/build","description":"The directory where CMake build files will go.","scope":"resource"},"cmake.installPrefix":{"type":"string","default":null,"description":"The directory where CMake installed files will go.","scope":"resource"},"cmake.sourceDirectory":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Path or array of paths to the CMakeLists.txt root directory/directories.","default":"${workspaceFolder}","scope":"resource"},"cmake.saveBeforeBuild":{"type":"boolean","default":true,"description":"Save open files before building.","scope":"resource"},"cmake.buildBeforeRun":{"type":"boolean","default":true,"description":"Build the target before running it.","scope":"resource"},"cmake.clearOutputBeforeBuild":{"type":"boolean","default":true,"description":"Clear build output before each build.","scope":"resource"},"cmake.configureSettings":{"type":"object","default":{},"additionalProperties":{"oneOf":[{"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"array","items":{"type":"string"}},{"type":"object","properties":{"type":{"type":"string","enum":["","BOOL","STRING","FILEPATH","PATH"]},"value":{}},"additionalProperties":false,"required":["type","value"]}]},"description":"CMake variables to set on the command line. This setting is specific to kits and will not be used for CMake Presets.","scope":"resource"},"cmake.cacheInit":{"oneOf":[{"type":"string","description":"Path to a cache-initializing CMake file."},{"type":"array","description":"List of cache initializer files.","items":{"type":"string","description":"A cache initializing CMake file."}}],"description":"Provide cache-initializing CMake file(s).","scope":"resource"},"cmake.preferredGenerators":{"type":"array","default":[],"description":"The preferred CMake generator(s) to use when configuring (tried in order of listing).","scope":"resource"},"cmake.generator":{"type":"string","default":null,"description":"The CMake generator to use.","scope":"resource"},"cmake.toolset":{"type":"string","default":null,"description":"The CMake toolset to use when configuring.","scope":"resource"},"cmake.platform":{"type":"string","default":null,"description":"The CMake platform to use when configuring.","scope":"resource"},"cmake.configureArgs":{"type":"array","description":"Additional arguments to pass to CMake when configuring. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active configure preset.","items":{"type":"string","title":"CMake Arguments"},"default":[],"scope":"resource"},"cmake.buildArgs":{"type":"array","description":"Additional arguments to pass to CMake when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.buildToolArgs":{"type":"array","description":"Additional arguments to pass to the underlying build tool when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset to invoke the build tool.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.parallelJobs":{"type":"number","default":0,"description":"The number of parallel build jobs. Use zero to automatically detect the number of CPUs. Setting this to 1 will omit the parallelism flag (-j) from the underlying build command, which has a generator-dependent effect on build parallelism.","scope":"resource"},"cmake.ctestPath":{"type":"string","default":null,"description":"Path to CTest executable. If null, will be inferred from cmake.cmakePath (recommended to leave null).","scope":"resource"},"cmake.cpackPath":{"type":"string","default":null,"when":"useCMakePresets == true","description":"Path to CPack executable. If null, will be inferred from cmake.cmakePath (recommended to leave null). Will be ignored when kits are used instead of presets.","scope":"resource"},"cmake.ctest.parallelJobs":{"type":"number","default":0,"markdownDescription":"The number of parallel test jobs. Use zero to use the value of `#cmake.parallelJobs#`. This only applies when `#cmake.ctest.allowParallelJobs#` is set to `true`.","scope":"resource"},"cmake.ctest.allowParallelJobs":{"type":"boolean","default":false,"description":"Allows ctests to be run in parallel, however the result output may be garbled as a result and the Test Explorer may not accurately reflect test progress.","scope":"resource"},"cmake.ctest.testExplorerIntegrationEnabled":{"type":"boolean","default":true,"description":"Whether or not the integration with the test explorer is enabled. This is helpful to disable if you prefer using a different extension for test integration.","scope":"machine-overridable"},"cmake.ctest.testSuiteDelimiter":{"type":"string","default":null,"markdownDescription":"Optional delimiter used to separate test suite names and group tests hierarchically in the Test Explorer. This string is used in a Regular Expression, so some delimiters may need escaping. Examples: `-` ( One delimiter: `-`), `\\.|::` (Two delimiters: `.` or `::`. Note that `.` needs to be escaped.)","scope":"machine-overridable"},"cmake.parseBuildDiagnostics":{"type":"boolean","default":true,"description":"Parse compiler output for warnings and errors.","scope":"resource"},"cmake.enabledOutputParsers":{"type":"array","markdownDescription":"Output parsers to use. Supported parsers `cmake`, `gcc`, `gnuld` for GNULD-style linker output, `msvc` for Microsoft Visual C++, `ghs` for the Green Hills compiler with --no_wrap_diagnostics --brief_diagnostics, and `diab` for the Wind River Diab compiler.","items":{"type":"string","enum":["cmake","gcc","gnuld","msvc","ghs","diab","iar"]},"default":["cmake","gcc","gnuld","msvc","ghs","diab"],"scope":"resource"},"cmake.debugConfig":{"type":"object","description":"The debug configuration to use when debugging a target.","properties":{"symbolSearchPath":{"type":"string","description":"Visual Studio debugger symbol search paths."},"additionalSOLibSearchPath":{"type":"string","description":"Paths for GDB or LLDB to search for .so files."},"externalConsole":{"type":"boolean","description":"Launch an external console for the program."},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:`std::cin` or `scanf`).","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"markdownDescription":"Where to launch the debug target. Defaults to `internalConsole` if not defined."},"logging":{"type":"object","description":"Tell what types of messages should be logged to the console.","properties":{"exceptions":{"type":"boolean","default":true},"moduleLoad":{"type":"boolean","default":true},"programOutput":{"type":"boolean","default":true},"engineLogging":{"type":"boolean","default":false},"trace":{"type":"boolean","default":false},"traceResponse":{"type":"boolean","default":false}}},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging."},"args":{"type":"array","description":"Arguments to pass to program command line.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Set the working directory for the program."},"environment":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of environment variable."},"value":{"type":"string","description":"Value for the environment variable."}}}},"MIMode":{"type":"string","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to gdb or lldb debugger."},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target.","default":false},"setupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"customLaunchSetupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"launchCompleteCommand":{"type":"string"},"dumpPath":{"type":"string"},"coreDumpPath":{"type":"string"}},"scope":"resource"},"cmake.nativeDebugConfig":{"type":"object","description":"Additional launch configuration for KylinIdeTeam.kylin-debug extension","properties":{"cwd":{"type":"string","description":"Working directory for the launched program."},"arguments":{"type":"string","description":"Arguments to append after the executable. You can also use pipes."},"gdbpath":{"type":"string","description":"Path to the gdb executable or the command if in PATH"},"env":{"type":"object","description":"Environment variables to set for the debug session","additionalProperties":{"type":"string"}},"debugger_args":{"type":"array","description":"Additional arguments to pass to GDB","items":{"type":"string"}},"pathSubstitutions":{"type":"object","description":"Help GDB find your source using path substitutions (GDB `substitute-path)` variable","additionalProperties":{"type":"string"}},"valuesFormating":{"type":"string","description":"Set the way of showing variable values. 'disabled' - show value as is, 'parseText' - parse debuggers output text into structure, 'prettyPrinters' - enable debuggers custom pretty-printers if there are any","default":"parseText","enum":["disabled","parseText","prettyPrinters"]},"printCalls":{"type":"boolean","description":"Prints all GDB calls to the console","default":false},"showDevDebugOutput":{"type":"boolean","description":"Prints all GDB responses to the console"},"autorun":{"type":"array","description":"GDB commands to run when starting to debug","items":{"type":"string"}},"stopAtEntry":{"type":"boolean","description":"Whether debugger should stop at application entry point","default":false}}},"cmake.codeLLDBDebugConfig":{"type":"object","description":"Additional launch configuration for vadimcn.vscode-lldb","properties":{"args":{"type":"array","description":"Program arguments.","items":{"type":"string"}},"cwd":{"type":"string","description":"Working directory for the launched program."},"env":{"type":"object","description":"Environment variables to set for the debug session","additionalProperties":{"type":"string"}},"envFile":{"type":"string","description":"Path to a file containing environment variable definitions."},"stdio":{"type":["string","null","string","object"],"description":"Destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","default":null},"terminal":{"type":"string","description":"Terminal to launch for the debug session.","default":"integrated","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."]},"console":{"description":"Terminal type to use. (This setting is a compatibility alias of 'terminal'.)","type":"string","enum":["integratedTerminal","externalTerminal","internalConsole"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."]},"stopOnEntry":{"description":"Automatically stop debuggee after launch.","type":"boolean","default":false},"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","items":{"type":"string"},"default":[]},"targetCreateCommands":{"description":"Commands that create the debug target.","type":"array","items":{"type":"string"},"default":[]},"preRunCommands":{"description":"Commands executed just before the program is launched.","type":"array","items":{"type":"string"},"default":[]},"processCreateCommands":{"description":"Commands that create the debuggee process.","type":"array","items":{"type":"string"},"default":[]},"postRunCommands":{"description":"Commands executed just after the program has been launched.","type":"array","items":{"type":"string"},"default":[]},"preTerminateCommands":{"description":"Commands executed just before the debuggee is terminated or disconnected from.","type":"array","items":{"type":"string"},"default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","items":{"type":"string"},"default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false},"breakpointMode":{"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]}}},"cmake.defaultVariants":{"type":"object","$schema":"cmake-tools-schema://schemas/variants-schema.json","description":"Configure the default variant settings.","default":{"buildType":{"default":"debug","description":"The build type.","choices":{"debug":{"short":"Debug","long":"Disable optimizations - include debug information.","buildType":"Debug"},"release":{"short":"Release","long":"Optimize for speed - exclude debug information.","buildType":"Release"},"minsize":{"short":"MinSizeRel","long":"Optimize for smallest binary size - exclude debug information.","buildType":"MinSizeRel"},"reldeb":{"short":"RelWithDebInfo","long":"Optimize for speed - include debug information.","buildType":"RelWithDebInfo"},"unspecified":{"short":"Unspecified","long":"Let CMake pick the default build type.","buildType":"Unspecified"}}}},"scope":"resource"},"cmake.ctestArgs":{"type":"array","items":{"type":"string"},"description":"Additional arguments to pass to CTest. When using CMake Presets, these arguments are temporarily added to the arguments provided by the active test preset.","default":[],"scope":"resource"},"cmake.ctestDefaultArgs":{"type":"array","items":{"type":"string"},"description":"Arguments passed by default to CTest.","default":["-T","test","--output-on-failure"],"scope":"machine-overridable"},"cmake.cpackArgs":{"type":"array","when":"useCMakePresets == true","items":{"type":"string"},"description":"Additional arguments to pass to CPack (only when using presets, not supported for kits). These arguments are temporarily added to the arguments provided by the active package preset.","default":[],"scope":"resource"},"cmake.environment":{"type":"object","default":{},"description":"Environment variables to set when running CMake commands. When using CMake Presets, these are temporarily added to the environment used for CMake commands.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.configureEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during configure. When using CMake Presets, these are temporarily added to the environment provided by the active configure preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.buildEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during build. When using CMake Presets, these are temporarily added to the environment provided by the active build preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.testEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CTest. When using CMake Presets, these are temporarily added to the environment provided by the active test preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.cpackEnvironment":{"type":"object","default":{},"when":"useCMakePresets == true","description":"Environment variables to set when packaging with CPack (only when using presets, not supported for kits). These are temporarily added to the environment used for CPack runs.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.mingwSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where MinGW may be installed.","scope":"window","markdownDeprecationMessage":"**Deprecated**: Please use `#cmake.additionalCompilerSearchDirs#` instead."},"cmake.additionalCompilerSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Additional directories to search for compilers.","scope":"window"},"cmake.emscriptenSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where Emscripten may be installed.","scope":"window"},"cmake.mergedCompileCommands":{"type":"string","default":null,"description":"Recursively collect and merge all compile_commands.json found in the cmake.buildDirectory.","scope":"resource"},"cmake.copyCompileCommands":{"type":"string","default":null,"description":"Copy compile_commands.json to this location after a successful configure.","scope":"resource"},"cmake.configureOnOpen":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when they are opened.","scope":"resource","tags":["experimental"]},"cmake.configureOnEdit":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when cmake.sourceDirectory or CMakeLists.txt content are saved.","scope":"resource"},"cmake.deleteBuildDirOnCleanConfigure":{"type":"boolean","default":false,"description":"Delete the entire build directory when a clean configure is invoked.","scope":"resource"},"cmake.setBuildTypeOnMultiConfig":{"type":"boolean","default":false,"description":"Set CMAKE_BUILD_TYPE also on multi config generators.","scope":"resource"},"cmake.skipConfigureIfCachePresent":{"type":"boolean","default":null,"description":"Skip over the configure process if cache is present.","scope":"resource"},"cmake.cmakeCommunicationMode":{"type":"string","default":"automatic","enum":["legacy","serverApi","fileApi","automatic"],"description":"The protocol used to communicate between the extension and CMake.","scope":"resource"},"cmake.showSystemKits":{"type":"boolean","default":true,"description":"Include system kits in kit selection.","scope":"resource"},"cmake.ignoreKitEnv":{"type":"boolean","default":false,"description":"Do not use the kit environment variables when running CMake commands.","scope":"resource"},"cmake.buildTask":{"type":"boolean","default":false,"description":"Build using tasks.json instead of internal process.","scope":"resource"},"cmake.outputLogEncoding":{"type":"string","default":"auto","description":"Encoding of the output from external commands (eg.cmake -- build).","scope":"window"},"cmake.enableTraceLogging":{"type":"boolean","default":false,"description":"Enable trace logging to file and console (very noisy).","scope":"window"},"cmake.loggingLevel":{"type":"string","default":"info","description":"Tell what types of messages should be logged to the console.","enum":["trace","debug","info","note","warning","error","fatal"],"scope":"window"},"cmake.touchbar.visibility":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."],"scope":"window"},"cmake.touchbar.advanced":{"type":"object","scope":"window","description":"Configures advanced settings for how the extension displays buttons on a MacBook Touch Bar.","properties":{"build":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"configure":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"debug":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"launch":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]}}},"cmake.showOptionsMovedNotification":{"type":"boolean","default":true,"description":"Enables the notification regarding the status bar options moving to the Project Status View to show when the extension starts.","scope":"application"},"cmake.showConfigureWithDebuggerNotification":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if, upon a failed configure, they want to configure with the CMake Debugger.","scope":"application"},"cmake.showNotAllDocumentsSavedQuestion":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if they want to continue the build despite some files possibly not being saved. If not enabled, the build will be continued.","scope":"application"},"cmake.options.statusBarVisibility":{"type":"string","default":"hidden","markdownDescription":"Configures how the extension displays the options in the Status Bar. These settings may be overwritten by the more specific `#cmake.options.advanced.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","enum":["visible","compact","icon","hidden"],"scope":"window"},"cmake.options.advanced":{"type":"object","default":{"build":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"launch":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"debug":{"statusBarVisibility":"inherit","inheritDefault":"visible"}},"markdownDescription":"Configures the settings for individual Project Status View and status bar options. These settings may overwrite the more general `#cmake.options.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","properties":{"configure":{"type":"object","properties":{"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"configurePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"buildPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"testPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"packagePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"workflowPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"kit":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"variant":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the status message removed.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]}}},"folder":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"buildTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"build":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launchTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"debug":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launch":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"ctest":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on test results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"cpack":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on cpack results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"workflow":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on workflow run results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}}}},"cmake.additionalKits":{"type":"array","default":[],"description":"Array of paths to custom kit files.","items":{"type":"string"},"scope":"resource"},"cmake.revealLog":{"type":"string","default":"always","enum":["focus","always","never","error"],"enumDescriptions":["The log appears and the output channel takes the cursor focus.","The log appears but the output channel doesn't take the cursor focus.","The log neither appears nor takes the focus.","The log appears only when the build or the configuration fails."],"description":"Configures the settings for showing the log and focusing on the output channel."},"cmake.exportCompileCommandsFile":{"type":"boolean","default":true,"description":"Enables exporting compile_commands.json. This only is used in Kits scenarios. In Presets scenarios, please set this by using CMakePresets.json","scope":"resource"},"cmake.useCMakePresets":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"Use CMakePresets.json to configure drive CMake configure, build, and test. When using CMakePresets.json, kits, variants, and some settings in settings.json will be ignored.","scope":"resource"},"cmake.useVsDeveloperEnvironment":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"When using CMake Presets on Windows, use the Visual Studio environment as the parent environment. Selecting auto will only apply the Visual Studio environment when we detect a supported compiler (cl, clang, clang-cl, clang-cpp, clang++), or the Ninja generator is being used.","scope":"resource"},"cmake.allowCommentsInPresetsFile":{"type":"boolean","default":false,"description":"Allow the use of JSON extensions such as comments in CMakePresets.json. Please note that your CMakePresets.json file may be considered invalid by other IDEs or on the command line if you use non-standard JSON.","scope":"resource"},"cmake.allowUnsupportedPresetsVersions":{"type":"boolean","default":false,"description":"Enables the use of presets files that are using features from the versions that CMake Tools extension doesn't currently support. Unknown properties and macros will be ignored.","scope":"resource"},"cmake.launchBehavior":{"type":"string","enum":["reuseTerminal","breakAndReuseTerminal","newTerminal"],"markdownEnumDescriptions":["The launch terminal instance is reused and the target will launch as soon as the terminal is idle.","The launch terminal instance is reused and a `break` command is sent to terminate any active foreground process before launching the target.","A new terminal instance is created and the target is launched in it. Existing terminals are not automatically cleaned up."],"description":"Controls what happens with the launch terminal when you launch a target.","default":"reuseTerminal"},"cmake.ignoreCMakeListsMissing":{"type":"boolean","default":false,"markdownDescription":"If `true`, the extension will not ask the user to select a CMakeLists.txt file for configuration when one is found in the workspace but not in the root folder.","scope":"resource"},"cmake.loadCompileCommands":{"type":"boolean","default":true,"description":"Controls whether the extension reads compile_commands.json to enable single file compilation.","scope":"resource"},"cmake.automaticReconfigure":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when the kit or the configuration preset is changed.","scope":"resource"},"cmake.pinnedCommands":{"type":"array","items":{"type":"string"},"description":"List of CMake commands to pin.","default":[],"scope":"resource"},"cmake.enableAutomaticKitScan":{"type":"boolean","default":true,"description":"Enable automatic scanning for kits when a kit isn't selected. This will only take affect when CMake Presets aren't being used.","scope":"resource"}}},"keybindings":[{"key":"f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.build"},{"key":"shift+f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.buildWithTarget"},{"key":"shift+f5","command":"cmake.debugTarget","when":"!inDebugMode && inCMakeProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"key":"ctrl+f5","command":"cmake.launchTarget","when":"!inDebugMode && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"}],"viewsContainers":{"activitybar":[{"id":"cmake-view","title":"CMake","icon":"res/cmake-view-icon2.svg","when":"cmake:enableFullFeatureSet"}]},"views":{"cmake-view":[{"id":"cmake.projectStatus","name":"Project Status","when":"cmake:enableFullFeatureSet"},{"id":"cmake.outline","name":"Project Outline","when":"cmake:enableFullFeatureSet"},{"id":"cmake.pinnedCommands","name":"Pinned Commands","when":"cmake:enableFullFeatureSet"}]},"viewsWelcome":[{"view":"cmake.pinnedCommands","contents":"No CMake commands have been pinned yet.\n[Add Command](command:cmake.pinnedCommands.add)","when":"cmake:enableFullFeatureSet"}],"yamlValidation":[{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"}],"jsonValidation":[{"fileMatch":"cmake-variants.json","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-kits.json","url":"cmake-tools-schema://schemas/kits-schema.json"},{"fileMatch":"CMakePresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v8-schema.json"},{"fileMatch":"CMakeUserPresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v8-schema.json"}]},"_moduleAliases":{"@cmt":"out/src/","@test":"out/test/"},"scripts":{"vscode:prepublish":"yarn run compile-production","compile":"yarn install && webpack --mode development","compile-watch":"yarn install && webpack --mode development --watch --progress","compile-production":"yarn install && yarn run translations-generate && webpack --env BUILD_VSCODE_NLS=true --mode production","translations-export":"gulp translations-export","translations-generate":"gulp translations-generate","translations-import":"gulp translations-import","package":"vsce package --yarn -o cmake-tools.vsix","pretest":"tsc -p test.tsconfig.json","lint":"gulp lint","smokeTests":"yarn run pretest && node ./out/test/smoke/badProject/runTest.js && node ./out/test/smoke/goodProject/runTest.js && node ./out/test/smoke/noCtest/runTest.js","unitTests":"yarn run pretest && node ./out/test/unit-tests/runTest.js","extensionTestsSuccessfulBuild":"yarn run pretest && node ./out/test/extension-tests/successful-build/runTest.js","extensionTestsSingleRoot":"yarn run pretest && node ./out/test/extension-tests/single-root-UI/runTest.js","extensionTestsMultiRoot":"yarn run pretest && node ./out/test/extension-tests/multi-root-UI/runTest.js","backendTests":"node ./node_modules/mocha/bin/_mocha -u tdd --timeout 999999 --colors -r ts-node/register -r tsconfig-paths/register ./test/backend-unit-tests/**/*.test.ts"},"devDependencies":{"@octokit/rest":"^18.1.1","@types/ajv":"^0.0.5","@types/chai":"^4.2.15","@types/chai-as-promised":"^7.1.3","@types/chai-string":"^1.4.2","@types/js-yaml":"^4.0.0","@types/json5":"~0.0.30","@types/lodash":"4.14.202","@types/mocha":"^8.2.2","@types/node":"^20.14.2","@types/rimraf":"^3.0.0","@types/sinon":"~9.0.10","@types/tmp":"^0.2.0","@types/vscode":"1.63.0","@types/which":"~2.0.0","@types/xml2js":"^0.4.8","@types/uuid":"~8.3.3","@typescript-eslint/eslint-plugin":"^5.25.0","@typescript-eslint/eslint-plugin-tslint":"^5.25.0","@typescript-eslint/parser":"^5.25.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^3.1.0","chai":"^4.3.0","chai-as-promised":"^7.1.1","chai-string":"^1.5.0","eslint":"^8.15.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.2.8","event-stream":"^4.0.1","fs-extra":"^9.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","husky":"^4.3.8","jsonc-parser":"^3.0.0","mocha":"^8.3.2","module-alias":"^2.2.2","node-loader":"^1.0.2","parse-git-config":"^3.0.0","sinon":"~9.2.4","ts-loader":"^8.0.17","ts-node":"^9.1.1","tsconfig-paths":"^3.11.0","tslint":"^6.1.3","typescript":"^4.1.5","vscode-cmake-tools":"^1.2.0","vscode-nls-dev":"^3.3.2","webpack":"^5.76.0","webpack-cli":"^4.5.0"},"dependencies":{"@types/string.prototype.matchall":"^4.0.4","ajv":"^7.1.0","chokidar":"^3.5.1","handlebars":"^4.7.7","iconv-lite":"^0.6.2","js-yaml":"^4.0.0","json5":"^2.2.2","minimist":"^1.2.6","open":"^7.4.1","p-limit":"^3.1.0","rimraf":"^3.0.2","string.prototype.matchall":"^4.0.10","tmp":"^0.2.1","vscode-cpptools":"^6.1.0","@vscode/extension-telemetry":"^0.9.6","vscode-nls":"^5.0.0","vscode-tas-client":"^0.1.45","which":"~2.0.2","xml2js":"^0.5.0","uuid":"~8.3.2","lodash":"^4.17.21"},"resolutions":{"ansi-regex":"^5.0.1","chokidar":"^3.5.1","glob-parent":"^5.1.2","hosted-git-info":"^3.0.8","https-proxy-agent":"^5.0.0","**/minimist":"^1.2.5","nanoid":"^3.1.31","postcss":"^8.2.10","yargs-parser":"^20.2.4","xml2js":"^0.5.0","tsconfig-paths*/json5":"^1.0.2","minimatch":"^3.0.5","**/braces":"^3.0.3"},"extensionPack":["KylinIdeTeam.cmake-intellisence"],"packageManager":"yarn@1.22.19"},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/kylinideteam.kylin-cmake-tools-0.0.4-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"KylinIdeTeam","metadata":{"installedTimestamp":1752772631349,"pinned":false,"source":"gallery","id":"b83703ef-ad83-4e08-8c01-463e1ea145ff","publisherId":"d7162f76-ba97-421e-ad7b-61d4e260c7d1","publisherDisplayName":"KylinIdeTeam","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":16255999},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"redhat.vscode-yaml","uuid":"2061917f-f76a-458a-8da9-f162de22b97e"},"manifest":{"name":"vscode-yaml","displayName":"YAML","description":"YAML Language Support by Red Hat, with built-in Kubernetes syntax support","author":"Red Hat","contributors":[{"name":"Joshua Pinkney","email":"jpinkney@redhat.com"},{"name":"Yevhen Vydolob","email":"yvydolob@redhat.com"}],"license":"MIT","version":"1.18.0","publisher":"redhat","bugs":"https://github.com/redhat-developer/vscode-yaml/issues","repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-yaml"},"icon":"icon/icon128.png","engines":{"npm":">=7.0.0","vscode":"^1.63.0"},"categories":["Programming Languages","Linters","Snippets","Formatters"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onLanguage:yaml","onLanguage:dockercompose","onLanguage:github-actions-workflow"],"keywords":["kubernetes","yaml","autocompletion","validation"],"main":"./dist/extension","browser":"./dist/extension-web","contributes":{"languages":[{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yml",".eyaml",".eyml",".yaml"],"filenames":[".clang-format","_clang-format",".clang-tidy"],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"}],"configuration":{"title:":"YAML","properties":{"redhat.telemetry.enabled":{"type":"boolean","default":null,"markdownDescription":"Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).","scope":"window","tags":["telemetry","usesOnlineServices"]},"yaml.yamlVersion":{"type":"string","default":"1.2","enum":["1.1","1.2"],"markdownDescription":"Default YAML spec version"},"yaml.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the YAML language service."},"yaml.schemas":{"type":"object","default":{},"description":"Associate schemas to YAML files in the current workspace"},"yaml.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default YAML formatter"},"yaml.format.singleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes"},"yaml.format.bracketSpacing":{"type":"boolean","default":true,"description":"Print spaces between brackets in objects"},"yaml.format.proseWrap":{"type":"string","default":"preserve","enum":["preserve","never","always"],"description":"Always: wrap prose if it exceeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is"},"yaml.format.printWidth":{"type":"integer","default":80,"description":"Specify the line length that the printer will wrap on"},"yaml.validate":{"type":"boolean","default":true,"description":"Enable/disable validation feature"},"yaml.hover":{"type":"boolean","default":true,"description":"Enable/disable hover feature"},"yaml.completion":{"type":"boolean","default":true,"description":"Enable/disable completion feature"},"yaml.customTags":{"type":"array","default":[],"description":"Custom tags for the parser to use"},"yaml.schemaStore.enable":{"type":"boolean","default":true,"description":"Automatically pull available YAML schemas from JSON Schema Store"},"yaml.schemaStore.url":{"type":"string","default":"https://www.schemastore.org/api/json/catalog.json","description":"URL of schema store catalog to use"},"yaml.disableAdditionalProperties":{"type":"boolean","default":false,"description":"Globally set additionalProperties to false for all objects. So if its true, no extra properties are allowed inside yaml."},"yaml.disableDefaultProperties":{"type":"boolean","default":false,"description":"Disable adding not required properties with default values into completion text."},"yaml.maxItemsComputed":{"type":"integer","default":5000,"description":"The maximum number of outline symbols and folding regions computed (limited for performance reasons)."},"yaml.suggest.parentSkeletonSelectedFirst":{"type":"boolean","default":false,"description":"If true, the user must select some parent skeleton first before autocompletion starts to suggest the rest of the properties. When yaml object is not empty, autocompletion ignores this setting and returns all properties and skeletons"},"yaml.style.flowMapping":{"type":"string","enum":["allow","forbid"],"default":"allow","description":"Forbid flow style mappings"},"yaml.style.flowSequence":{"type":"string","enum":["allow","forbid"],"default":"allow","description":"Forbid flow style sequences"},"yaml.keyOrdering":{"type":"boolean","default":false,"description":"Enforces alphabetical ordering of keys in mappings when set to true"},"yaml.extension.recommendations":{"type":"boolean","default":"true","description":"Suggest additional extensions based on YAML usage."}}},"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.quickSuggestions":{"other":true,"comments":false,"strings":true},"editor.autoIndent":"keep"}}},"extensionDependencies":[],"scripts":{"build":"yarn run clean && yarn run lint && yarn run vscode:prepublish","check-dependencies":"node ./scripts/check-dependencies.js","clean":"rimraf out && rimraf dist","compile":"webpack --mode none","format":"prettier --write .","lint":"eslint -c .eslintrc.js --ext .ts src test","test":"yarn test-compile && sh scripts/e2e.sh","ui-test":"yarn test-compile && extest setup-and-run -y out/test/ui-test/allTestsSuite.js -c 1.76.2","vscode:prepublish":"webpack --mode production","watch":"webpack --mode development --watch --info-verbosity verbose","test-compile":"yarn clean && tsc -p ./ && webpack --mode development","run-in-chromium":"npm run compile && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."},"devDependencies":{"@types/chai":"^4.2.12","@types/fs-extra":"^9.0.6","@types/mocha":"^2.2.48","@types/node":"^12.12.6","@types/sinon":"^10.0.6","@types/sinon-chai":"^3.2.5","@types/vscode":"^1.63.0","@types/webpack":"^4.4.10","@typescript-eslint/eslint-plugin":"^7.11.0","@typescript-eslint/parser":"^7.11.0","@vscode/test-electron":"^2.4.0","@vscode/test-web":"0.0.11","buffer":"^6.0.3","chai":"^4.2.0","crypto-browserify":"^3.12.0","eslint":"^8.57.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","glob":"^7.1.6","mocha":"^9.1.2","path-browserify":"^1.0.1","prettier":"2.2.1","process":"^0.11.10","rimraf":"^3.0.2","sinon":"^12.0.1","sinon-chai":"^3.7.0","ts-loader":"^9.2.5","ts-node":"^3.3.0","typescript":"^5.4.5","umd-compat-loader":"^2.1.2","url":"^0.11.0","util":"^0.12.5","vscode-extension-tester":"^5.3.0","webpack":"^5.76.1","webpack-cli":"^5.0.1"},"dependencies":{"@redhat-developer/vscode-redhat-telemetry":"^0.8.0","fs-extra":"^9.1.0","request-light":"^0.5.7","vscode-languageclient":"7.0.0","vscode-nls":"^3.2.1","vscode-uri":"^2.0.3","whatwg-fetch":"^3.6.2","yaml-language-server":"1.18.0"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/redhat.vscode-yaml-1.18.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Red Hat","metadata":{"installedTimestamp":1752772631349,"pinned":false,"source":"gallery","id":"2061917f-f76a-458a-8da9-f162de22b97e","publisherId":"eed56242-9699-4317-8bc7-e9f4b9bdd3ff","publisherDisplayName":"Red Hat","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":5543607},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"kylinideteam.cppdebug","uuid":"990e1ff7-cc55-4a01-ae62-39bb4ca3136e"},"manifest":{"name":"cppdebug","displayName":"C/C++ Debug (gdb)","description":"Integrates MIEngine, the same DA used by Microsoft's C/C++ extension, to support debugging C/C++ programs using gdb.","version":"0.0.9","engines":{"vscode":"^1.68.0"},"categories":["Debuggers","Other"],"keywords":["C","C++","KylinIdeDev","KylinIdeDevDebug","KylinIdeDevCYuYan","KylinIdeDevCPlusPlus","gdb","debug","MIEngine"],"activationEvents":["onLanguage:c","onLanguage:cpp","onDebugResolve:cppdbg","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess"],"downloadUrl":"https://gitee.com/openkylin/extensions-repo/tree/master/KylinIDETeam/cppdebug","author":{"name":"quanzhuo","email":"quanzhuo@kylinos.cn"},"repository":{"type":"git","url":"https://gitee.com/quanzhuo/cpp-debug"},"bugs":{"url":"https://gitee.com/quanzhuo/cpp-debug/issues","email":"quanzhuo@kylinos.cn"},"publisher":"KylinIdeTeam","icon":"images/icon.png","main":"./dist/extension.js","contributes":{"debuggers":[{"type":"cppdbg","label":"C/C++ (gdb)","languages":["ada","c","cpp","cuda-cpp","rust"],"windows":{"program":"./debugAdapter/OpenDebugAD7.exe"},"linux":{"program":"./debugAdapter/OpenDebugAD7"},"osx":{"program":"./debugAdapter/OpenDebugAD7"},"variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceFolder}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target.","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"postRemoteConnectCommands":{"type":"array","description":"One or more commands that execute after remote connection to a debug server.","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"anyOf":[{"type":"string","default":""},{"type":"array","default":[],"items":{"type":"string"}}],"description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting."},"svdPath":{"type":"string","description":"%c_cpp.debuggers.cppdbg.visualizerFile.description","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"useExtendedRemote":{"type":"boolean","description":"Connect to the MI Debugger Server with target extended-remote mode.","default":false},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to the debug server to launch. Defaults to null. It is used in conjunction with either \"miDebugServerAddress\" or your own server with a \"customSetupCommand\" that runs \"-target-select remote <server:port>\".","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}]},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false},"natvisDiagnostics":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":false}]}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"stopAtConnect":{"type":"boolean","description":"If true, the debugger should stop after connecting to the target. If false, the debugger will continue after connecting. Defaults to false.","default":false},"hardwareBreakpoints":{"description":"Explicit control of hardware breakpoint behavior for remote targets.","default":{},"type":"object","properties":{"require":{"type":"boolean","description":"If true, always use hardware breakpoints. Defaults to false.","default":false},"limit":{"type":"integer","description":"Optional limit on the number of available hardware breakpoints to use. Only enforced when \"require\" is true and \"limit\" is greater than 0. Defaults to 0.","default":0}}},"unknownBreakpointHandling":{"type":"string","enum":["throw","stop"],"default":"throw","description":"Controls how breakpoints set externally (usually via raw GDB commands) are handled when hit.\nAllowed values are \"throw\", which acts as if an exception was thrown by the application, and \"stop\", which only pauses the debug session. The default value is \"throw\"."},"variables":{"type":"object","description":"Variables for recursive substitution in this launch configuration. Each variable may refer to others.","default":{"<variable-name>":"<variable-value>"},"properties":{},"additionalProperties":{"type":"string","description":"Variable for recursive substitution in this launch configuration. The value may refer to other variables.","default":""}},"deploySteps":{"type":"array","description":"Steps needed to deploy the application. Order matters.","items":{"anyOf":[{"type":"object","description":"Copy files using SCP or rsync.","default":{},"required":["type","files","host","targetDir"],"properties":{"type":{"type":"string","description":"Copy files using SCP or rsync.","default":"","enum":["scp","rsync"]},"files":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Files to be copied. Supports path pattern.","default":""},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"targetDir":{"type":"string","description":"Target directory.","default":""},"recursive":{"type":"boolean","description":"If true, copies folders recursively.","default":"true"},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}},"allOf":[{"if":{"properties":{"type":{"const":"scp"}}},"then":{"properties":{"scpPath":{"type":"string","description":"Optional full path to SCP. Assumes SCP is on PATH if not specified","default":""}}}},{"if":{"properties":{"type":{"const":"rsync"}}},"then":{"properties":{"rsyncPath":{"type":"string","description":"Optional full path to rsync. Assumes rsync is on PATH if not specified","default":""}}}}]},{"type":"object","description":"SSH command step.","default":{},"required":["type","host","command"],"properties":{"type":{"type":"string","description":"SSH command step.","default":"","enum":["ssh"]},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"command":{"type":"string","description":"Command to be executed via SSH. The command after '-c' in SSH command.","default":""},"sshPath":{"type":"string","description":"Optional full path to SSH. Assumes SSH is on PATH if not specified","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"Shell command step.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"Shell command step.","default":"","enum":["shell"]},"command":{"type":"string","description":"Shell command to be executed.","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":"","enum":["command"]},"command":{"type":"string","description":"VS Code command to be invoked.","default":""},"args":{"type":"array","description":"Arguments to the VS Code command.","items":{"type":"string"}}}}]},"default":[]}}},"attach":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceFolder}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"useExtendedRemote":{"type":"boolean","description":"Connect to the MI Debugger Server with target extended-remote mode.","default":false},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}]},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false},"natvisDiagnostics":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":false}]}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"variables":{"type":"object","description":"Variables for recursive substitution in this launch configuration. Each variable may refer to others.","default":{"<variable-name>":"<variable-value>"},"properties":{},"additionalProperties":{"type":"string","description":"Variable for recursive substitution in this launch configuration. The value may refer to other variables.","default":""}},"deploySteps":{"type":"array","description":"Steps needed to deploy the application. Order matters.","items":{"anyOf":[{"type":"object","description":"Copy files using SCP or rsync.","default":{},"required":["type","files","host","targetDir"],"properties":{"type":{"type":"string","description":"Copy files using SCP or rsync.","default":"","enum":["scp","rsync"]},"files":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Files to be copied. Supports path pattern.","default":""},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"targetDir":{"type":"string","description":"Target directory.","default":""},"recursive":{"type":"boolean","description":"If true, copies folders recursively.","default":"true"},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}},"allOf":[{"if":{"properties":{"type":{"const":"scp"}}},"then":{"properties":{"scpPath":{"type":"string","description":"Optional full path to SCP. Assumes SCP is on PATH if not specified","default":""}}}},{"if":{"properties":{"type":{"const":"rsync"}}},"then":{"properties":{"rsyncPath":{"type":"string","description":"Optional full path to rsync. Assumes rsync is on PATH if not specified","default":""}}}}]},{"type":"object","description":"SSH command step.","default":{},"required":["type","host","command"],"properties":{"type":{"type":"string","description":"SSH command step.","default":"","enum":["ssh"]},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"command":{"type":"string","description":"Command to be executed via SSH. The command after '-c' in SSH command.","default":""},"sshPath":{"type":"string","description":"Optional full path to SSH. Assumes SSH is on PATH if not specified","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"Shell command step.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"Shell command step.","default":"","enum":["shell"]},"command":{"type":"string","description":"Shell command to be executed.","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":"","enum":["command"]},"command":{"type":"string","description":"VS Code command to be invoked.","default":""},"args":{"type":"array","description":"Arguments to the VS Code command.","items":{"type":"string"}}}}]},"default":[]}}}},"initialConfigurations":[{"name":"C/C++ Debug (gdb Launch)","type":"cppdbg","request":"launch","program":"enter program name, for example: ${workspaceFolder}/a.out","args":[],"stopAtEntry":true,"cwd":"${workspaceFolder}","environment":[],"MIMode":"gdb","setupCommands":[{"description":"Enable pretty-printing for gdb","text":"-enable-pretty-printing","ignoreFailures":true}]}],"configurationSnippets":[{"label":"C/C++ Debug (gdb Launch)","description":"Launch a C/C++ program","body":{"name":"C/C++ Debug (gdb Launch)","type":"cppdbg","request":"launch","program":"^\"enter program name, for example: \\${workspaceFolder}/a.out\"","args":[],"stopAtEntry":true,"cwd":"^\"\\${workspaceFolder}\"","environment":[],"MIMode":"gdb","setupCommands":[{"description":"Enable pretty-printing for gdb","text":"-enable-pretty-printing","ignoreFailures":true}]}},{"label":"C/C++ Debug (gdb Attach)","description":"Attach to a running C/C++ program","body":{"name":"C/C++ Debug (gdb Attach)","type":"cppdbg","request":"attach","program":"^\"enter program name, for example: \\${workspaceFolder}/a.out\"","processId":"^\"\\${command:pickProcess}\"","MIMode":"gdb","setupCommands":[{"description":"Enable pretty-printing for gdb","text":"-enable-pretty-printing","ignoreFailures":true}]}}]}],"breakpoints":[{"language":"ada"},{"language":"c"},{"language":"cpp"},{"language":"cuda-cpp"},{"language":"cuda"},{"language":"rust"}]},"scripts":{"compile":"npm run check-types && node esbuild.js","check-types":"tsc --noEmit","watch":"npm-run-all -p watch:*","watch:esbuild":"node esbuild.js --watch","watch:tsc":"tsc --noEmit --watch --project tsconfig.json","vscode:prepublish":"npm run package","package":"npm run check-types && node esbuild.js --production"},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/mocha":"^10.0.8","@types/node":"20.x","@types/vscode":"^1.68.0","@typescript-eslint/eslint-plugin":"^8.7.0","@typescript-eslint/parser":"^8.7.0","@vscode/test-cli":"^0.0.10","@vscode/test-electron":"^2.4.1","esbuild":"^0.24.0","eslint":"^9.11.1","node-fetch":"^3.3.2","npm-run-all":"^4.1.5","tar":"^7.4.3","typescript":"^5.6.2"},"dependencies":{"comment-json":"^4.2.5","fs-extra":"^11.2.0"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/kylinideteam.cppdebug-0.0.9-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"KylinIdeTeam","metadata":{"installedTimestamp":1752772631348,"pinned":false,"source":"gallery","id":"990e1ff7-cc55-4a01-ae62-39bb4ca3136e","publisherId":"d7162f76-ba97-421e-ad7b-61d4e260c7d1","publisherDisplayName":"KylinIdeTeam","targetPlatform":"linux-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":78102943},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"kylinideteam.kylin-clangd","uuid":"989a5619-dfeb-48de-a4ea-849ae1f1fa89"},"manifest":{"name":"kylin-clangd","displayName":"Kylin Clangd","description":"Fork of clangd, add schema validation for .clangd, .clang-format, .clang-tidy files","version":"0.4.0","publisher":"KylinIdeTeam","license":"MIT","homepage":"https://gitee.com/openKylin/kylin-clangd","icon":"icon.png","engines":{"vscode":"^1.65.0"},"downloadUrl":"https://gitee.com/openKylin/kylin-clangd/releases","categories":["Programming Languages","Linters","Formatters"],"keywords":["C","C++","clang-tidy","clang-format","clangd","KylinIdeDev","KylinIdeDevCYuYan","KylinIdeDevCPlusPlus","KylinIdeDevEdit"],"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onLanguage:objective-c","onLanguage:objective-cpp","onCommand:clangd.activate","onCommand:clangd.install","onCommand:clangd.update"],"main":"./out/bundle","scripts":{"esbuild":"esbuild ./src/extension.ts --bundle --outfile=out/bundle.js --external:vscode --format=cjs --platform=node","vscode:prepublish":"npm run check-ts && npm run esbuild -- --minify --keep-names","compile":"npm run esbuild -- --sourcemap","check-ts":"tsc -noEmit -p ./","format":"clang-format -i --glob=\"{src,test}/*.ts\"","test-compile":"tsc -p ./ && npm run compile","test":"npm run test-compile && node ./out/test/index.js","package":"node -e \"fs.rmSync('out', {'recursive': true})\" && vsce package --baseImagesUrl https://gitee.com/openKylin/kylin-clangd/raw/master"},"dependencies":{"@clangd/install":"0.1.17","abort-controller":"^3.0.0","comment-json":"^4.2.3","tar":"^7.4.3","vscode-languageclient":"8.0.2","which":"^3.0.1"},"devDependencies":{"@types/glob":"^7.1.1","@types/mocha":"^7.0.2","@types/node":"18.x","@types/sinon":"^10.0.16","@types/tar":"^6.1.13","@types/vscode":"1.65.0","@types/which":"^3.0.0","clang-format":"^1.7.0","esbuild":"^0.14.13","glob":"^7.1.4","mocha":"^9.2.0","sinon":"^15.2.0","typescript":"^4.5.5","vsce":"^2.7.0","vscode-languageserver-types":"^3.17.5","vscode-test":"^1.3.0"},"repository":{"type":"git","url":"https://gitee.com/openKylin/kylin-clangd.git"},"qna":"marketplace","capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"In restricted mode clangd.path and clangd.arguments are not respected.","restrictedConfigurations":["clangd.path","clangd.useScriptAsExecutable","clangd.arguments"]}},"contributes":{"languages":[{"id":"cpp","filenamePatterns":["**/include/c++/**","**/MSVC/*/include/**"],"firstLine":"^/[/*].*-\\*-\\s*C\\+\\+\\s*-\\*-.*"},{"id":"yaml","filenames":[".clangd",".clang-format",".clang-tidy"]}],"configuration":{"type":"object","title":"clangd","properties":{"clangd.path":{"type":"string","default":"clangd","scope":"machine-overridable","description":"The path to clangd executable, e.g.: /usr/bin/clangd."},"clangd.useScriptAsExecutable":{"type":"boolean","default":false,"scope":"machine-overridable","description":"Allows the path to be a script e.g.: clangd.sh."},"clangd.arguments":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional command line arguments to pass to clangd."},"clangd.trace":{"type":"string","description":"Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format."},"clangd.fallbackFlags":{"type":"array","default":[],"items":{"type":"string"},"description":"Extra clang flags used to parse files when no compilation database is found."},"clangd.serverCompletionRanking":{"type":"boolean","default":true,"description":"Always rank completion items on the server as you type. This produces more accurate results at the cost of higher latency than client-side filtering."},"clangd.restartAfterCrash":{"type":"boolean","default":true,"description":"Auto restart clangd (up to 4 times) if it crashes."},"clangd.checkUpdates":{"type":"boolean","default":false,"description":"Check for language server updates on startup."},"clangd.detectExtensionConflicts":{"type":"boolean","default":true,"description":"Warn about conflicting extensions and suggest disabling them."},"clangd.onConfigChanged":{"type":"string","default":"restart","description":"What to do when configuration changes (e.g., clangd configuration file changes, compile database file changes, extension settings changes, etc.) require restarting the clangd language server","enum":["prompt","restart","ignore"],"enumDescriptions":["Prompt the user for restarting the server","Automatically restart the server","Do nothing"]},"clangd.inactiveRegions.useBackgroundHighlight":{"type":"boolean","default":false,"description":"Use a background highlight rather than opacity to identify inactive preprocessor regions."},"clangd.inactiveRegions.opacity":{"type":"number","default":0.55,"description":"Opacity of inactive regions (used only if clangd.inactiveRegions.useBackgroundHighlight=false)"},"clangd.enableCodeCompletion":{"type":"boolean","default":true,"description":"Enable code completion provided by the language server"},"clangd.enableHover":{"type":"boolean","default":true,"description":"Enable hovers provided by the language server"},"clangd.enable":{"type":"boolean","default":true,"description":"Enable clangd language server features"},"clangd.additionalIncludePaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Code completion: Add header include paths.","deprecationMessage":"This setting is deprecated, please add header include paths in the .clangd file."},"clangd.enableClangTidyDiagnostic":{"type":"boolean","default":true,"description":"Enable clang-tidy diagnostics"},"clangd.headerInsertion":{"type":"string","default":"iwyu","description":"Controls how clangd inserts missing #include directives.","enum":["iwyu","never"],"enumDescriptions":["Always include the canonical header, even if it's already transitively included","Never insert missing #include directives automatically"]},"clangd.useBuiltInClangdIfAvailable":{"type":"boolean","default":true,"description":"Use built-in clangd server if available (currently only available for linux-x64 and linux-arm64), otherwise use the clangd binary specified in clangd.path."}}},"colors":[{"id":"clangd.inactiveRegions.background","description":"Background color of inactive code regions (used only if clangd.inactiveRegions.useBackgroundHighlight=true)","defaults":{"dark":"#1212124C","light":"#DCDCDC4C","highContrast":"#FCFCFC4C"}}],"commands":[{"command":"clangd.switchheadersource","category":"Kylin Clangd","title":"Switch between Source/Header"},{"command":"clangd.install","category":"Kylin Clangd","title":"Install clangd language server"},{"command":"clangd.update","category":"Kylin Clangd","title":"Check update for clangd"},{"command":"clangd.activate","category":"Kylin Clangd","title":"Manually activate Kylin Clangd extension"},{"command":"clangd.restart","category":"Kylin Clangd","title":"Restart the clangd language server"},{"command":"clangd.typeHierarchy","category":"Kylin Clangd","title":"Open Type Hierarchy"},{"command":"clangd.typeHierarchy.viewParents","category":"Kylin Clangd","title":"Types: Show Base Classes","icon":"$(triangle-up)"},{"command":"clangd.typeHierarchy.viewChildren","category":"Kylin Clangd","title":"Types: Show Derived Classes","icon":"$(triangle-down)"},{"command":"clangd.typeHierarchy.close","category":"Kylin Clangd","enablement":"clangd.typeHierarchyView.visible","title":"Close type hierarchy view","icon":"$(panel-close)"},{"command":"clangd.memoryUsage","category":"Kylin Clangd","title":"Show memory usage of clangd","enablement":"clangd.memoryUsage.supported","icon":"$(refresh)"},{"command":"clangd.memoryUsage.close","category":"Kylin Clangd","enablement":"clangd.memoryUsage.visible","title":"Close memory usage view","icon":"$(panel-close)"},{"command":"clangd.ast","category":"Kylin Clangd","title":"Show AST","enablement":"clangd.ast.supported","icon":"$(list-tree)"},{"command":"clangd.ast.close","category":"Kylin Clangd","enablement":"clangd.ast.visible","title":"Close AST view","icon":"$(panel-close)"},{"command":"clangd.projectConfig","category":"Kylin Clangd","title":"Open project configuration file","icon":"$(gear)"},{"command":"clangd.userConfig","category":"Kylin Clangd","title":"Open user configuration file","icon":"$(gear)"},{"command":"clangd.inlayHints.toggle","category":"Kylin Clangd","title":"Toggle inlay hints","enablement":"clangd.inlayHints.supported"},{"command":"clangd.showDocumentation","category":"Kylin Clangd","title":"Show symbol documentation under cursor"},{"command":"clangd.registerDocumentationProvider","category":"Kylin Clangd","title":"Register Documentation Provider","enablement":"false"},{"command":"clangd.createClangdConfigFile","category":"Kylin Clangd","title":"Create clangd configuration file in workspace folder"}],"keybindings":[{"command":"clangd.switchheadersource","key":"Alt+o","mac":"Alt+cmd+o","when":"(resourceLangId == c || resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp) && editorTextFocus"},{"command":"clangd.typeHierarchy","key":"Shift+Alt+t","when":"(resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp) && editorTextFocus"},{"command":"clangd.showDocumentation","key":"Shift+f1","when":"editorTextFocus && (editorLangId == cpp || editorLangId == c)"}],"menus":{"editor/context":[{"command":"clangd.typeHierarchy","when":"resourceLangId == cpp && clangd.enableTypeHierarchy","group":"0_navigation@4","_comment":"see https://github.com/microsoft/vscode-references-view/blob/f63eaed9934ca5ecc8f3fb3ca096f38c6e5e181f/package.json#L162"},{"command":"clangd.switchheadersource","when":"resourceLangId == c || resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp","group":"0_navigation@5"},{"command":"clangd.ast","when":"(resourceLangId == c || resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp) && clangd.ast.supported"}],"view/title":[{"command":"clangd.typeHierarchy.viewParents","when":"view == clangd.typeHierarchyView","group":"navigation"},{"command":"clangd.typeHierarchy.viewChildren","when":"view == clangd.typeHierarchyView","group":"navigation"},{"command":"clangd.typeHierarchy.close","when":"view == clangd.typeHierarchyView","group":"navigation"},{"command":"clangd.memoryUsage.close","when":"view == clangd.memoryUsage","group":"navigation"},{"command":"clangd.memoryUsage","when":"view == clangd.memoryUsage","group":"navigation"},{"command":"clangd.ast.close","when":"view == clangd.ast","group":"navigation"}],"commandPalette":[{"command":"clangd.typeHierarchy.viewParents","when":"resourceLangId == cpp"},{"command":"clangd.typeHierarchy.viewChildren","when":"resourceLangId == cpp"},{"command":"clangd.memoryUsage","when":"clangd.memoryUsage.supported"},{"command":"clangd.showDocumentation","when":"editorTextFocus && (editorLangId == cpp || editorLangId == c)"},{"command":"clangd.registerDocumentationProvider","when":"false"},{"command":"clangd.createClangdConfigFile","when":"true"}]},"views":{"explorer":[{"id":"clangd.typeHierarchyView","name":"Type Hierarchy","when":"clangd.typeHierarchyVisible"},{"id":"clangd.memoryUsage","name":"Clangd Memory Usage","when":"clangd.memoryUsage.hasData"},{"id":"clangd.ast","name":"AST","when":"clangd.ast.hasData"}]},"yamlValidation":[{"fileMatch":".clang-tidy","url":"./res/schemas/clang-tidy.json"},{"fileMatch":".clang-format","url":"./res/schemas/clang-format.json"},{"fileMatch":".clangd","url":"./res/schemas/clangd.json"}]},"extensionPack":["redhat.vscode-yaml"]},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/kylinideteam.kylin-clangd-0.4.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"KylinIdeTeam","metadata":{"installedTimestamp":1752772631349,"pinned":false,"source":"gallery","id":"989a5619-dfeb-48de-a4ea-849ae1f1fa89","publisherId":"d7162f76-ba97-421e-ad7b-61d4e260c7d1","publisherDisplayName":"KylinIdeTeam","targetPlatform":"linux-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":27329525},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-dotnettools.vscode-dotnet-runtime","uuid":"1aab81a1-b3d9-4aef-976b-577d5d90fe3f"},"manifest":{"name":"vscode-dotnet-runtime","repository":{"type":"git","url":"https://github.com/dotnet/vscode-dotnet-runtime.git"},"bugs":{"url":"https://github.com/dotnet/vscode-dotnet-runtime/issues"},"license":"MIT","author":"Microsoft Corporation","displayName":".NET Install Tool","description":"This extension installs and manages different versions of the .NET SDK and Runtime.","connectionString":"InstrumentationKey=02dc18e0-7494-43b2-b2a3-18ada5fcb522;IngestionEndpoint=https://westus2-0.in.applicationinsights.azure.com/;LiveEndpoint=https://westus2.livediagnostics.monitor.azure.com/;ApplicationId=e8e56970-a18a-4101-b7d1-1c5dd7c29eeb","icon":"images/dotnetIcon.png","version":"2.3.6","publisher":"ms-dotnettools","engines":{"vscode":"^1.99.0"},"categories":["Other"],"keywords":[".NET",".NET Core","dotnet","Extension Authoring","runtime"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onStartupFinished"],"main":"./dist/extension.js","types":"./dist/extension.d.ts","contributes":{"commands":[{"command":"dotnet.reportIssue","title":"Report an issue with the .NET Install Tool.","category":".NET Install Tool"},{"command":"dotnet.acquireGlobalSDKPublic","title":"Install the .NET SDK System-Wide.","category":".NET Install Tool"},{"command":"dotnet.uninstallPublic","title":"Uninstall .NET.","category":".NET Install Tool"},{"command":"dotnet.resetData","title":"Reset Extension Data (Uninstalls All Installations, Which May Cause Other Extensions To Fail. Uninstall Dependent Extensions First)","category":".NET Install Tool","enablement":"config.dotnetAcquisitionExtension.showResetDataCommand"}],"configuration":{"title":".NET Install Tool","properties":{"dotnetAcquisitionExtension.enableTelemetry":{"type":"boolean","default":true,"description":"Enable Telemetry for the .NET Install Tool. Restart VS Code to apply changes."},"dotnetAcquisitionExtension.enablePreviewFeatures":{"type":"boolean","default":false,"description":"Enable Preview Features for the Extension. Restart VS Code to apply changes."},"dotnetAcquisitionExtension.installTimeoutValue":{"type":"number","default":600,"description":"Timeout for installing .NET in seconds."},"dotnetAcquisitionExtension.existingDotnetPath":{"type":"array","markdownDescription":"The path to an existing .NET host executable for an extension's code to run under, not for your project to run under.\nRestart VS Code to apply changes.\n\n⚠️ This is NOT the .NET Runtime that your project will use to run. Extensions such as `C#`, `C# DevKit`, and more have components written in .NET. This .NET PATH is the `dotnet.exe` that these extensions will use to run their code, not your code.\n\nUsing a path value in which .NET does not meet the requirements of a specific extension will cause that extension to fail.\n\n🚀 The version of .NET that is used for your project is determined by the .NET host, or dotnet.exe. The .NET host picks a runtime based on your project. To use a specific version of .NET for your project, install the .NET SDK using the `.NET Install Tool - Install SDK System-Wide` command, install .NET manually using [our instructions](https://dotnet.microsoft.com/download), or edit your PATH environment variable to point to a `dotnet.exe` that has an `/sdk/` folder with only one SDK.","description":"The path to an existing .NET host executable for an extension's code to run under, not for your project to run under.\nRestart VS Code to apply changes.\n\n⚠️ This is NOT the .NET Runtime that your project will use to run. Extensions such as 'C#', 'C# DevKit', and more have components written in .NET. This .NET PATH is the 'dotnet.exe' that these extensions will use to run their code, not your code.\n\nUsing a path value in which .NET does not meet the requirements of a specific extension will cause that extension to fail.\n\n🚀 The version of .NET that is used for your project is determined by the .NET host, or dotnet.exe. The .NET host picks a runtime based on your project. To use a specific version of .NET for your project, install the .NET SDK using the '.NET Install Tool - Install SDK System-Wide' command, use the instructions at https://dotnet.microsoft.com/download to manually install the .NET SDK, or edit your PATH environment variable to point to a 'dotnet.exe' that has an '/sdk/' folder with only one SDK.","examples":["C:\\Program Files\\dotnet\\dotnet.exe","/usr/local/share/dotnet/dotnet","/usr/lib/dotnet/dotnet"]},"dotnetAcquisitionExtension.sharedExistingDotnetPath":{"type":"string","description":"The path of the preexisting .NET Runtime you'd like to use for ALL extensions. Restart VS Code to apply changes.","examples":["C:\\Program Files\\dotnet\\dotnet.exe","/usr/local/share/dotnet/dotnet","/usr/lib/dotnet/dotnet"]},"dotnetAcquisitionExtension.proxyUrl":{"type":"string","description":"URL to a proxy if you use one, such as: https://proxy:port"},"dotnetAcquisitionExtension.allowInvalidPaths":{"type":"boolean","description":"If you'd like to continue using a .NET path that is not meant to be used for an extension and may cause instability (please read above about the existingDotnetPath setting) then set this to true and restart."},"dotnetAcquisitionExtension.cacheTimeToLiveMultiplier":{"type":"number","default":1,"description":"To improve performance, the results of checking .NET Installations may be cached. If you're facing issues with an install not being detected, try setting this to 0.5, or 0; or increasing the number to improve performance. Restart to change."},"dotnetAcquisitionExtension.showResetDataCommand":{"type":"boolean","default":false,"description":"Show the command to reset extension data in the command palette. Restart VS Code and remove dependent extensions first."}}}},"scripts":{"vscode:prepublish":"npm run compile-all && npm install && webpack --mode production && dotnet build ../msbuild/signJs --property jsOutputPath=..\\..\\vscode-dotnet-runtime-extension\\dist -bl -v:normal","compile":"npm run clean && tsc -p ./","watch":"npm run compile && tsc -watch -p ./","test":"npm run compile --silent && node ./dist/test/functional/runTest.js","clean":"rimraf dist","compile-all":"cd ../vscode-dotnet-runtime-library && npm install && npm run compile && cd ../vscode-dotnet-runtime-extension && npm install && npm run compile","lint":"eslint -c .eslintrc.js --ext=.ts vscode-dotnet-runtime-library/src/**/*.ts vscode-dotnet-runtime-extension/src/**/*.ts --ignore-pattern \"**/test/\" --fix","webpack":"webpack --mode development"},"dependencies":{"@types/chai-as-promised":"^7.1.8","@vscode/test-electron":"^2.3.9","axios":"^1.7.4","axios-cache-interceptor":"^1.0.1","axios-retry":"^3.4.0","chai":"4.3.4","glob":"^7.2.0","https-proxy-agent":"^7.0.2","mocha":"^9.1.3","open":"^8.4.0","rimraf":"3.0.2","shelljs":"^0.8.5","ts-loader":"^9.5.1","typescript":"^5.5.4","vscode-dotnet-runtime-library":"file:../vscode-dotnet-runtime-library","webpack-permissions-plugin":"^1.0.9"},"devDependencies":{"@types/chai":"^4.3.5","@types/mocha":"^9.0.0","@types/node":"^20.0.0","@types/rimraf":"3.0.2","@types/source-map-support":"^0.5.10","@types/vscode":"1.74.0","copy-webpack-plugin":"^9.0.1","webpack":"^5.88.2","webpack-cli":"^4.9.1"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/ms-dotnettools.vscode-dotnet-runtime-2.3.6-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"ms-dotnettools","metadata":{"installedTimestamp":1752772690997,"pinned":false,"source":"gallery","id":"1aab81a1-b3d9-4aef-976b-577d5d90fe3f","publisherId":"d05e23de-3974-4ff0-8d47-23ee77830092","publisherDisplayName":"ms-dotnettools","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":5469178},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"muhammad-sammy.csharp","uuid":"57b4ceec-c35a-4a96-ab38-23c6338df406"},"manifest":{"name":"csharp","publisher":"muhammad-sammy","version":"2.84.19","description":"Free/Libre C# support for vscode-compatible editors.","displayName":"C#","author":"Muhammad Sammy","license":"SEE LICENSE IN RuntimeLicenses/license.txt","qna":"https://github.com/muhammadsammy/free-vscode-csharp/issues","icon":"images/csharpIcon.png","preview":false,"bugs":{"url":"https://github.com/muhammadsammy/free-vscode-csharp/issues"},"repository":{"type":"git","url":"https://github.com/muhammadsammy/free-vscode-csharp.git"},"categories":["Debuggers","Programming Languages","Linters","Snippets"],"keywords":["multi-root ready",".NET","ASP.NET",".NET Core","dotnet","coreclr"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":false}},"extensionKind":["workspace"],"defaults":{"roslyn":"5.0.0-1.25319.11","omniSharp":"1.39.12","razor":"10.0.0-preview.25322.1","razorOmnisharp":"7.0.0-preview.23363.1","xamlTools":"17.14.36106.43"},"main":"./dist/extension","l10n":"./l10n","brokeredServices":[{"moniker":{"name":"Microsoft.CodeAnalysis.LanguageClient.SolutionSnapshotProvider","version":"0.1"}},{"moniker":{"name":"Microsoft.VisualStudio.CSharpExtension.BuildResultService","version":"0.1"}}],"scripts":{"vscode:prepublish":"npm run package","compile":"tsc -p ./ && npx eslint ./ && npm run l10nDevGenerateLocalizationBundle && npm run compile:razorTextMate","compileDev":"tsc -p ./ && npm run l10nDevGenerateLocalizationBundle && npm run compile:razorTextMate","package":"npm run compile && node esbuild.js --production && gulp signJs","packageDev":"npm run compileDev && node esbuild.js","l10nDevGenerateLocalizationBundle":"npx @vscode/l10n-dev export --outDir ./l10n ./src","compile:razorTextMate":"npx js-yaml src/razor/syntaxes/aspnetcorerazor.tmLanguage.yml > src/razor/syntaxes/aspnetcorerazor.tmLanguage.json","test:unit":"npm run compileDev && gulp test:unit","test:integration:csharp":"npm run package && gulp test:integration:csharp","test:integration:razor":"npm run package && gulp test:integration:razor","test:integration:devkit":"npm run package && gulp test:integration:devkit","profiling":"npm run package && gulp profiling","test:artifacts":"npm run compileDev && gulp test:artifacts","omnisharptest":"npm run package && gulp omnisharptest","omnisharptest:unit":"npm run compileDev && gulp omnisharptest:unit","omnisharptest:integration":"npm run package && gulp omnisharptest:integration","omnisharptest:integration:singleCsproj":"npm run package && gulp omnisharptest:integration:singleCsproj","omnisharptest:integration:slnWithCsproj":"npm run package && gulp omnisharptest:integration:slnWithCsproj","omnisharptest:integration:slnFilterWithCsproj":"npm run package && gulp omnisharptest:integration:slnFilterWithCsproj","updatePackageDependencies":"gulp updatePackageDependencies","l10nDevGenerateXlf":"npx @vscode/l10n-dev generate-xlf ./package.nls.json ./l10n/bundle.l10n.json --outFile ./loc/vscode-csharp.xlf","l10nDevImportXlf":"npx @vscode/l10n-dev import-xlf ./loc/vscode-csharp.*.xlf --outDir ./l10n && move l10n\\package.nls.*.json ."},"extensionDependencies":["ms-dotnettools.vscode-dotnet-runtime"],"dependencies":{"@github/copilot-language-server":"1.290.0","@microsoft/servicehub-framework":"4.2.99-beta","@octokit/rest":"^20.0.1","@types/cross-spawn":"6.0.2","@vscode/debugprotocol":"1.56.0","@vscode/extension-telemetry":"^0.9.0","@vscode/js-debug-browsers":"^1.1.0","async-file":"2.0.2","cross-spawn":"6.0.6","execa":"4.0.0","fs-extra":"9.1.0","http-proxy-agent":"7.0.0","https-proxy-agent":"7.0.2","jsonc-parser":"3.0.0","microsoft.aspnetcore.razor.vscode":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/0af42abab690d5de903a4a814d6aedc1/microsoft.aspnetcore.razor.vscode-7.0.0-preview.23363.1.tgz","nerdbank-gitversioning":"^3.6.79-alpha","node-machine-id":"1.1.12","ps-list":"7.2.0","request-light":"0.7.0","rxjs":"6.6.7","semver":"7.5.4","stream":"0.0.2","strip-bom":"5.0.0","strip-bom-buf":"2.0.0","tar":"^6.1.15","tmp":"0.0.33","uuid":"^9.0.0","vscode-html-languageservice":"^5.3.1","vscode-jsonrpc":"9.0.0-next.7","vscode-languageclient":"10.0.0-next.14","vscode-languageserver-protocol":"3.17.6-next.12","vscode-languageserver-textdocument":"1.0.12","vscode-languageserver-types":"3.17.6-next.6","vscode-nls":"5.0.1","yauzl":"2.10.0"},"devDependencies":{"@jest/globals":"^29.6.2","@types/archiver":"5.1.0","@types/del":"3.0.1","@types/fs-extra":"5.0.4","@types/gulp":"4.0.5","@types/minimist":"1.2.1","@types/node":"20.14.8","@types/semver":"7.3.13","@types/tar":"6.1.5","@types/tmp":"0.0.33","@types/unzipper":"^0.9.1","@types/uuid":"^9.0.1","@types/vscode":"1.93.0","@types/yauzl":"2.10.0","@typescript-eslint/eslint-plugin":"^8.19.0","@typescript-eslint/parser":"^8.19.0","@vscode/l10n-dev":"^0.0.35","@vscode/test-electron":"2.3.8","@vscode/vsce":"3.0.0","archiver":"5.3.0","del":"3.0.0","esbuild":"^0.25.0","eslint":"^8.43.0","eslint-config-prettier":"^8.8.0","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.27.5","eslint-plugin-n":"^15.7.0","eslint-plugin-prettier":"^4.2.1","eslint-plugin-promise":"^6.1.1","eslint-plugin-unicorn":"^47.0.0","find-versions":"4.0.0","get-port":"5.1.1","glob-promise":"4.1.0","gulp":"5.0.0","jest":"^29.6.2","jest-cli":"^29.6.4","jest-junit":"^16.0.0","js-yaml":">=3.13.1","minimatch":"3.0.5","mock-http-server":"1.4.2","octokit":"^3.1.0","prettier":"2.8.8","rimraf":"2.6.3","source-map-support":"^0.5.21","ts-jest":"^29.1.1","ts-loader":"9.0.0","ts-node":"9.1.1","typescript":"5.6.2","umd-compat-loader":"2.1.2","unzipper":"0.10.11","vscode-oniguruma":"^1.6.1","vscode-textmate":"^6.0.0","vscode-uri":"^3.0.7"},"runtimeDependencies":[{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.7.2 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-win-x64-1.39.12.zip","installPath":".omnisharp/1.39.12","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.12/OmniSharp.exe","platformId":"win-x64","isFramework":true,"integrity":"A52562B44C9BAA2811F0A617F182A5886BB79BB1532850827D89F173D8C962B6"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 6 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-win-x64-net6.0-1.39.12.zip","installPath":".omnisharp/1.39.12-net6.0","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.12-net6.0/OmniSharp.dll","platformId":"win-x64","isFramework":false,"integrity":"21BB3F7D990B6D464A748E9C11731582CAEEAAB87D7F749EDEACFE136A09C13E"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.7.2 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-win-arm64-1.39.12.zip","installPath":".omnisharp/1.39.12","platforms":["win32"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.12/OmniSharp.exe","platformId":"win-arm64","isFramework":true,"integrity":"E61CFBD416C9099D5710748281A0E07763ABE6D6EC930F31335B008DB6907780"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 6 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-win-arm64-net6.0-1.39.12.zip","installPath":".omnisharp/1.39.12-net6.0","platforms":["win32"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.12-net6.0/OmniSharp.dll","platformId":"win-arm64","isFramework":false,"integrity":"ECA34E2AEEB1775AAB664C5C06232EFBB57BB2CA6020A63FB92D24A0EE3A6906"},{"id":"OmniSharp","description":"OmniSharp for OSX (Mono / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-osx-1.39.12.zip","installPath":".omnisharp/1.39.12","platforms":["darwin"],"architectures":["x86_64","arm64"],"binaries":["./mono.osx","./run"],"installTestPath":"./.omnisharp/1.39.12/run","platformId":"osx","isFramework":true,"integrity":"645BD54508011CEF386FC765FA9E2DD6F6615120A6F611EF78DB2C41A3634C71"},{"id":"OmniSharp","description":"OmniSharp for OSX (.NET 6 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-osx-x64-net6.0-1.39.12.zip","installPath":".omnisharp/1.39.12-net6.0","platforms":["darwin"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.12-net6.0/OmniSharp.dll","platformId":"osx-x64","isFramework":false,"integrity":"04A286EA36CE60AD1EBC83E16B114FD6663BDE840C43FD695067268A39B81CB1"},{"id":"OmniSharp","description":"OmniSharp for OSX (.NET 6 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-osx-arm64-net6.0-1.39.12.zip","installPath":".omnisharp/1.39.12-net6.0","platforms":["darwin"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.12-net6.0/OmniSharp.dll","platformId":"osx-arm64","isFramework":false,"integrity":"44A197EBB3FC1AE55209FD3A125F2EDF6327F91A0E1EFC76025B5F7787CC4F94"},{"id":"OmniSharp","description":"OmniSharp for Linux (Mono / x86)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-linux-x86-1.39.12.zip","installPath":".omnisharp/1.39.12","platforms":["linux"],"architectures":["x86","i686"],"binaries":["./mono.linux-x86","./run"],"installTestPath":"./.omnisharp/1.39.12/run","platformId":"linux-x86","isFramework":true,"integrity":"7C5691CCA9F617FBCCAA687F3624913428F31FF3213F689E25D62E17CBC0C2DE"},{"id":"OmniSharp","description":"OmniSharp for Linux (Mono / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-linux-x64-1.39.12.zip","installPath":".omnisharp/1.39.12","platforms":["linux"],"architectures":["x86_64"],"binaries":["./mono.linux-x86_64","./run"],"installTestPath":"./.omnisharp/1.39.12/run","platformId":"linux-x64","isFramework":true,"integrity":"82997A2EC98CDC213712EE0F96FB5A0A6C0858889D26C6BD7DB2FA1269FD6CBA"},{"id":"OmniSharp","description":"OmniSharp for Linux (.NET 6 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-linux-x64-net6.0-1.39.12.zip","installPath":".omnisharp/1.39.12-net6.0","platforms":["linux"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.12-net6.0/OmniSharp.dll","platformId":"linux-x64","isFramework":false,"integrity":"7D65424EEEC4D0C06BAEE22D37465AD9718B626D4E9E9CA0E5FB95862630C049"},{"id":"OmniSharp","description":"OmniSharp for Linux (Mono / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-linux-arm64-1.39.12.zip","installPath":".omnisharp/1.39.12","platforms":["linux"],"architectures":["arm64"],"binaries":["./mono.linux-arm64","./run"],"installTestPath":"./.omnisharp/1.39.12/run","platformId":"linux-arm64","isFramework":true,"integrity":"39478AE2072874258CC493055F7332FD9BEC7B3ED1FFF57280EB2D07CAFAE4BD"},{"id":"OmniSharp","description":"OmniSharp for Linux (.NET 6 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-linux-arm64-net6.0-1.39.12.zip","installPath":".omnisharp/1.39.12-net6.0","platforms":["linux"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.12-net6.0/OmniSharp.dll","platformId":"linux-arm64","isFramework":false,"integrity":"1A009CF2D62D1A6FE1646FFF03FED52633B019B49A71FB3D8CE74406224EA0C5"},{"id":"OmniSharp","description":"OmniSharp for Linux musl (.NET 6 / x64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-linux-musl-x64-net6.0-1.39.12.zip","installPath":".omnisharp/1.39.12-net6.0","platforms":["linux-musl"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.39.12-net6.0/OmniSharp.dll","platformId":"linux-musl-x64","isFramework":false,"integrity":"FB97F4B0AB76823272B55CA3134FD5877C5651366CB88C678ED0445E86A8CD35"},{"id":"OmniSharp","description":"OmniSharp for Linux musl (.NET 6 / arm64)","url":"https://roslynomnisharp.blob.core.windows.net/releases/1.39.12/omnisharp-linux-musl-arm64-net6.0-1.39.12.zip","installPath":".omnisharp/1.39.12-net6.0","platforms":["linux-musl"],"architectures":["arm64"],"installTestPath":"./.omnisharp/1.39.12-net6.0/OmniSharp.dll","platformId":"linux-musl-arm64","isFramework":false,"integrity":"9944EBD6EE06BD595BCADD3057CD9BEF4105C3A3952DAE03E54F3114E2E6661F"},{"id":"Debugger","description":".NET Core Debugger (Windows / x64)","url":"https://github.com/Samsung/netcoredbg/releases/download/3.1.2-1054/netcoredbg-win64.zip","installPath":".debugger","platforms":["win32"],"architectures":["x86_64"],"installTestPath":".debugger/netcoredbg/netcoredbg.exe"},{"id":"Debugger","description":".NET Core Debugger (macOS / x64)","url":"https://github.com/Samsung/netcoredbg/releases/download/3.1.2-1054/netcoredbg-osx-amd64.tar.gz","installPath":".debugger","platforms":["darwin"],"architectures":["x86_64","arm64"],"binaries":["./netcoredbg"],"installTestPath":".debugger/netcoredbg/netcoredbg"},{"id":"Debugger","description":".NET Core Debugger (linux / ARM64)","url":"https://github.com/Samsung/netcoredbg/releases/download/3.1.2-1054/netcoredbg-linux-arm64.tar.gz","installPath":".debugger","platforms":["linux"],"architectures":["arm64"],"binaries":["./netcoredbg"],"installTestPath":".debugger/netcoredbg/netcoredbg"},{"id":"Debugger","description":".NET Core Debugger (linux / x64)","url":"https://github.com/Samsung/netcoredbg/releases/download/3.1.2-1054/netcoredbg-linux-amd64.tar.gz","installPath":".debugger","platforms":["linux","linux-musl"],"architectures":["x86_64"],"binaries":["./netcoredbg"],"installTestPath":".debugger/netcoredbg/netcoredbg"},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/8d42e62ea4051381c219b3e31bc4eced/razorlanguageserver-win-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["win32"],"architectures":["x86_64"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Windows / ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/4ef26e45cf32fe8d51c0e7dd21f1fef6/razorlanguageserver-win-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["win32"],"architectures":["arm64"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/6d4e23a3c7cf0465743950a39515a716/razorlanguageserver-linux-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/85deebd44647ebf65724cc291d722283/razorlanguageserver-linux-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux"],"architectures":["arm64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux musl / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/4f0caa94ae182785655efb15eafcef23/razorlanguageserver-linux-musl-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux-musl"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux musl ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/0a24828206a6f3b4bc743d058ef88ce7/razorlanguageserver-linux-musl-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux-musl"],"architectures":["arm64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/2afcafaf41082989efcc10405abb9314/razorlanguageserver-osx-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (macOS ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/8bf2ed2f00d481a5987e3eb5165afddd/razorlanguageserver-osx-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["darwin"],"architectures":["arm64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (Linux musl ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/0a24828206a6f3b4bc743d058ef88ce7/razorlanguageserver-linux-musl-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["linux-musl"],"architectures":["arm64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/2afcafaf41082989efcc10405abb9314/razorlanguageserver-osx-x64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"RazorOmnisharp","description":"Razor Language Server for OmniSharp (macOS ARM64)","url":"https://download.visualstudio.microsoft.com/download/pr/aee63398-023f-48db-bba2-30162c68f0c4/8bf2ed2f00d481a5987e3eb5165afddd/razorlanguageserver-osx-arm64-7.0.0-preview.23363.1.zip","installPath":".razoromnisharp","platforms":["darwin"],"architectures":["arm64"],"binaries":["./rzls"]}],"engines":{"vscode":"^1.93.0"},"activationEvents":["onDebugInitialConfigurations","onDebugResolve:blazorwasm","onDebugResolve:coreclr","onDebugResolve:clr","onDebugResolve:monovsdbg","onDebugResolve:dotnet","onLanguage:csharp","onCommand:o.showOutput","onCommand:omnisharp.registerLanguageMiddleware","workspaceContains:**/*.{csproj,csx,cake}"],"contributes":{"themes":[{"label":"Visual Studio 2019 Dark","uiTheme":"vs-dark","path":"./themes/vs2019_dark.json"},{"label":"Visual Studio 2019 Light","uiTheme":"vs","path":"./themes/vs2019_light.json"}],"configuration":[{"title":"Project","order":0,"properties":{"dotnet.defaultSolution":{"type":"string","description":"The path of the default solution to be opened in the workspace, or set to 'disable' to skip it. (Previously `omnisharp.defaultLaunchSolution`)","order":0}}},{"title":"Text Editor","order":1,"properties":{"dotnet.autoInsert.enableAutoInsert":{"type":"boolean","default":true,"description":"Enable automatic insertion of documentation comments."},"dotnet.formatting.organizeImportsOnFormat":{"type":"boolean","default":false,"description":"Specifies whether 'using' directives should be grouped and sorted during document formatting. (Previously `omnisharp.organizeImportsOnFormat`)"},"dotnet.typeMembers.memberInsertionLocation":{"type":"string","enum":["withOtherMembersOfTheSameKind","atTheEnd"],"default":"withOtherMembersOfTheSameKind","enumDescriptions":["Place them with other members of the same kind.","Place them at the end."],"description":"The insertion location of properties, events, and methods When implement interface or abstract class.","order":10},"dotnet.typeMembers.propertyGenerationBehavior":{"type":"string","enum":["preferThrowingProperties","preferAutoProperties"],"default":"preferThrowingProperties","enumDescriptions":["Prefer throwing properties.","Prefer auto properties."],"description":"Generation behavior of properties when implement interface or abstract class.","order":10},"dotnet.codeLens.enableReferencesCodeLens":{"type":"boolean","default":true,"description":"Specifies whether the references CodeLens should be shown. (Previously `csharp.referencesCodeLens.enabled`)"},"dotnet.codeLens.enableTestsCodeLens":{"type":"boolean","default":true,"description":"Specifies whether the run and debug test CodeLens should be shown. (Previously `csharp.testsCodeLens.enabled`)"},"dotnet.completion.showCompletionItemsFromUnimportedNamespaces":{"type":"boolean","default":true,"description":"Enables support for showing unimported types and unimported extension methods in completion lists. When committed, the appropriate using directive will be added at the top of the current file. (Previously `omnisharp.enableImportCompletion`)","order":20},"dotnet.completion.showNameCompletionSuggestions":{"type":"boolean","default":"true","description":"Perform automatic object name completion for the members that you have recently selected.","order":20},"dotnet.completion.provideRegexCompletions":{"type":"boolean","default":"true","description":"Show regular expressions in completion list.","order":20},"dotnet.completion.triggerCompletionInArgumentLists":{"type":"boolean","default":"true","description":"Automatically show completion list in argument lists","order":20},"dotnet.backgroundAnalysis.analyzerDiagnosticsScope":{"type":"string","enum":["openFiles","fullSolution","none"],"default":"openFiles","enumDescriptions":["Open documents","Entire solution","None"],"description":"Run background code analysis for: (Previously `omnisharp.enableRoslynAnalyzers`)","order":30},"dotnet.backgroundAnalysis.compilerDiagnosticsScope":{"type":"string","enum":["openFiles","fullSolution","none"],"default":"openFiles","enumDescriptions":["Open documents","Entire solution","None"],"description":"Show compiler errors and warnings for:","order":30},"dotnet.diagnostics.reportInformationAsHint":{"type":"boolean","default":true,"description":"Enable this setting to reduce visual distractions in your editor. Information problems will be reported as hints and only be visible when the code actions popup is open.","order":30},"dotnet.highlighting.highlightRelatedRegexComponents":{"type":"boolean","default":"true","description":"Highlight related regular expression components under cursor.","order":40},"dotnet.highlighting.highlightRelatedJsonComponents":{"type":"boolean","default":"true","description":"Highlight related JSON components under cursor.","order":40},"csharp.inlayHints.enableInlayHintsForImplicitObjectCreation":{"type":"boolean","default":false,"description":"Show hints for implicit object creation","order":50},"csharp.inlayHints.enableInlayHintsForImplicitVariableTypes":{"type":"boolean","default":false,"description":"Show hints for variables with inferred types","order":50},"csharp.inlayHints.enableInlayHintsForLambdaParameterTypes":{"type":"boolean","default":false,"description":"Show hints for lambda parameter types","order":50},"csharp.inlayHints.enableInlayHintsForTypes":{"type":"boolean","default":false,"description":"Display inline type hints","order":50},"dotnet.inlayHints.enableInlayHintsForIndexerParameters":{"type":"boolean","default":false,"description":"Show hints for indexers","order":50},"dotnet.inlayHints.enableInlayHintsForLiteralParameters":{"type":"boolean","default":false,"description":"Show hints for literals","order":50},"dotnet.inlayHints.enableInlayHintsForObjectCreationParameters":{"type":"boolean","default":false,"description":"Show hints for 'new' expressions","order":50},"dotnet.inlayHints.enableInlayHintsForOtherParameters":{"type":"boolean","default":false,"description":"Show hints for everything else","order":50},"dotnet.inlayHints.enableInlayHintsForParameters":{"type":"boolean","default":false,"description":"Display inline parameter name hints","order":50},"dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix":{"type":"boolean","default":false,"description":"Suppress hints when parameter names differ only by suffix","order":50},"dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName":{"type":"boolean","default":false,"description":"Suppress hints when argument matches parameter name","order":50},"dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent":{"type":"boolean","default":false,"description":"Suppress hints when parameter name matches the method's intent","order":50},"dotnet.navigation.navigateToDecompiledSources":{"type":"boolean","default":"true","description":"Enable navigation to decomplied sources.","order":60},"dotnet.navigation.navigateToSourceLinkAndEmbeddedSources":{"type":"boolean","default":"true","description":"Enable navigation to source link and embedded sources.","order":60},"dotnet.quickInfo.showRemarksInQuickInfo":{"type":"boolean","default":"true","description":"Show remarks information when display symbol.","order":70},"dotnet.symbolSearch.searchReferenceAssemblies":{"type":"boolean","default":true,"description":"Search symbols in reference assemblies. It affects features requires symbol searching, such as add imports.","order":80}}},{"title":"Debugger","order":8,"properties":{"csharp.debug.stopAtEntry":{"type":"boolean","markdownDescription":"If true, the debugger should stop at the entry point of the target. This option defaults to `false`.","default":false},"csharp.debug.console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["The target process's console input (stdin) and output (stdout/stderr) are routed through the VS Code Debug Console.","The target process will run inside VS Code's integrated terminal.","The target process will run inside its own external terminal. When using this mode, you will need to switch focus between Visual Studio Code and the external terminal window."],"markdownDescription":"**Note:** _This option is only used for console projects launched with the `dotnet` debug configuration type_.\n\nIndicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","default":"internalConsole"},"csharp.debug.sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"},"default":{}},"csharp.debug.justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"csharp.debug.requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"csharp.debug.enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"csharp.debug.logging.exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"csharp.debug.logging.moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"csharp.debug.logging.programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"csharp.debug.logging.browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"csharp.debug.logging.elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"csharp.debug.logging.threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"csharp.debug.logging.processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"csharp.debug.logging.engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"csharp.debug.logging.diagnosticsLog.protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"csharp.debug.logging.diagnosticsLog.dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"csharp.debug.logging.diagnosticsLog.debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"csharp.debug.logging.diagnosticsLog.debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"csharp.debug.logging.diagnosticsLog.expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"csharp.debug.logging.diagnosticsLog.startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false},"csharp.debug.logging.consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true},"csharp.debug.suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"csharp.debug.symbolOptions.searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"csharp.debug.symbolOptions.searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"csharp.debug.symbolOptions.searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"csharp.debug.symbolOptions.cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"csharp.debug.symbolOptions.moduleFilter.mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"csharp.debug.symbolOptions.moduleFilter.excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"csharp.debug.symbolOptions.moduleFilter.includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"csharp.debug.symbolOptions.moduleFilter.includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true},"csharp.debug.symbolOptions.moduleFilter.includeSymbolsOnDemand":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will attempt to download symbols when it detects symbols are needed, such as when trying to step into the module. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true},"csharp.debug.expressionEvaluationOptions.allowImplicitFuncEval":{"type":"boolean","description":"When true (the default state), the debugger will automatically call property `get` methods and other implicit function calls.","default":true},"csharp.debug.expressionEvaluationOptions.allowToString":{"type":"boolean","markdownDescription":"When true (the default state), the debugger will automatically call `ToString` to format objects. This option has no effect if `allowImplicitFuncEval` is `false`.","default":true},"csharp.debug.expressionEvaluationOptions.allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"csharp.debug.expressionEvaluationOptions.showRawValues":{"type":"boolean","description":"When true, the debugger will show raw structure of objects in variables windows.","default":false},"dotnet.unitTestDebuggingOptions":{"type":"object","description":"Options to use with the debugger when launching for unit test debugging. (Previously `csharp.unitTestDebuggingOptions`)","default":{},"properties":{"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true},"includeSymbolsOnDemand":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will attempt to download symbols when it detects symbols are needed, such as when trying to step into the module. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":true}}}},"expressionEvaluationOptions":{"description":"Options to control how the debugger evaluates expressions in data tips, the debug view's 'Watch' and 'Variables' sections, or in the Debug Console.","default":{},"type":"object","properties":{"allowImplicitFuncEval":{"type":"boolean","description":"When true (the default state), the debugger will automatically call property `get` methods and other implicit function calls.","default":true},"allowToString":{"type":"boolean","markdownDescription":"When true (the default state), the debugger will automatically call `ToString` to format objects. This option has no effect if `allowImplicitFuncEval` is `false`.","default":true},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"showRawValues":{"type":"boolean","description":"When true, the debugger will show raw structure of objects in variables windows.","default":false}}},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]},"type":{"type":"string","enum":["coreclr","clr"],"markdownDescription":"Type type of code to debug. Can be either `coreclr` for .NET Core debugging, or `clr` for Desktop .NET Framework. `clr` only works on Windows as the Desktop framework is Windows-only.","default":"coreclr"},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711}}},"dotnet.unitTests.runSettingsPath":{"type":"string","markdownDescription":"Path to the .runsettings file which should be used when running unit tests. (Previously `omnisharp.testRunSettings`)"}}},{"title":"LSP Server","order":9,"properties":{"dotnet.preferCSharpExtension":{"scope":"window","type":"boolean","default":true,"description":"Forces projects to load with the C# extension only.  This can be useful when using legacy project types that are not supported by C# Dev Kit. (Requires window reload)"},"dotnet.server.path":{"type":"string","scope":"machine-overridable","description":"Specifies the absolute path to the server (LSP or O#) executable. When left empty the version pinned to the C# Extension is used. (Previously `omnisharp.path`)"},"dotnet.server.componentPaths":{"type":"object","description":"Allows overriding the folder path for built in components of the language server (for example, override the .roslynDevKit path in the extension directory to use locally built components)","properties":{"roslynDevKit":{"description":"Overrides the folder path for the .roslynDevKit component of the language server","type":"string"},"xamlTools":{"description":"Overrides the folder path for the .xamlTools component of the language server","type":"string"}},"default":{}},"dotnet.server.startTimeout":{"type":"number","scope":"machine-overridable","default":120000,"description":"Specifies a timeout (in ms) for the client to successfully start and connect to the language server."},"dotnet.server.waitForDebugger":{"type":"boolean","scope":"machine-overridable","default":false,"description":"Passes the --debug flag when launching the server to allow a debugger to be attached. (Previously `omnisharp.waitForDebugger`)"},"dotnet.server.extensionPaths":{"scope":"machine-overridable","type":["array",null],"items":{"type":"string"},"default":null,"description":"Override for path to language server --extension arguments"},"dotnet.server.crashDumpPath":{"scope":"machine-overridable","type":"string","default":null,"description":"Sets a folder path where crash dumps are written to if the language server crashes.  Must be writeable by the user."},"dotnet.server.suppressLspErrorToasts":{"type":"boolean","default":false,"description":"Suppresses error toasts from showing up if the server encounters a recoverable error."},"dotnet.server.suppressMiscellaneousFilesToasts":{"type":"boolean","default":false,"description":"Suppress warning toasts from showing up if the active document is outside the open workspace."},"dotnet.server.useServerGC":{"type":"boolean","default":true,"description":"Configure the language server to use .NET server garbage collection.  Server garbage collection generally provides better performance at the expensive of higher memory consumption."},"dotnet.enableXamlTools":{"scope":"machine-overridable","type":"boolean","default":true,"description":"Enables XAML tools when using C# Dev Kit"},"dotnet.projects.binaryLogPath":{"scope":"machine-overridable","type":"string","default":null,"description":"Sets a path where MSBuild binary logs are written to when loading projects, to help diagnose loading errors."},"dotnet.projects.enableAutomaticRestore":{"type":"boolean","default":true,"description":"Enables automatic NuGet restore if the extension detects assets are missing."},"dotnet.projects.enableFileBasedPrograms":{"type":"boolean","default":false,"description":"Enables the preview \"file-based programs\" (dotnet run app.cs) experience.","tags":["preview"]},"razor.languageServer.directory":{"type":"string","scope":"machine-overridable","description":"Overrides the path to the Razor Language Server directory.","order":90},"razor.languageServer.debug":{"type":"boolean","scope":"machine-overridable","default":false,"description":"Specifies whether to wait for debug attach when launching the language server.","order":90},"razor.languageServer.forceRuntimeCodeGeneration":{"type":"boolean","scope":"machine-overridable","default":true,"description":"Enable combined design time/runtime code generation for Razor files","order":90,"tags":["experimental"]},"razor.languageServer.suppressLspErrorToasts":{"type":"boolean","default":true,"description":"Suppresses error toasts from showing up if the server encounters a recoverable error."},"razor.languageServer.useNewFormattingEngine":{"type":"boolean","default":true,"description":"Use the new Razor formatting engine."},"razor.languageServer.cohostingEnabled":{"type":"boolean","default":false,"description":"Enable Razor cohosting.","tags":["experimental"]}}},{"title":"OmniSharp","order":10,"properties":{"dotnet.server.useOmnisharp":{"type":"boolean","default":true,"description":"Switches to use the Omnisharp server for language features when enabled (requires restart). This option will not be honored with C# Dev Kit installed.","order":0},"omnisharp.dotnetPath":{"type":"string","scope":"machine-overridable","description":"Specifies the path to a dotnet installation directory to use instead of the default system one. This only influences the dotnet installation to use for hosting the OmniSharp server itself. Example: \"/home/username/mycustomdotnetdirectory\"."},"csharp.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default C# formatter (requires restart)."},"csharp.suppressDotnetInstallWarning":{"type":"boolean","default":false,"description":"Suppress the warning that the .NET Core SDK is not on the path."},"csharp.suppressDotnetRestoreNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved."},"csharp.suppressProjectJsonWarning":{"type":"boolean","default":false,"description":"Suppress the warning that project.json is no longer a supported project format for .NET Core applications"},"csharp.suppressBuildAssetsNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to add missing assets to build or debug the application."},"csharp.suppressHiddenDiagnostics":{"type":"boolean","default":true,"description":"Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane."},"csharp.referencesCodeLens.filteredSymbols":{"type":"array","items":{"type":"string"},"default":[],"description":"Array of custom symbol names for which CodeLens should be disabled."},"csharp.maxProjectFileCountForDiagnosticAnalysis":{"type":"number","default":1000,"description":"Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely."},"csharp.semanticHighlighting.enabled":{"type":"boolean","default":true,"description":"Enable/disable Semantic Highlighting for C# files (Razor files currently unsupported). Defaults to false. Close open files for changes to take effect.","scope":"window"},"csharp.showOmnisharpLogOnError":{"type":"boolean","default":true,"description":"Shows the OmniSharp log in the Output pane when OmniSharp reports an error."},"omnisharp.useModernNet":{"type":"boolean","default":true,"scope":"window","title":"Use .NET 6 build of OmniSharp","description":"Use OmniSharp build for .NET 6. This version _does not_ support non-SDK-style .NET Framework projects, including Unity. SDK-style Framework, .NET Core, and .NET 5+ projects should see significant performance improvements."},"omnisharp.sdkPath":{"type":"string","scope":"window","description":"Specifies the path to a .NET SDK installation to use for project loading instead of the highest version installed. Applies when \"useModernNet\" is set to true. Example: /home/username/dotnet/sdks/6.0.300."},"omnisharp.sdkVersion":{"type":"string","scope":"window","description":"Specifies the version of the .NET SDK to use for project loading instead of the highest version installed. Applies when \"useModernNet\" is set to true. Example: 6.0.300."},"omnisharp.sdkIncludePrereleases":{"type":"boolean","scope":"window","default":true,"description":"Specifies whether to include preview versions of the .NET SDK when determining which version to use for project loading. Applies when \"useModernNet\" is set to true."},"omnisharp.monoPath":{"type":"string","scope":"machine","description":"Specifies the path to a mono installation to use when \"useModernNet\" is set to false, instead of the default system one. Example: \"/Library/Frameworks/Mono.framework/Versions/Current\""},"omnisharp.loggingLevel":{"type":"string","default":"information","enum":["trace","debug","information","warning","error","critical"],"description":"Specifies the level of logging output from the OmniSharp server."},"omnisharp.autoStart":{"type":"boolean","default":true,"description":"Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command"},"omnisharp.projectFilesExcludePattern":{"type":"string","default":"**/node_modules/**,**/.git/**,**/bower_components/**","description":"The exclude pattern used by OmniSharp to find all project files."},"omnisharp.projectLoadTimeout":{"type":"number","default":60,"description":"The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds."},"omnisharp.maxProjectResults":{"type":"number","default":250,"description":"The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250)."},"omnisharp.useEditorFormattingSettings":{"type":"boolean","default":true,"description":"Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size)."},"omnisharp.minFindSymbolsFilterLength":{"type":"number","default":0,"description":"The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results."},"omnisharp.maxFindSymbolsItems":{"type":"number","default":1000,"description":"The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here."},"omnisharp.disableMSBuildDiagnosticWarning":{"type":"boolean","default":false,"description":"Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log"},"omnisharp.enableMsBuildLoadProjectsOnDemand":{"type":"boolean","default":false,"description":"If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols."},"omnisharp.enableEditorConfigSupport":{"type":"boolean","default":true,"description":"Enables support for reading code style, naming convention and analyzer settings from .editorconfig."},"omnisharp.enableDecompilationSupport":{"type":"boolean","default":false,"scope":"machine","description":"Enables support for decompiling external references instead of viewing metadata."},"omnisharp.enableLspDriver":{"type":"boolean","default":false,"description":"Enables support for the experimental language protocol based engine (requires reload to setup bindings correctly)","tags":["experimental"]},"omnisharp.enableAsyncCompletion":{"type":"boolean","default":false,"description":"Enables support for resolving completion edits asynchronously. This can speed up time to show the completion list, particularly override and partial method completion lists, at the cost of slight delays after inserting a completion item. Most completion items will have no noticeable impact with this feature, but typing immediately after inserting an override or partial method completion, before the insert is completed, can have unpredictable results.","tags":["experimental"]},"omnisharp.dotNetCliPaths":{"type":"array","items":{"type":"string"},"description":"Paths to a local download of the .NET CLI to use for running any user code.","uniqueItems":true},"razor.plugin.path":{"type":"string","scope":"machine","description":"Overrides the path to the Razor plugin dll."},"razor.devmode":{"type":"boolean","default":false,"description":"Forces the extension to run in a mode that enables local Razor.VSCode development."},"razor.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default Razor formatter."},"razor.format.codeBlockBraceOnNextLine":{"type":"boolean","scope":"window","default":false,"description":"Forces the open brace after an @code or @functions directive to be on the following line."},"razor.completion.commitElementsWithSpace":{"type":"boolean","scope":"window","default":false,"description":"Specifies whether to commit tag helper and component elements with a space."}}}],"jsonValidation":[{"fileMatch":["appsettings.json","appsettings.*.json"],"url":"https://json.schemastore.org/appsettings"},{"fileMatch":"omnisharp.json","url":"http://json.schemastore.org/omnisharp"},{"fileMatch":"global.json","url":"http://json.schemastore.org/global"},{"fileMatch":"launchSettings.json","url":"https://json.schemastore.org/launchsettings.json"}],"commands":[{"command":"o.restart","title":"Restart OmniSharp","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.pickProjectAndStart","title":"Select Project","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.openSolution","title":"Open Solution","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn'"},{"command":"o.fixAll.solution","title":"Fix all occurrences of a code issue within solution","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.fixAll.project","title":"Fix all occurrences of a code issue within project","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.fixAll.document","title":"Fix all occurrences of a code issue within document","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.reanalyze.allProjects","title":"Analyze all projects","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.reanalyze.currentProject","title":"Analyze current project","category":"OmniSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.generateAssets","title":"Generate Assets for Build and Debug","category":".NET","enablement":"dotnet.server.activationContext == 'RoslynDevKit' || dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.restore.project","title":"Restore Project","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.restore.all","title":"Restore All Projects","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"csharp.listProcess","title":"List process for attach","category":"CSharp"},{"command":"csharp.listRemoteProcess","title":"List processes on remote connection for attach","category":"CSharp"},{"command":"csharp.listRemoteDockerProcess","title":"List processes on Docker connection","category":"CSharp"},{"command":"csharp.attachToProcess","title":"Attach to a .NET 5+ or .NET Core process","category":"Debug"},{"command":"csharp.reportIssue","title":"Report an issue","category":"CSharp"},{"command":"csharp.showDecompilationTerms","title":"Show the decompiler terms agreement","category":"CSharp","enablement":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"csharp.recordTrace","title":"Record a performance trace of the C# Language Server","category":"CSharp","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'RoslynDevKit'"},{"command":"extension.showRazorCSharpWindow","title":"Show Razor CSharp","category":"Razor","enablement":"razor.mode == 'lsp'"},{"command":"extension.showRazorHtmlWindow","title":"Show Razor Html","category":"Razor","enablement":"razor.mode == 'lsp'"},{"command":"razor.reportIssue","title":"Report a Razor issue","category":"Razor"},{"command":"dotnet.test.runTestsInContext","title":"Run Tests in Context","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.test.debugTestsInContext","title":"Debug Tests in Context","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.restartServer","title":"Restart Language Server","category":".NET","enablement":"dotnet.server.activationContext == 'Roslyn'"}],"keybindings":[{"command":"o.showOutput","key":"Ctrl+Shift+F9","mac":"Cmd+Shift+F9"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}],"breakpoints":[{"language":"csharp"},{"language":"razor"},{"language":"qsharp"},{"language":"aspnetcorerazor"}],"debuggers":[{"type":"coreclr","label":".NET 5+ and .NET Core","hiddenWhen":"dotnet.debug.serviceBrokerAvailable","languages":["csharp","razor","qsharp","aspnetcorerazor"],"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess","pickRemoteDockerProcess":"csharp.listRemoteDockerProcess"},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","markdownDescription":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: `${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)`\n\nExample: `${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll`\n\nWhere:\n`(target-framework)` is the framework that the debugged project is being built for. This is normally found in the project file as the `TargetFramework` property.\n\n`(project-name.dll)` is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","markdownDescription":"If true, the debugger should stop at the entry point of the target. This option defaults to `false`.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled. This option defaults to `true`.","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","markdownDescription":"Environment variables passed to the program by a file. E.g. `${workspaceFolder}/.env`","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["The target process's console input (stdin) and output (stdout/stderr) are routed through the VS Code Debug Console.","The target process will run inside VS Code's integrated terminal.","The target process will run inside its own external terminal. When using this mode, you will need to switch focus between Visual Studio Code and the external terminal window."],"markdownDescription":"Indicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","settingsDescription":"**Note:** _This option is only used for console projects launched with the `dotnet` debug configuration type_.\n\nIndicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","default":"internalConsole"},"externalConsole":{"type":"boolean","markdownDescription":"Attribute `externalConsole` is deprecated, use `console` instead. This option defaults to `false`.","default":false},"launchSettingsFilePath":{"type":"string","markdownDescription":"The path to a launchSettings.json file. If this isn't set, the debugger will search in `{cwd}/Properties/launchSettings.json`.","default":"${workspaceFolder}/Properties/launchSettings.json"},"launchSettingsProfile":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"If specified, indicates the name of the profile in launchSettings.json to use. This is ignored if launchSettings.json is not found. launchSettings.json will be read from the path specified should be the 'launchSettingsFilePath' property, or {cwd}/Properties/launchSettings.json if that isn't set. If this is set to null or an empty string then launchSettings.json is ignored. If this value is not specified the first 'Project' profile will be used.","default":"<insert-profile-name>"},"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"},"default":{}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"diagnosticsLog":{"description":"Settings to control which messages are printed to the output window from the debugger's diagnostics log. This log is meant to help troubleshoot problems with the debugger.","type":"object","required":[],"default":{},"properties":{"protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false}}},"consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true},"includeSymbolsOnDemand":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will attempt to download symbols when it detects symbols are needed, such as when trying to step into the module. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":true}}}},"expressionEvaluationOptions":{"description":"Options to control how the debugger evaluates expressions in data tips, the debug view's 'Watch' and 'Variables' sections, or in the Debug Console.","default":{},"type":"object","properties":{"allowImplicitFuncEval":{"type":"boolean","description":"When true (the default state), the debugger will automatically call property `get` methods and other implicit function calls.","default":true},"allowToString":{"type":"boolean","markdownDescription":"When true (the default state), the debugger will automatically call `ToString` to format objects. This option has no effect if `allowImplicitFuncEval` is `false`.","default":true},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"showRawValues":{"type":"boolean","description":"When true, the debugger will show raw structure of objects in variables windows.","default":false}}},"targetOutputLogPath":{"type":"string","description":"When set, text that the target application writes to stdout and stderr (ex: Console.WriteLine) will be saved to the specified file. This option is ignored if console is set to something other than internalConsole. E.g. '${workspaceFolder}/out.txt'","default":""},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]},"checkForDevCert":{"type":"boolean","description":"If you are launching a web project on Windows or macOS and this is enabled, the debugger will check if the computer has a self-signed HTTPS certificate used to develop web servers running on https endpoints. If unspecified, defaults to true when `serverReadyAction` is set. This option does nothing on Linux, VS Code remote, and VS Code Web UI scenarios. If the HTTPS certificate is not found or isn't trusted, the user will be prompted to install/trust it.","default":true}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","default":"","markdownDescription":"The process name to attach to. If this is used, `processId` should not be used."},"processId":{"anyOf":[{"type":"string","markdownDescription":"The process id to attach to. Use \"\" to get a list of running processes to attach to. If `processId` used, `processName` should not be used.","default":""},{"type":"integer","markdownDescription":"The process id to attach to. Use \"\" to get a list of running processes to attach to. If `processId` used, `processName` should not be used.","default":0}]},"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"diagnosticsLog":{"description":"Settings to control which messages are printed to the output window from the debugger's diagnostics log. This log is meant to help troubleshoot problems with the debugger.","type":"object","required":[],"default":{},"properties":{"protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false}}},"consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true},"includeSymbolsOnDemand":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will attempt to download symbols when it detects symbols are needed, such as when trying to step into the module. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":true}}}},"expressionEvaluationOptions":{"description":"Options to control how the debugger evaluates expressions in data tips, the debug view's 'Watch' and 'Variables' sections, or in the Debug Console.","default":{},"type":"object","properties":{"allowImplicitFuncEval":{"type":"boolean","description":"When true (the default state), the debugger will automatically call property `get` methods and other implicit function calls.","default":true},"allowToString":{"type":"boolean","markdownDescription":"When true (the default state), the debugger will automatically call `ToString` to format objects. This option has no effect if `allowImplicitFuncEval` is `false`.","default":true},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"showRawValues":{"type":"boolean","description":"When true, the debugger will show raw structure of objects in variables windows.","default":false}}},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]}}}},"configurationSnippets":[{"label":".NET: Launch Executable file (Console)","description":"This snippet is used to launch a new process under the .NET debugger (coreclr), specifying the path to the executable to launch. In most cases, the \".NET: Launch C# project\" snippet is a better choice. This snippet is useful when the project was built outside this VS Code instance or you want to host your .NET Code in a custom executable, such as a specific version of 'dotnet.exe'/'dotnet' or the .NET Code is hosted by a native application. This snippet is for console applications.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole"}},{"label":".NET: Attach to a .NET process","description":"Attach the .NET debugger (coreclr) to a running process. This can also be done using the 'Attach to a .NET 5+ or .NET Core process' command.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach"}},{"label":".NET: Launch Executable file (Web)","description":"This snippet is used to launch a new process under the .NET debugger (coreclr), specifying the path to the executable to launch. In most cases, the \".NET: Launch C# project\" snippet is a better choice. This snippet is useful when the project was built outside this VS Code instance or you want to host your .NET Code in a custom executable, such as a specific version of 'dotnet.exe'/'dotnet' or the .NET Code is hosted by a native application. This snippet is for web (ASP.NET Core) applications.","body":{"name":".NET Core Launch (web)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"serverReadyAction":{"action":"openExternally","pattern":"\\\\bNow listening on:\\\\s+(https?://\\\\S+)"},"env":{"ASPNETCORE_ENVIRONMENT":"Development"},"sourceFileMap":{"/Views":"^\"\\${workspaceFolder}/Views\""}}},{"label":".NET: Remote debugging - Launch Executable file (Console)","description":"This snippet shows how to remote debug .NET Code **without** using VS Code remoting. It should be used in cases where you want to build your project locally but run it on another computer.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${3:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${4:enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg}\""}}},{"label":".NET: Remote debugging - Attach to a .NET process","description":"This snippet shows how to remote debug .NET Code **without** using VS Code remoting. It should be used in cases where you want to build your project locally but run it on another computer.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${1:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${2:enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg}\""}}},{"label":".NET: Web Assembly - Launch hosted Blazor project","description":"This snippet is used to launch a new process under the Blazor WebAssembly debugger (blazorwasm), specifying the path to the executable to launch. In most cases, the \".NET: Launch C# project\" snippet is a better choice, but this snippet can be used to have full control over all launch options. This snippet is for hosted Blazor projects, which is a project that has a backend ASP.NET Core app to serve its files.","body":{"name":"Launch and Debug Hosted Blazor WebAssembly App","type":"blazorwasm","request":"launch","hosted":true,"program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","cwd":"^\"\\${workspaceFolder}\""}},{"label":".NET: Web Assembly - Launch standalone Blazor project","description":"This snippet is used to launch a new process under the Blazor WebAssembly debugger (blazorwasm). In most cases, the \".NET: Launch C# project\" snippet is a better choice, but this snippet can be used to have full control over all launch options. This snippet is for standalone Blazor projects, which is a project that does not have a backend ASP.NET Core app to serve its files.","body":{"name":"Launch and Debug Standalone Blazor WebAssembly App","type":"blazorwasm","request":"launch","cwd":"^\"\\${workspaceFolder}\""}}]},{"type":"clr","when":"workspacePlatform == windows","hiddenWhen":"true","label":".NET Framework 4.x","languages":["csharp","razor","qsharp","aspnetcorerazor"],"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess","pickRemoteDockerProcess":"csharp.listRemoteDockerProcess"},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","markdownDescription":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: `${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)`\n\nExample: `${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll`\n\nWhere:\n`(target-framework)` is the framework that the debugged project is being built for. This is normally found in the project file as the `TargetFramework` property.\n\n`(project-name.dll)` is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","markdownDescription":"If true, the debugger should stop at the entry point of the target. This option defaults to `false`.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled. This option defaults to `true`.","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser.","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","markdownDescription":"Environment variables passed to the program by a file. E.g. `${workspaceFolder}/.env`","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["The target process's console input (stdin) and output (stdout/stderr) are routed through the VS Code Debug Console.","The target process will run inside VS Code's integrated terminal.","The target process will run inside its own external terminal. When using this mode, you will need to switch focus between Visual Studio Code and the external terminal window."],"markdownDescription":"Indicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","settingsDescription":"**Note:** _This option is only used for console projects launched with the `dotnet` debug configuration type_.\n\nIndicates which console the target program should be launched into. See https://aka.ms/VSCode-CS-LaunchJson-Console for more information.","default":"internalConsole"},"externalConsole":{"type":"boolean","markdownDescription":"Attribute `externalConsole` is deprecated, use `console` instead. This option defaults to `false`.","default":false},"launchSettingsFilePath":{"type":"string","markdownDescription":"The path to a launchSettings.json file. If this isn't set, the debugger will search in `{cwd}/Properties/launchSettings.json`.","default":"${workspaceFolder}/Properties/launchSettings.json"},"launchSettingsProfile":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"If specified, indicates the name of the profile in launchSettings.json to use. This is ignored if launchSettings.json is not found. launchSettings.json will be read from the path specified should be the 'launchSettingsFilePath' property, or {cwd}/Properties/launchSettings.json if that isn't set. If this is set to null or an empty string then launchSettings.json is ignored. If this value is not specified the first 'Project' profile will be used.","default":"<insert-profile-name>"},"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"},"default":{}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"diagnosticsLog":{"description":"Settings to control which messages are printed to the output window from the debugger's diagnostics log. This log is meant to help troubleshoot problems with the debugger.","type":"object","required":[],"default":{},"properties":{"protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false}}},"consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true},"includeSymbolsOnDemand":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will attempt to download symbols when it detects symbols are needed, such as when trying to step into the module. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":true}}}},"expressionEvaluationOptions":{"description":"Options to control how the debugger evaluates expressions in data tips, the debug view's 'Watch' and 'Variables' sections, or in the Debug Console.","default":{},"type":"object","properties":{"allowImplicitFuncEval":{"type":"boolean","description":"When true (the default state), the debugger will automatically call property `get` methods and other implicit function calls.","default":true},"allowToString":{"type":"boolean","markdownDescription":"When true (the default state), the debugger will automatically call `ToString` to format objects. This option has no effect if `allowImplicitFuncEval` is `false`.","default":true},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"showRawValues":{"type":"boolean","description":"When true, the debugger will show raw structure of objects in variables windows.","default":false}}},"targetOutputLogPath":{"type":"string","description":"When set, text that the target application writes to stdout and stderr (ex: Console.WriteLine) will be saved to the specified file. This option is ignored if console is set to something other than internalConsole. E.g. '${workspaceFolder}/out.txt'","default":""},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]},"checkForDevCert":{"type":"boolean","description":"If you are launching a web project on Windows or macOS and this is enabled, the debugger will check if the computer has a self-signed HTTPS certificate used to develop web servers running on https endpoints. If unspecified, defaults to true when `serverReadyAction` is set. This option does nothing on Linux, VS Code remote, and VS Code Web UI scenarios. If the HTTPS certificate is not found or isn't trusted, the user will be prompted to install/trust it.","default":true}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","default":"","markdownDescription":"The process name to attach to. If this is used, `processId` should not be used."},"processId":{"anyOf":[{"type":"string","markdownDescription":"The process id to attach to. Use \"\" to get a list of running processes to attach to. If `processId` used, `processName` should not be used.","default":""},{"type":"integer","markdownDescription":"The process id to attach to. Use \"\" to get a list of running processes to attach to. If `processId` used, `processName` should not be used.","default":0}]},"sourceFileMap":{"type":"object","markdownDescription":"Maps build-time paths to local source locations. All instances of build-time path will be replaced with the local source path.\n\nExample:\n\n`{\"<build-path>\":\"<local-source-path>\"}`","additionalProperties":{"type":"string"}},"justMyCode":{"type":"boolean","markdownDescription":"When enabled (the default), the debugger only displays and steps into user code (\"My Code\"), ignoring system code and other code that is optimized or that does not have debugging symbols. [More information](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)","default":true},"requireExactSource":{"type":"boolean","markdownDescription":"Flag to require current source code to match the pdb. This option defaults to `true`.","default":true},"enableStepFiltering":{"type":"boolean","markdownDescription":"Flag to enable stepping over Properties and Operators. This option defaults to `true`.","default":true},"logging":{"description":"Flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","markdownDescription":"Flag to determine whether exception messages should be logged to the output window. This option defaults to `true`.","default":true},"moduleLoad":{"type":"boolean","markdownDescription":"Flag to determine whether module load events should be logged to the output window. This option defaults to `true`.","default":true},"programOutput":{"type":"boolean","markdownDescription":"Flag to determine whether program output should be logged to the output window when not using an external console. This option defaults to `true`.","default":true},"browserStdOut":{"type":"boolean","markdownDescription":"Flag to determine if stdout text from the launching the web browser should be logged to the output window. This option defaults to `true`.","default":true},"elapsedTiming":{"type":"boolean","markdownDescription":"If true, protocol message logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took. This option defaults to `false`.","default":false},"threadExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when a thread in the target process exits. This option defaults to `false`.","default":false},"processExit":{"type":"boolean","markdownDescription":"Controls if a message is logged when the target process exits, or debugging is stopped. This option defaults to `true`.","default":true},"engineLogging":{"type":"boolean","deprecationMessage":"The setting 'logging.engineLogging' has been deprecated in favor of 'logging.diagnosticsLog.protocolMessages'.","default":false},"diagnosticsLog":{"description":"Settings to control which messages are printed to the output window from the debugger's diagnostics log. This log is meant to help troubleshoot problems with the debugger.","type":"object","required":[],"default":{},"properties":{"protocolMessages":{"type":"boolean","markdownDescription":"Flag to determine whether DAP protocol messages exchanged between the C# debugger and the UI should be logged to the output window. This option defaults to `false`.","default":false},"dispatcherMessages":{"type":"string","enum":["none","error","important","normal"],"enumDescriptions":["Do not print additional diagnostic messages.","Print error-level diagnostic messages.","Print important diagnostic messages.","Print all non-verbose diagnostic messages."],"markdownDescription":"Controls which messages are printed to the output window from the debugger's dispatcher. If not specified, this will default to `none` unless one of the verbose log settings are enabled (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` or `startDebuggingTracing`), in which case the default changes to `normal`.","default":"none"},"debugEngineAPITracing":{"type":"string","enum":["none","error","all"],"enumDescriptions":["Disable tracing API calls","Print failures from debugger API calls.","Print all debugger API calls. This is very verbose."],"markdownDescription":"Controls if API calls to Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h should be printed to the output window. This option defaults to `none`.","default":"none"},"debugRuntimeEventTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for events raised by the underlying runtime should be enabled. This option defaults to `false`.","default":false},"expressionEvaluationTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for expression evaluation should be enabled. This option defaults to `false`.","default":false},"startDebuggingTracing":{"type":"boolean","markdownDescription":"Flag to determine whether verbose tracing for start debugging should be enabled. This option defaults to `false`.","default":false}}},"consoleUsageMessage":{"type":"boolean","description":"Controls if a message is logged when the target process calls a 'Console.Read*' API and stdin is redirected to the console.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example /usr/bin/netcoredbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","markdownDescription":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. [More information](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":""},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":[]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true},"includeSymbolsOnDemand":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will attempt to download symbols when it detects symbols are needed, such as when trying to step into the module. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"markdownDescription":"Options to control how Source Link connects to web servers. [More information](https://aka.ms/VSCode-DotNet-SourceLink)","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","markdownDescription":"Is Source Link enabled for this URL? If unspecified, this option defaults to `true`.","default":true}}}},"expressionEvaluationOptions":{"description":"Options to control how the debugger evaluates expressions in data tips, the debug view's 'Watch' and 'Variables' sections, or in the Debug Console.","default":{},"type":"object","properties":{"allowImplicitFuncEval":{"type":"boolean","description":"When true (the default state), the debugger will automatically call property `get` methods and other implicit function calls.","default":true},"allowToString":{"type":"boolean","markdownDescription":"When true (the default state), the debugger will automatically call `ToString` to format objects. This option has no effect if `allowImplicitFuncEval` is `false`.","default":true},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"showRawValues":{"type":"boolean","description":"When true, the debugger will show raw structure of objects in variables windows.","default":false}}},"targetArchitecture":{"type":"string","markdownDescription":"[Only supported in local macOS debugging]\n\nThe architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are `x86_64` or `arm64`.","enum":["x86_64","arm64"]}}}}},{"type":"blazorwasm","label":"Blazor WebAssembly Debug","hiddenWhen":"dotnet.debug.serviceBrokerAvailable","initialConfigurations":[{"type":"blazorwasm","name":"Launch and Debug Blazor WebAssembly Application","request":"launch"}],"configurationAttributes":{"launch":{"properties":{"cwd":{"type":"string","description":"The directory of the Blazor WebAssembly app, defaults to the workspace folder.","default":"${workspaceFolder}"},"url":{"type":"string","description":"The URL of the application","default":"https://localhost:5001"},"browser":{"type":"string","description":"The debugging browser to launch (Edge or Chrome)","default":"edge","enum":["chrome","edge"]},"trace":{"type":["boolean","string"],"default":"true","enum":["verbose",true],"description":"If true, verbose logs from JS debugger are sent to log file. If 'verbose', send logs to console."},"hosted":{"type":"boolean","default":"false","description":"True if the app is a hosted Blazor WebAssembly app, false otherwise."},"webRoot":{"type":"string","default":"${workspaceFolder}","description":"Specifies the absolute path to the webserver root."},"timeout":{"type":"number","default":30000,"description":"Retry for this number of milliseconds to connect to browser."},"program":{"type":"string","default":"${workspaceFolder}/Server/bin/Debug/<target-framework>/<target-dll>","description":"The path of the DLL to execute when launching a hosted server app"},"env":{"type":"object","description":"Environment variables passed to dotnet. Only valid for hosted apps."},"dotNetConfig":{"description":"Options passed to the underlying .NET debugger. For more info, see https://github.com/dotnet/vscode-csharp/blob/main/debugger.md.","type":"object","required":[],"default":{},"properties":{"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window. Applicable only for the app server of hosted Blazor WASM apps.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}}}},"browserConfig":{"description":"Options based to the underlying JavaScript debugger. For more info, see https://github.com/microsoft/vscode-js-debug/blob/master/OPTIONS.md.","type":"object","required":[],"default":{},"properties":{"outputCapture":{"enum":["console","std"],"description":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"}}}}},"attach":{"properties":{"url":{"type":"string","description":"The URL of the application","default":"https://localhost:5001"},"cwd":{"type":"string","description":"The directory of the Blazor WebAssembly app, defaults to the workspace folder.","default":"${workspaceFolder}"},"browser":{"type":"string","description":"The debugging browser to launch (Edge or Chrome)","default":"chrome","enum":["chrome","edge"]},"trace":{"type":["boolean","string"],"default":"true","enum":["verbose",true],"description":"If true, verbose logs from JS debugger are sent to log file. If 'verbose', send logs to console."},"webRoot":{"type":"string","default":"${workspaceFolder}","description":"Specifies the absolute path to the webserver root."},"timeout":{"type":"number","default":30000,"description":"Retry for this number of milliseconds to connect to browser."}}}}},{"type":"dotnet","label":"C#","hiddenWhen":"!dotnet.debug.serviceBrokerAvailable","languages":["csharp","razor","aspnetcorerazor"],"variables":{},"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","configurationAttributes":{"launch":{"type":"object","required":["projectPath"],"properties":{"projectPath":{"type":"string","description":"Path to the .csproj file.","default":"${workspaceFolder}/<insert-project-name-here>.csproj"},"launchConfigurationId":{"type":"string","description":"The launch configuration id to use. Empty string will use the current active configuration."}}}},"configurationSnippets":[{"label":".NET: Launch C# project","description":"This snippet configures VS Code to debug a C# project. Debug options (example: arguments to the executable) can be configured through the '<project-directory>/Properties/launchSettings.json' file.","body":{"name":"C#: ${1:<project-name>} Debug","type":"dotnet","request":"launch","projectPath":"^\"\\${workspaceFolder}/${2:<relative-path-to-project-folder>}${1:<project-name>}.csproj\""}}]},{"type":"monovsdbg","label":".NET Core using Mono Runtime","hiddenWhen":"true","languages":["csharp"],"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255"}],"semanticTokenTypes":[{"id":"razorComponentElement","description":"A Razor component element"},{"id":"razorComponentAttribute","description":"A Razor component attribute"},{"id":"razorTagHelperElement","description":"A Razor TagHelper Element"},{"id":"razorTagHelperAttribute","description":"A Razor TagHelper Attribute"},{"id":"razorTransition","description":"A Razor transition"},{"id":"razorDirectiveAttribute","description":"A Razor Directive Attribute"},{"id":"razorDirectiveColon","description":"A colon between directive attribute parameters"},{"id":"razorDirective","description":"A Razor directive such as 'code' or 'function'"},{"id":"razorComment","description":"A Razor comment"},{"id":"markupCommentPunctuation","description":"The '@' or '*' of a Razor comment."},{"id":"markupTagDelimiter","description":"Markup delimiters like '<', '>', and '/'."},{"id":"markupOperator","description":"Delimiter for Markup Attribute Key-Value pairs."},{"id":"markupElement","description":"The name of a Markup element."},{"id":"markupAttribute","description":"The name of a Markup attribute."},{"id":"markupAttributeQuote","description":"A token that represents an attribute quote in a Markup attribute."},{"id":"markupAttributeValue","description":"The value of a Markup attribute."},{"id":"markupComment","description":"The contents of a Markup comment."},{"id":"markupCommentPunctuation","description":"The begining or ending punctuation of a Markup comment."},{"id":"excludedCode","description":"A token that represents inactive code."},{"id":"controlKeyword","description":"A token that represents a control-flow keyword.","superType":"keyword"},{"id":"operatorOverloaded","description":"A declaration or reference to an overloaded operator."},{"id":"whitespace","description":"A token that represents whitespace."},{"id":"text","description":"A token that represents text."},{"id":"preprocessorText","description":"Text associated with a preprocessor directive."},{"id":"punctuation","description":"A token that represents punctuation."},{"id":"stringVerbatim","superType":"string","description":"A token that represents a verbatim string."},{"id":"stringEscapeCharacter","superType":"string","description":"An escape character within a string."},{"id":"recordClass","superType":"class","description":"A definition or reference to a record class type."},{"id":"delegate","superType":"method","description":"A definition or reference to a delegate type."},{"id":"module","superType":"namespace","description":"A definition or reference to a module name."},{"id":"recordStruct","superType":"struct","description":"A definition or reference to a record struct type."},{"id":"field","superType":"property","description":"A definition or reference to a field."},{"id":"constant","superType":"variable","description":"A definition or reference to a constant."},{"id":"extensionMethod","superType":"method","description":"A definition or reference to an extension method"},{"id":"xmlDocCommentAttributeName","description":"A token that represents an attribute in an XML documentation comment"},{"id":"xmlDocCommentAttributeQuotes","description":"A token that represents an attribute quote in an XML documentation comment"},{"id":"xmlDocCommentAttributeValue","description":"A token that represents an attribute value in an XML documentation comment"},{"id":"xmlDocCommentCDataSection","description":"A token that represents a CDATA section in an XML documentation comment"},{"id":"xmlDocCommentComment","description":"A token that represents a comment in an XML documentation comment"},{"id":"xmlDocCommentDelimiter","description":"A token that represents a delimeter in an XML documentation comment"},{"id":"xmlDocCommentEntityReference","description":"A token that represents reference to an entity in an XML documentation comment"},{"id":"xmlDocCommentName","description":"A token that represents a name in an XML documentation comment"},{"id":"xmlDocCommentProcessingInstruction","description":"A token that represents a processing instruction in an XML documentation comment"},{"id":"xmlDocCommentText","description":"A token that represents text in an XML documentation comment"},{"id":"xmlLiteralAttributeName","description":"A token that represents an attribute name in an XML literal"},{"id":"xmlLiteralAttributeQuotes","description":"A token that represents an attribute quote in an XML literal"},{"id":"xmlLiteralAttributeValue","description":"A token that represents an attribute value in an XML literal"},{"id":"xmlLiteralCDataSection","description":"A token that represents a CDATA section in an XML literal"},{"id":"xmlLiteralComment","description":"A token that represents a comment in an XML literal"},{"id":"xmlLiteralDelimiter","description":"A token that represents a delimiter in an XML literal"},{"id":"xmlLiteralEmbeddedExpression","description":"A token that represents an emebedded expression in an XML literal"},{"id":"xmlLiteralEntityReference","description":"A token that represents a reference to an entity in an XML literal"},{"id":"xmlLiteralName","description":"A token that represents a name in an XML literal"},{"id":"xmlLiteralProcessingInstruction","description":"A token that represents a processing instruction in an XML literal"},{"id":"xmlLiteralText","description":"A token that represents text in an XML literal"},{"id":"regexComment","description":"A token that represents a comment in a regex string"},{"id":"regexCharacterClass","description":"A token that represents a character class in a regex string"},{"id":"regexAnchor","description":"A token that represents an anchor in a regex string"},{"id":"regexQuantifier","description":"A token that represents a quantifier in a regex string"},{"id":"regexGrouping","description":"A token that represents a group in a regex string"},{"id":"regexAlternation","description":"A token that represents an alternation in a regex string"},{"id":"regexText","description":"A token that represents text in a regex string"},{"id":"regexSelfEscapedCharacter","description":"A token that represents a self escaped character in a regex string"},{"id":"regexOtherEscape","description":"A token that represents an escape in a regex string"},{"id":"jsonComment","description":"A token that represents a comment in a JSON string"},{"id":"jsonNumber","description":"A token that represents a number in a JSON string"},{"id":"jsonString","description":"A token that represents a string in a JSON string"},{"id":"jsonKeyword","description":"A token that represents a keyword in a JSON string"},{"id":"jsonText","description":"A token that represents text in a JSON string"},{"id":"jsonOperator","description":"A token that represents an operator in a JSON string"},{"id":"jsonPunctuation","description":"A token that represents punctuation in a JSON string"},{"id":"jsonArray","description":"A token that represents an array in a JSON string"},{"id":"jsonObject","description":"A token that represents an object in a JSON string"},{"id":"jsonPropertyName","description":"A token that represents a property name in a JSON string"},{"id":"jsonConstructorName","description":"A token that represents a constructor in a JSON string"}],"semanticTokenModifiers":[],"semanticTokenScopes":[{"language":"aspnetcorerazor","scopes":{"razorComponentElement":["entity.name.class.element.component"],"razorComponentAttribute":["entity.name.class.attribute.component"],"razorTagHelperElement":["entity.name.class.element.taghelper"],"razorTagHelperAttribute":["entity.name.class.attribute.taghelper"],"razorTransition":["keyword.control.razor.transition"],"razorDirectiveAttribute":["keyword.control.razor.directive.attribute","keyword.control.cshtml.directive.attribute"],"razorDirectiveColon":["keyword.control.razor.directive.colon","keyword.control.cshtml.directive.colon"],"razorDirective":["keyword.control.razor.directive","keyword.control.cshtml.directive"],"razorComment":["comment.block.razor"],"razorCommentTransition":["meta.comment.razor","keyword.control.cshtml.transition"],"razorCommentStar":["keyword.control.razor.comment.star","meta.comment.razor"],"angleBracket":["punctuation.definition.tag"],"forwardSlash":["punctuation.definition.tag"],"equals":["punctuation.separator.key-value.html"],"markupElement":["entity.name.tag.html"],"markupAttribute":["entity.other.attribute-name.html"],"markupAttributeQuote":["punctuation.definition.tag.html"],"markupAttributeValue":["punctuation.definition.entity.html"],"markupComment":["comment.block.html"],"markupCommentPunctuation":["punctuation.definition.comment.html","comment.block.html"],"markupTagDelimiter":["punctuation.definition.tag.html"],"keyword":["keyword.cs"],"excludedCode":["support.other.excluded.cs"],"controlKeyword":["keyword.control.cs"],"operatorOverloaded":["entity.name.function.member.overload.cs"],"preprocessorText":["meta.preprocessor.string.cs"],"punctuation":["punctuation.cs"],"stringVerbatim":["string.verbatim.cs"],"stringEscapeCharacter":["constant.character.escape.cs"],"delegate":["entity.name.type.delegate.cs"],"module":["entity.name.type.module.cs"],"field":["entity.name.variable.field.cs"],"constant":["variable.other.constant"],"extensionMethod":["entity.name.function.extension.cs"],"xmlDocCommentAttributeName":["comment.documentation.attribute.name.cs"],"xmlDocCommentAttributeQuotes":["comment.documentation.attribute.quotes.cs"],"xmlDocCommentAttributeValue":["comment.documentation.attribute.value.cs"],"xmlDocCommentCDataSection":["comment.documentation.cdata.cs"],"xmlDocCommentComment":["comment.documentation.comment.cs"],"xmlDocCommentDelimiter":["comment.documentation.delimiter.cs"],"xmlDocCommentEntityReference":["comment.documentation.entityReference.cs"],"xmlDocCommentName":["comment.documentation.name.cs"],"xmlDocCommentProcessingInstruction":["comment.documentation.processingInstruction.cs"],"xmlDocCommentText":["comment.documentation.cs"],"xmlLiteralAttributeName":["entity.other.attribute-name.localname.xml"],"xmlLiteralAttributeQuotes":["string.quoted.double.xml"],"xmlLiteralAttributeValue":["meta.tag.xml"],"xmlLiteralCDataSection":["string.quoted.double.xml"],"xmlLiteralComment":["comment.block.xml"],"xmlLiteralDelimiter":["text.xml"],"xmlLiteralEmbeddedExpression":["meta.tag.xml"],"xmlLiteralEntityReference":["meta.tag.xml"],"xmlLiteralName":["entity.name.tag.localname.xml"],"xmlLiteralProcessingInstruction":["meta.tag.xml"],"xmlLiteralText":["text.xml"],"regexComment":["string.regexp.comment.cs"],"regexCharacterClass":["constant.character.character-class.regexp.cs"],"regexAnchor":["keyword.control.anchor.regexp.cs"],"regexQuantifier":["keyword.operator.quantifier.regexp.cs"],"regexGrouping":["punctuation.definition.group.regexp.cs"],"regexAlternation":["keyword.operator.or.regexp.cs"],"regexText":["string.regexp"],"regexSelfEscapedCharacter":["string.regexp.self-escaped-character.cs"],"regexOtherEscape":["string.regexp.other-escape.cs"],"jsonComment":["comment.line.double-slash.js"],"jsonNumber":["constant.numeric.json"],"jsonString":["string.quoted.double.json"],"jsonKeyword":["constant.language.json"],"jsonText":["string.quoted.double.json"],"jsonOperator":["string.quoted.double.json"],"jsonPunctuation":["punctuation.separator.dictionary.key-value.json"],"jsonArray":["punctuation.definition.array.begin.json"],"jsonObject":["punctuation.definition.dictionary.begin.json"],"jsonPropertyName":["support.type.property-name.json"],"jsonConstructorName":["support.type.property-name.json"]}},{"language":"csharp","scopes":{"typeParameter":["entity.name.type.type-parameter"],"keyword":["keyword.cs"],"excludedCode":["support.other.excluded.cs"],"controlKeyword":["keyword.control.cs"],"operatorOverloaded":["entity.name.function.member.overload.cs"],"preprocessorText":["meta.preprocessor.string.cs"],"punctuation":["punctuation.cs"],"stringVerbatim":["string.verbatim.cs"],"stringEscapeCharacter":["constant.character.escape.cs"],"delegate":["entity.name.type.delegate.cs"],"module":["entity.name.type.module.cs"],"field":["entity.name.variable.field.cs"],"constant":["variable.other.constant"],"extensionMethod":["entity.name.function.extension.cs"],"xmlDocCommentAttributeName":["comment.documentation.attribute.name.cs"],"xmlDocCommentAttributeQuotes":["comment.documentation.attribute.quotes.cs"],"xmlDocCommentAttributeValue":["comment.documentation.attribute.value.cs"],"xmlDocCommentCDataSection":["comment.documentation.cdata.cs"],"xmlDocCommentComment":["comment.documentation.comment.cs"],"xmlDocCommentDelimiter":["comment.documentation.delimiter.cs"],"xmlDocCommentEntityReference":["comment.documentation.entityReference.cs"],"xmlDocCommentName":["comment.documentation.name.cs"],"xmlDocCommentProcessingInstruction":["comment.documentation.processingInstruction.cs"],"xmlDocCommentText":["comment.documentation.cs"],"xmlLiteralAttributeName":["entity.other.attribute-name.localname.xml"],"xmlLiteralAttributeQuotes":["string.quoted.double.xml"],"xmlLiteralAttributeValue":["meta.tag.xml"],"xmlLiteralCDataSection":["string.quoted.double.xml"],"xmlLiteralComment":["comment.block.xml"],"xmlLiteralDelimiter":["text.xml"],"xmlLiteralEmbeddedExpression":["meta.tag.xml"],"xmlLiteralEntityReference":["meta.tag.xml"],"xmlLiteralName":["entity.name.tag.localname.xml"],"xmlLiteralProcessingInstruction":["meta.tag.xml"],"xmlLiteralText":["text.xml"],"regexComment":["string.regexp.comment.cs"],"regexCharacterClass":["constant.character.character-class.regexp.cs"],"regexAnchor":["keyword.control.anchor.regexp.cs"],"regexQuantifier":["keyword.operator.quantifier.regexp.cs"],"regexGrouping":["punctuation.definition.group.regexp.cs"],"regexAlternation":["keyword.operator.or.regexp.cs"],"regexText":["string.regexp"],"regexSelfEscapedCharacter":["string.regexp.self-escaped-character.cs"],"regexOtherEscape":["string.regexp.other-escape.cs"],"jsonComment":["comment.line.double-slash.js"],"jsonNumber":["constant.numeric.json"],"jsonString":["string.quoted.double.json"],"jsonKeyword":["constant.language.json"],"jsonText":["string.quoted.double.json"],"jsonOperator":["string.quoted.double.json"],"jsonPunctuation":["punctuation.separator.dictionary.key-value.json"],"jsonArray":["punctuation.definition.array.begin.json"],"jsonObject":["punctuation.definition.dictionary.begin.json"],"jsonPropertyName":["support.type.property-name.json"],"jsonConstructorName":["support.type.property-name.json"]}}],"languages":[{"id":"aspnetcorerazor","extensions":[".cshtml",".razor"],"mimetypes":["text/x-cshtml"],"configuration":"./src/razor/language-configuration.json","aliases":["ASP.NET Razor"]},{"id":"xaml","extensions":[".xaml"],"configuration":"./src/xaml/language-configuration.json","aliases":["XAML"]}],"grammars":[{"language":"aspnetcorerazor","scopeName":"text.aspnetcorerazor","path":"./src/razor/syntaxes/aspnetcorerazor.tmLanguage.json","unbalancedBracketScopes":["text.aspnetcorerazor"]},{"language":"xaml","scopeName":"source.xaml","path":"./src/xaml/syntaxes/xaml.tmLanguage.json"}],"menus":{"commandPalette":[{"command":"dotnet.test.runTestsInContext","when":"editorLangId == csharp && dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"dotnet.test.debugTestsInContext","when":"editorLangId == csharp && dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp'"},{"command":"o.restart","when":"dotnet.server.activationContext == 'OmniSharp'"},{"command":"csharp.listProcess","when":"false"},{"command":"csharp.listRemoteProcess","when":"false"},{"command":"csharp.listRemoteDockerProcess","when":"false"}],"editor/title":[{"command":"extension.showRazorCSharpWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"extension.showRazorHtmlWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"razor.reportIssue","when":"resourceLangId == aspnetcorerazor"}],"editor/context":[{"command":"dotnet.test.runTestsInContext","when":"editorLangId == csharp && (dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp')","group":"2_dotnet@1"},{"command":"dotnet.test.debugTestsInContext","when":"editorLangId == csharp && (dotnet.server.activationContext == 'Roslyn' || dotnet.server.activationContext == 'OmniSharp')","group":"2_dotnet@2"}]},"viewsWelcome":[{"view":"debug","contents":"[Generate C# Assets for Build and Debug](command:dotnet.generateAssets)\n\nTo learn more about launch.json, see [Configuring launch.json for C# debugging](https://aka.ms/VSCode-CS-LaunchJson).","when":"debugStartLanguage == csharp && !dotnet.debug.serviceBrokerAvailable"}],"configurationDefaults":{"[xaml]":{"editor.wordBasedSuggestions":"off"},"[csharp]":{"editor.formatOnType":true}}}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/muhammad-sammy.csharp-2.84.19-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"muhammad-sammy","metadata":{"installedTimestamp":1752772690996,"pinned":false,"source":"gallery","id":"57b4ceec-c35a-4a96-ab38-23c6338df406","publisherId":"cc79407d-f6d2-4535-9bd9-920d8557403d","publisherDisplayName":"muhammad-sammy","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":199304871},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"gydunhn.javascript-essentials","uuid":"1887fa41-7807-4dfd-be80-5cd477d1e8e4"},"manifest":{"name":"javascript-essentials","displayName":"Javascript-Essentials","description":"Javascript essential extensions for visual studio code","icon":"img/essentials.png","galleryBanner":{"color":"#53595e","theme":"dark"},"license":"LICENSE.md","repository":{"type":"git","url":"https://github.com/Gydunhn/Javascript-Essentials.git"},"keywords":["VSC","Code","VSCode","Visual Studio","Visual Studio Code","VSC Essentials","Essentials","Esenciales","Essenciais","Essentiel","Essenziali","Essentielles","Esencajoj","必需品","골자","अत्यावश्यकम्","ملزومات","Frontend","Web","Developer","Web Developer","Javascript","Lint","ESLint","npm","Intellisense","Visual Studio IntelliCode","IntelliCode","ES6","Snippets","JavaScript (ES6) code snippets","Debugger","Firefox","Debugger for Firefox","Essentials","Gydunhn","Elite"],"version":"0.3.0","publisher":"Gydunhn","author":{"name":"Javier Camus"},"engines":{"vscode":"^1.35.0"},"categories":["Extension Packs"],"extensionPack":["Gydunhn.vsc-essentials-core","dbaeumer.vscode-eslint","christian-kohler.npm-intellisense","VisualStudioExptTeam.vscodeintellicode","fractalbrew.backticks","xabikos.JavaScriptSnippets","firefox-devtools.vscode-firefox-debug"]},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/gydunhn.javascript-essentials-0.3.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Gydunhn","metadata":{"installedTimestamp":1752772775115,"pinned":false,"source":"gallery","id":"1887fa41-7807-4dfd-be80-5cd477d1e8e4","publisherId":"5ba0db5c-54ed-404d-85d3-eb4f8e655371","publisherDisplayName":"Gydunhn","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":36118},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"davidanson.vscode-markdownlint","uuid":"daf8b44d-8aae-4da2-80c5-1f770219f643"},"manifest":{"name":"vscode-markdownlint","displayName":"markdownlint","description":"Markdown linting and style checking for Visual Studio Code","icon":"images/markdownlint-128.png","version":"0.60.0","author":"David Anson (https://dlaa.me/)","publisher":"DavidAnson","sponsor":{"url":"https://github.com/sponsors/DavidAnson"},"license":"MIT","homepage":"https://github.com/DavidAnson/vscode-markdownlint","repository":{"type":"git","url":"https://github.com/DavidAnson/vscode-markdownlint.git"},"bugs":{"url":"https://github.com/DavidAnson/vscode-markdownlint/issues"},"funding":"https://github.com/sponsors/DavidAnson","scripts":{"ci":"npm test && npm run test-ui","compile":"webpack --mode production","compile-debug":"webpack --mode none","lint":"eslint --ignore-pattern bundle.js --ignore-pattern bundle.web.js *.mjs *.js test-ui/*.cjs eslint.config.mjs && markdownlint-cli2 *.md","schema":"cpy ./node_modules/markdownlint/schema/markdownlint-config-schema.json . --flat && cpy ./node_modules/markdownlint-cli2/schema/markdownlint-cli2-config-schema.json . --flat","test":"node --test --experimental-test-coverage && npm run lint && npm run compile && npm run schema && git diff --exit-code","test-ui":"node ./test-ui/run-tests.mjs","test-web":"npm install --no-save @vscode/test-web && sed -i '.bak' -e 's/\\/{{uuid}}\\./\\//' node_modules/@vscode/test-web/out/server/workbench.js && vscode-test-web --browser=none --verbose --extensionDevelopmentPath=. .","upgrade":"npx --yes npm-check-updates --upgrade"},"categories":["Linters","Formatters"],"engines":{"node":">=16","vscode":"^1.75.0"},"main":"./bundle","browser":"./bundle.web","dependencies":{"markdownlint-cli2":"0.18.1"},"devDependencies":{"@eslint/js":"9.27.0","@stylistic/eslint-plugin":"4.4.0","@types/vscode":"1.75.0","@vscode/test-electron":"2.5.2","@vscode/vsce":"3.4.2","cpy-cli":"5.0.0","eslint":"9.27.0","eslint-plugin-n":"17.18.0","eslint-plugin-unicorn":"59.0.1","path-browserify":"1.0.1","stream-browserify":"3.0.0","terser-webpack-plugin":"5.3.14","util":"0.12.5","webpack":"5.99.9","webpack-cli":"6.0.1"},"keywords":["markdown","lint","CommonMark","md","multi-root ready"],"activationEvents":["onLanguage:markdown"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"In untrusted workspaces, JavaScript is blocked for custom rules, markdown-it plugins, and configuration files."},"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, JavaScript is blocked for custom rules, markdown-it plugins, and configuration files."}},"contributes":{"commands":[{"command":"markdownlint.fixAll","title":"Fix all supported markdownlint violations in the document"},{"command":"markdownlint.lintWorkspace","title":"Lint all Markdown files in the workspace with markdownlint"},{"command":"markdownlint.openConfigFile","title":"Create or open the markdownlint configuration file for the workspace"},{"command":"markdownlint.toggleLinting","title":"Toggle linting by markdownlint on/off (temporarily)"}],"menus":{"commandPalette":[{"command":"markdownlint.fixAll","when":"editorLangId == markdown"},{"command":"markdownlint.lintWorkspace","when":"workbenchState != empty && terminalProcessSupported"},{"command":"markdownlint.openConfigFile","when":"workbenchState != empty"}]},"jsonValidation":[{"fileMatch":[".markdownlint.json",".markdownlint.jsonc"],"url":"./markdownlint-config-schema.json"},{"fileMatch":".markdownlint-cli2.jsonc","url":"./markdownlint-cli2-config-schema.json"}],"yamlValidation":[{"fileMatch":[".markdownlint.yaml",".markdownlint.yml"],"url":"./markdownlint-config-schema.json"},{"fileMatch":".markdownlint-cli2.yaml","url":"./markdownlint-cli2-config-schema.json"}],"taskDefinitions":[{"type":"markdownlint","when":"workbenchState != empty"}],"problemMatchers":[{"name":"markdownlint","owner":"markdownlint","fileLocation":"relative","pattern":{"regexp":"^([^:]+):(\\d+)(?::(\\d+))?\\s(\\S+)\\s(.+)$","file":1,"line":2,"column":3,"message":5,"code":4}}],"snippets":[{"language":"markdown","path":"./snippets.json"}],"configuration":{"title":"markdownlint","type":"object","properties":{"markdownlint.config":{"description":"markdownlint configuration object","scope":"resource","type":"object","$ref":"https://raw.githubusercontent.com/DavidAnson/markdownlint/v0.38.0/schema/markdownlint-config-schema.json","default":{}},"markdownlint.configFile":{"description":"Path to a configuration file that defines the base configuration","scope":"resource","type":"string","default":null},"markdownlint.customRules":{"description":"Array of paths for custom rules to include when linting","scope":"resource","type":"array","items":{"type":"string"},"default":[]},"markdownlint.focusMode":{"description":"Makes it easier to focus while typing by hiding issues on or near the current line","scope":"application","type":["boolean","integer"],"default":false},"markdownlint.lintWorkspaceGlobs":{"description":"Array of glob expressions to include or ignore when linting the workspace","scope":"resource","type":"array","items":{"type":"string"},"default":["**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}","!**/*.code-search","!**/bower_components","!**/node_modules","!**/.git","!**/vendor"]},"markdownlint.run":{"description":"Run the linter on save (onSave) or on type (onType)","scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType"}}}}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/davidanson.vscode-markdownlint-0.60.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"DavidAnson","metadata":{"installedTimestamp":1752772775128,"pinned":false,"source":"gallery","id":"daf8b44d-8aae-4da2-80c5-1f770219f643","publisherId":"2e4d1cda-6ef0-4e42-a352-ab540afe8ff0","publisherDisplayName":"DavidAnson","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1001399},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"dbaeumer.vscode-eslint","uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a"},"manifest":{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"3.0.10","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.90.0"},"activationEvents":["onStartupFinished"],"extensionKind":["workspace"],"enabledApiProposals":[],"main":"./client/out/extension","capabilities":{"virtualWorkspaces":{"supported":false,"description":"Using ESLint is not possible in virtual workspaces."},"untrustedWorkspaces":{"supported":false,"description":"The extension requires workspace trust because it loads configuration files and code from the workspace and executes it."}},"contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled or not."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules.","deprecationMessage":"The setting is deprecated. The Package Manager is automatically detected now."},"eslint.problems.shortenToSingleLine":{"type":"boolean","default":false,"description":"Shortens the text spans of underlined problems to their first related line.","scope":"resource"},"eslint.nodeEnv":{"scope":"resource","type":["string","null"],"default":null,"markdownDescription":"The value of `NODE_ENV` to use when running eslint tasks."},"eslint.nodePath":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"A path added to `NODE_PATH` when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"markdownDescription":"The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off.","deprecationMessage":"The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member."},"eslint.quiet":{"scope":"resource","type":"boolean","default":false,"description":"Turns on quiet mode, which ignores warnings."},"eslint.onIgnoredFiles":{"scope":"resource","type":"string","enum":["warn","off"],"default":"off","description":"Whether ESLint should issue a warning on ignored files."},"eslint.migration.2_x":{"scope":"application","type":"string","enum":["off","on"],"default":"on","description":"Whether ESlint should migrate auto fix on save settings."},"eslint.useESLintClass":{"scope":"resource","type":"boolean","default":false,"description":"Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available."},"eslint.useFlatConfig":{"scope":"resource","type":"boolean","default":null,"markdownDescription":"Controls whether flat config should be used or not. This setting requires ESLint version 8.57 or later and is interpreted according to the [ESLint Flat Config rollout plan](https://eslint.org/blog/2023/10/flat-config-rollout-plans/)."},"eslint.experimental.useFlatConfig":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"Use ESLint version 8.57 or later and `eslint.useFlatConfig` instead.","description":"Enables support of experimental Flat Config (aka eslint.config.js). Requires ESLint version >= 8.21 < 8.57.0)."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"mode":{"type":"string","enum":["auto","location"],"default":"location"}},"required":["mode"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}},"deprecationMessage":"Use the new !cwd form.","required":["directory"]},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path starts with this directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["directory"]},{"type":"object","properties":{"pattern":{"type":"string","description":"A glob pattern to match a working directory."},"!cwd":{"type":"boolean","description":"Set to true if ESLint shouldn't change the working directory."}},"required":["pattern"]}]},"markdownDescription":"Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly."},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint."},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language."}},"deprecationMessage":"Auto Fix is enabled by default. Use the single string form."}]},"description":"An array of language ids which should be validated by ESLint. If not installed ESLint will show an error."},"eslint.ignoreUntitled":{"scope":"resource","type":"boolean","default":false,"description":"If true, untitled files won't be validated by ESLint."},"eslint.probe":{"scope":"resource","type":"array","items":{"type":"string"},"default":["astro","javascript","javascriptreact","typescript","typescriptreact","html","mdx","vue","markdown","json","jsonc"],"description":"An array of language ids for which the extension should probe if support is installed."},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"deprecationMessage":"This option is deprecated. Use eslint.lintTask.enable instead.","description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.enable":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.lintTask.options":{"scope":"resource","type":"string","default":".","markdownDescription":"Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface)."},"eslint.runtime":{"scope":"machine-overridable","type":["string","null"],"default":null,"markdownDescription":"The location of the node binary to run ESLint under."},"eslint.execArgv":{"scope":"machine-overridable","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"default":null,"markdownDescription":"Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size"},"eslint.debug":{"scope":"window","type":"boolean","default":false,"markdownDescription":"Enables ESLint debug mode (same as `--debug` on the command line)"},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"separateLine","commentStyle":"line"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"separateLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."},"commentStyle":{"type":"string","enum":["line","block"],"default":"line","definition":"The comment style to use when disabling a rule on a specific line."}},"additionalProperties":false,"markdownDescription":"Show disable lint rule in the quick fix menu."},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}},"additionalProperties":false,"markdownDescription":"Show open lint rule documentation web page in the quick fix menu."},"eslint.codeActionsOnSave.mode":{"scope":"resource","type":"string","enum":["all","problems"],"enumDescriptions":["Fixes all possible problems in the file. This option might take some time.","Fixes only reported problems that have non-overlapping textual edits. This option runs a lot faster."],"default":"all","markdownDescription":"Specifies the code action mode. Possible values are 'all' and 'problems'."},"eslint.codeActionsOnSave.rules":{"scope":"resource","anyOf":[{"type":"array","items":{"type":"string"}},{"type":"null"}],"default":null,"markdownDescription":"The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration"},"eslint.format.enable":{"scope":"resource","type":"boolean","default":false,"description":"Enables ESLint as a formatter."},"eslint.rules.customizations":{"items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn","off"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array","description":"Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules."},"eslint.notebooks.rules.customizations":{"items":{"properties":{"severity":{"enum":["downgrade","error","info","default","upgrade","warn","off"],"type":"string"},"rule":{"type":"string"}},"type":"object"},"scope":"resource","type":"array","description":"A special rules customization section for text cells in notebook documents."},"eslint.timeBudget.onValidation":{"scope":"resource","type":"object","properties":{"warn":{"type":"number","default":4000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning."},"error":{"type":"number","default":8000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on validation before showing an error."}},"default":{"warn":4000,"error":8000},"markdownDescription":"The time budget in milliseconds to spend on validation before showing a warning or error."},"eslint.timeBudget.onFixes":{"scope":"resource","type":"object","properties":{"warn":{"type":"number","default":3000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning."},"error":{"type":"number","default":6000,"minimum":0,"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing an error."}},"default":{"warn":3000,"error":6000},"markdownDescription":"The time budget in milliseconds to spend on computing fixes before showing a warning or error."}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"},{"title":"Migrate Settings","category":"ESLint","command":"eslint.migrateSettings"},{"title":"Restart ESLint Server","category":"ESLint","command":"eslint.restart"},{"title":"Revalidate all open files","category":"ESLint","command":"eslint.revalidate"}],"taskDefinitions":[{"type":"eslint"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"https://json.schemastore.org/eslintrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"ignore","extensions":[".eslintignore"]},{"id":"jsonc","filenames":[".eslintrc.json"]}]},"scripts":{"vscode:prepublish":"npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","test":"cd client && npm test && cd ..","lint":"node ./build/bin/all.js run lint","clean":"rimraf client/out && rimraf server/out","postinstall":"node ./build/bin/all.js install","symlink:lsp":"node ./build/bin/symlink.js"},"devDependencies":{"@types/mocha":"^10.0.6","@types/node":"^18.14.6","@typescript-eslint/eslint-plugin":"^7.1.1","@typescript-eslint/parser":"^7.1.1","eslint":"^8.57.0","merge-options":"^3.0.4","mocha":"^10.3.0","rimraf":"^5.0.5","ts-loader":"^9.5.1","typescript":"^5.3.3","webpack":"^5.90.3","webpack-cli":"^5.1.4","shelljs":"^0.8.5"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/dbaeumer.vscode-eslint-3.0.10-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"dbaeumer","metadata":{"installedTimestamp":1752772775118,"pinned":false,"source":"gallery","id":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","publisherId":"29859a75-d81b-4f0e-8578-2c80ecee6f99","publisherDisplayName":"dbaeumer","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":802182},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ibm.output-colorizer","uuid":"113b22c8-8125-42ec-8c6b-80c3f5d5fa5f"},"manifest":{"name":"output-colorizer","displayName":"Output Colorizer","description":"Syntax highlighting for log files","version":"0.1.2","publisher":"IBM","engines":{"vscode":"^1.0.0"},"categories":["Languages"],"repository":{"type":"git","url":"https://github.com/IBM-Bluemix/vscode-log-output-colorizer.git"},"author":{"name":"Andrew Trice","email":"amtrice@us.ibm.com"},"contributors":[{"name":"Jeff Sloyer","email":"jbsloyer@us.ibm.com"}],"contributes":{"languages":[{"id":"Log","aliases":["log"],"extensions":[".log"],"configuration":"./log.configuration.json","mimetypes":["log","text/log","text/x-log","text/x-code-output","x-code-output"]}],"grammars":[{"language":"Log","scopeName":"code.log","path":"./src/syntaxes/log.tmLanguage"}]},"devDependencies":{"gulp":"^3.9.1","gulp-vinyl-zip":"^1.2.2","vscode":"^0.11.0"},"galleryBanner":{"color":"#f2f2f2","theme":"light"},"icon":"github-assets/icon.png","bugs":{"url":"https://github.com/IBM-Bluemix/vscode-log-output-colorizer/issues"},"license":"MIT","homepage":"https://github.com/IBM-Bluemix/vscode-log-output-colorizer/blob/master/README.md","keywords":["IBM","log","color","output"]},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/ibm.output-colorizer-0.1.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"IBM","metadata":{"installedTimestamp":1752772775125,"pinned":false,"source":"gallery","id":"113b22c8-8125-42ec-8c6b-80c3f5d5fa5f","publisherId":"8f186bac-3651-4797-9216-ba30633f600b","publisherDisplayName":"IBM","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":271483},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"gruntfuggly.todo-tree","uuid":"261cac81-cd7b-4555-bb41-0c2d2bcd3e70"},"manifest":{"name":"todo-tree","displayName":"Todo Tree","description":"Show TODO, FIXME, etc. comment tags in a tree view","keywords":["todo","task","tasklist","multi-root ready"],"version":"0.0.215","license":"MIT","icon":"resources/todo-tree.png","publisher":"Gruntfuggly","engines":{"vscode":"^1.46.0"},"repository":"https://github.com/Gruntfuggly/todo-tree","bugs":{"url":"https://github.com/Gruntfuggly/todo-tree/issues","email":"gruntfuggly@googlemail.com"},"scripts":{"test":"./node_modules/node-qunit/bin/cli.js -c src/utils.js -t test/tests.js","vscode:prepublish":"./buildCodiconNames.js && webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch"},"categories":["Other"],"activationEvents":["onStartupFinished"],"main":"./dist/extension","contributes":{"viewsContainers":{"activitybar":[{"id":"todo-tree-container","title":"TODOs","icon":"resources/todo-tree-container.svg"}]},"views":{"todo-tree-container":[{"id":"todo-tree-view","name":"TODOs","when":"!todo-tree-is-empty"}]},"menus":{"view/title":[{"command":"todo-tree.exportTree","when":"view =~ /todo-tree/ && todo-tree-show-export-button == true","group":"navigation@1"},{"command":"todo-tree.reveal","when":"view =~ /todo-tree/ && todo-tree-tags-only == false && todo-tree-show-reveal-button == true","group":"navigation@2"},{"command":"todo-tree.scanOpenFilesOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'workspace only' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanCurrentFileOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'open files' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'current file' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.scanWorkspaceOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode == 'workspace' && todo-tree-show-scan-mode-button == true","group":"navigation@3"},{"command":"todo-tree.showFlatView","when":"view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == false && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.showTagsOnlyView","when":"view =~ /todo-tree/ && todo-tree-flat == true && todo-tree-tags-only == false && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.showTreeView","when":"view =~ /todo-tree/ && todo-tree-flat == false && todo-tree-tags-only == true && todo-tree-show-view-style-button == true","group":"navigation@4"},{"command":"todo-tree.groupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == false && todo-tree-show-group-by-tag-button == true","group":"navigation@5"},{"command":"todo-tree.ungroupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == true && todo-tree-show-group-by-tag-button == true","group":"navigation@5"},{"command":"todo-tree.groupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == false && todo-tree-show-group-by-sub-tag-button == true && todo-tree-has-sub-tags == true","group":"navigation@6"},{"command":"todo-tree.ungroupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == true && todo-tree-show-group-by-sub-tag-button == true && todo-tree-has-sub-tags == true","group":"navigation@6"},{"command":"todo-tree.filter","when":"view =~ /todo-tree/ && todo-tree-filtered == false && todo-tree-show-filter-button == true","group":"navigation@7"},{"command":"todo-tree.filterClear","when":"view =~ /todo-tree/ && todo-tree-filtered == true && todo-tree-show-filter-button == true","group":"navigation@7"},{"command":"todo-tree.refresh","when":"view =~ /todo-tree/ && todo-tree-show-refresh-button == true","group":"navigation@8"},{"command":"todo-tree.expand","when":"view =~ /todo-tree/ && todo-tree-expanded == false && todo-tree-show-expand-button == true","group":"navigation@9"},{"command":"todo-tree.collapse","when":"view =~ /todo-tree/ && todo-tree-expanded == true && todo-tree-show-expand-button == true","group":"navigation@9"}],"view/item/context":[{"command":"todo-tree.filter","when":"view =~ /todo-tree/ && todo-tree-filtered == false","group":"1-filters@1"},{"command":"todo-tree.filterClear","when":"view =~ /todo-tree/ && todo-tree-global-filter-active","group":"1-filters@2"},{"command":"todo-tree.excludeThisFolder","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@3"},{"command":"todo-tree.excludeThisFile","when":"view =~ /todo-tree/ && viewItem == file","group":"1-filters@4"},{"command":"todo-tree.showOnlyThisFolder","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@5"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","when":"view =~ /todo-tree/ && viewItem == folder","group":"1-filters@6"},{"command":"todo-tree.removeFilter","when":"view =~ /todo-tree/ && todo-tree-folder-filter-active","group":"1-filters@7"},{"command":"todo-tree.resetAllFilters","when":"view =~ /todo-tree/ && todo-tree-folder-filter-active","group":"1-filters@8"},{"command":"todo-tree.toggleItemCounts","when":"view =~ /todo-tree/","group":"2-toggles"},{"command":"todo-tree.toggleBadges","when":"view =~ /todo-tree/","group":"2-toggles"},{"command":"todo-tree.toggleCompactFolders","when":"view =~/todo-tree/ && todo-tree-can-toggle-compact-folders == true","group":"2-toggles"},{"command":"todo-tree.scanOpenFilesOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'open files'","group":"3-view"},{"command":"todo-tree.scanCurrentFileOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'current file'","group":"3-view"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'workspace'","group":"3-view"},{"command":"todo-tree.scanWorkspaceOnly","when":"view =~ /todo-tree/ && todo-tree-scan-mode != 'workspace only'","group":"3-view"},{"command":"todo-tree.expand","when":"view =~ /todo-tree/ && todo-tree-expanded == false","group":"4-tree@1"},{"command":"todo-tree.collapse","when":"view =~ /todo-tree/ && todo-tree-expanded == true","group":"4-tree@1"},{"command":"todo-tree.showFlatView","when":"view =~ /todo-tree/ && todo-tree-flat == false","group":"4-tree@2"},{"command":"todo-tree.showTagsOnlyView","when":"view =~ /todo-tree/ && todo-tree-tags-only == false","group":"4-tree@3"},{"command":"todo-tree.showTreeView","when":"view =~ /todo-tree/ && todo-tree-flat == true || todo-tree-tags-only == true","group":"4-tree@4"},{"command":"todo-tree.groupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == false","group":"4-tree@5"},{"command":"todo-tree.ungroupByTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-tag == true","group":"4-tree@5"},{"command":"todo-tree.groupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == false && todo-tree-has-sub-tags == true","group":"4-tree@6"},{"command":"todo-tree.ungroupBySubTag","when":"view =~ /todo-tree/ && todo-tree-grouped-by-sub-tag == true && todo-tree-has-sub-tags == true","group":"4-tree@6"},{"command":"todo-tree.exportTree","when":"view =~/todo-tree/","group":"5-misc1"},{"command":"todo-tree.reveal","when":"view =~/todo-tree/","group":"6-misc2"}],"commandPalette":[{"command":"todo-tree.showOnlyThisFolder","when":"false"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","when":"false"},{"command":"todo-tree.excludeThisFolder","when":"false"},{"command":"todo-tree.excludeThisFile","when":"false"}]},"commands":[{"command":"todo-tree.showFlatView","title":"Show Flat View","category":"Todo Tree","icon":"$(list-unordered)"},{"command":"todo-tree.showTagsOnlyView","title":"Show Tags Only View","category":"Todo Tree","icon":"$(list-flat)"},{"command":"todo-tree.showTreeView","title":"Show Tree View","category":"Todo Tree","icon":"$(list-tree)"},{"command":"todo-tree.refresh","title":"Refresh","category":"Todo Tree","icon":"$(refresh)"},{"command":"todo-tree.expand","title":"Expand Tree","category":"Todo Tree","icon":"$(expand-all)","enablement":"todo-tree-collapsible"},{"command":"todo-tree.collapse","title":"Collapse Tree","category":"Todo Tree","icon":"$(collapse-all)","enablement":"todo-tree-collapsible"},{"command":"todo-tree.filter","title":"Filter Tree","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.filterClear","title":"Clear Tree Filter","category":"Todo Tree","icon":"$(clear-all)"},{"command":"todo-tree.groupByTag","title":"Group by Tag","category":"Todo Tree","icon":"$(tag)"},{"command":"todo-tree.ungroupByTag","title":"Ungroup by Tag","category":"Todo Tree","icon":"$(unfold)"},{"command":"todo-tree.groupBySubTag","title":"Group by Sub Tag","category":"Todo Tree","icon":"$(chrome-restore)"},{"command":"todo-tree.ungroupBySubTag","title":"Ungroup by Sub Tag","category":"Todo Tree","icon":"$(chrome-maximize)"},{"command":"todo-tree.scanOpenFilesOnly","title":"Scan Open Files Only","category":"Todo Tree","icon":"$(files)"},{"command":"todo-tree.scanCurrentFileOnly","title":"Scan Current File Only","category":"Todo Tree","icon":"$(symbol-file)"},{"command":"todo-tree.scanWorkspaceAndOpenFiles","title":"Scan Workspace And Open Files","category":"Todo Tree","icon":"$(folder-active)"},{"command":"todo-tree.scanWorkspaceOnly","title":"Scan Workspace Only","category":"Todo Tree","icon":"$(folder)"},{"command":"todo-tree.addTag","title":"Add Tag","category":"Todo Tree"},{"command":"todo-tree.removeTag","title":"Remove Tag","category":"Todo Tree"},{"command":"todo-tree.exportTree","title":"Export Tree","category":"Todo Tree","icon":"$(save)"},{"command":"todo-tree.showOnlyThisFolder","title":"Only Show This Folder","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.showOnlyThisFolderAndSubfolders","title":"Only Show This Folder And Subfolders","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.switchScope","title":"Switch Scope","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.excludeThisFolder","title":"Hide This Folder","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.excludeThisFile","title":"Hide This File","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.removeFilter","title":"Remove Filter","category":"Todo Tree","icon":"$(filter)"},{"command":"todo-tree.resetAllFilters","title":"Reset All Filters","category":"Todo Tree","icon":"$(clear-all)"},{"command":"todo-tree.reveal","title":"Reveal Current File In Tree","category":"Todo Tree","icon":"$(location)"},{"command":"todo-tree.resetCache","title":"Reset Cache","category":"Todo Tree"},{"command":"todo-tree.toggleItemCounts","title":"Toggle Item Counts","category":"Todo Tree"},{"command":"todo-tree.toggleBadges","title":"Toggle Badges","category":"Todo Tree"},{"command":"todo-tree.toggleCompactFolders","title":"Toggle Compact Folders","category":"Todo Tree"}],"configuration":[{"title":"General","order":1,"type":"object","properties":{"todo-tree.general.debug":{"default":false,"markdownDescription":"Create a debug channel in the Output view.","type":"boolean"},"todo-tree.general.enableFileWatcher":{"default":false,"markdownDescription":"Set to true to enable automatic updates when files in the workspace are created, changed or deleted.","type":"boolean"},"todo-tree.general.fileWatcherGlob":{"default":"**/*","markdownDescription":"Glob for use with the file watcher. Change this if the default setting causes performance issues.","type":"string"},"todo-tree.general.revealBehaviour":{"default":"start of todo","enum":["start of line","start of todo","end of todo"],"markdownDescription":"Sets where the cursor is positioned when revealing a todo.","markdownEnumDescriptions":["Moves the cursor to the start of the line","Moves the cursor to the beginning of the todo","Moves the cursor to the end of the todo"],"type":"string"},"todo-tree.general.exportPath":{"default":"~/todo-tree-%Y%m%d-%H%M.txt","markdownDescription":"Path to use when exporting the tree. Environment variables will be expanded, e.g `${HOME}` and the path is passed through strftime (see <https://github.com/samsonjs/strftime>). Set the extension to `.json` to export as a JSON record.","type":"string"},"todo-tree.general.rootFolder":{"default":"","markdownDescription":"Folder in which to run the search (defaults to the workspace folder).","type":"string"},"todo-tree.general.schemes":{"default":["file","ssh","untitled","vscode-notebook-cell"],"items":{"type":"string"},"markdownDescription":"Editor schemes to find TODOs in. To find TODOs in settings files, for instance, add `vscode-userdata` or for output windows, add `output`.","type":"array"},"todo-tree.general.statusBar":{"default":"none","enum":["none","total","tags","top three","current file"],"markdownDescription":"What to show in the status bar - nothing, total count, counts per tag, top three counts per tag or count of tags in the current file.","markdownEnumDescriptions":["Only show the scanning status in the status bar","Show the total count of tags in the status bar","Show a breakdown of the count of each tag in the status bar","Show the count of the top three tags in the status bar","Show the count of tags in the current file in the status bar"],"type":"string"},"todo-tree.general.showIconsInsteadOfTagsInStatusBar":{"default":false,"markdownDescription":"Show icons instead of tags in the status bar","type":"boolean"},"todo-tree.general.statusBarClickBehaviour":{"default":"reveal","enum":["cycle","reveal","toggle highlights"],"markdownDescription":"What to do when the status bar is clicked.","markdownEnumDescriptions":["Toggle between showing total count and the top three tag counts","Reveal the tree view","Toggle highlighting"],"type":"string"},"todo-tree.general.tagGroups":{"default":{},"markdownDescription":"Allows similar tags to be grouped under the same type, e.g. `{ \"FIX\": [\"FIXME\",\"FIXIT\"] }`. *Note: All tags must also be in the `todo-tree.general.tags` tag list. If a tag group is defined, custom highlights apply to the group, not the tags within the group.*","type":"object","additionalProperties":{"type":"array","items":{"type":"string"}}},"todo-tree.general.tags":{"default":["BUG","HACK","FIXME","TODO","XXX","[ ]","[x]"],"items":{"type":"string"},"markdownDescription":"List of tags. *Note, if one tag starts with another tag, the longer tag should be specified first to prevent the shorter tag being matched.*","type":"array"}}},{"title":"Highlights","order":2,"type":"object","properties":{"todo-tree.highlights.customHighlight":{"default":{"BUG":{"icon":"bug"},"HACK":{"icon":"tools"},"FIXME":{"icon":"flame"},"XXX":{"icon":"$(close)"}},"markdownDescription":"Custom configuration for highlighting, [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).","type":"object","additionalProperties":{"type":"object","properties":{"foreground":{"type":"string","format":"color-hex"},"background":{"type":"string","format":"color-hex"},"opacity":{"type":"number"},"fontWeight":{"type":"string"},"fontStyle":{"type":"string"},"textDecoration":{"type":"string"},"borderRadius":{"type":"string"},"icon":{"type":"string"},"iconColour":{"type":"string","format":"color-hex"},"gutterIcon":{"type":"boolean"},"rulerColour":{"type":"string","format":"color-hex"},"rulerOpacity":{"type":"number"},"rulerLane":{"type":"string","enum":["none","left","center","right","full"]},"type":{"type":"string","enum":["tag","text","tag-and-comment","tag-and-subTag","text-and-comment","line","whole-line","none"]},"hideFromTree":{"type":"boolean"},"hideFromStatusBar":{"type":"boolean"}}}},"todo-tree.highlights.defaultHighlight":{"default":{},"markdownDescription":"Default configuration for highlighting. [Read more...](https://github.com/Gruntfuggly/todo-tree#highlighting).","type":"object","properties":{"foreground":{"type":"string","format":"color-hex"},"background":{"type":"string","format":"color-hex"},"opacity":{"type":"number"},"fontWeight":{"type":"string"},"fontStyle":{"type":"string"},"textDecoration":{"type":"string"},"borderRadius":{"type":"string"},"icon":{"type":"string"},"iconColour":{"type":"string","format":"color-hex"},"gutterIcon":{"type":"boolean"},"rulerColour":{"type":"string","format":"color-hex"},"rulerOpacity":{"type":"number"},"rulerLane":{"type":"string","enum":["none","left","center","right","full"]},"type":{"type":"string","enum":["tag","text","tag-and-comment","tag-and-subTag","text-and-comment","line","whole-line","none"]},"hideFromTree":{"type":"boolean"},"hideFromStatusBar":{"type":"boolean"}}},"todo-tree.highlights.enabled":{"default":true,"markdownDescription":"Set to false to disable highlighting.","type":"boolean"},"todo-tree.highlights.highlightDelay":{"default":500,"markdownDescription":"Delay before highlighting tags within files (milliseconds).","type":"integer"},"todo-tree.highlights.useColourScheme":{"default":false,"markdownDescription":"Use a colour scheme to colour the tags. This scheme is applied to the tags in the order of tags. The colours can be modified using `todo-tree.highlights.foregroundColourScheme` and `todo-tree.highlights.backgroundColourScheme`. The colour scheme overrides colours in the default highlight, but not the custom highlight.","type":"boolean","scope":"language-overridable"},"todo-tree.highlights.foregroundColourScheme":{"default":["white","black","black","white","white","white","black"],"items":{"type":"string"},"markdownDescription":"A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.","type":"array"},"todo-tree.highlights.backgroundColourScheme":{"default":["red","orange","yellow","green","blue","indigo","violet"],"items":{"type":"string"},"markdownDescription":"A list of colours which is applied to tag highlights in the same order as the tags. Repeats if necessary and is overridden by `todo-tree.highlights.customHighlight`.","type":"array"}}},{"title":"Filtering","order":3,"type":"object","properties":{"todo-tree.filtering.excludedWorkspaces":{"default":[],"items":{"type":"string"},"markdownDescription":"An array of workspace names to exclude as roots in the tree (wildcards can be used).","type":"array"},"todo-tree.filtering.excludeGlobs":{"default":["**/node_modules"],"items":{"type":"string"},"markdownDescription":"Globs for use in limiting search results by exclusion (applied after **includeGlobs**), e.g. `[\"**/*.txt\"]` to ignore all .txt files.","type":"array"},"todo-tree.filtering.ignoreGitSubmodules":{"default":false,"markdownDescription":"If true, any subfolders containing a .git file will be ignored when searching.","type":"boolean"},"todo-tree.filtering.includedWorkspaces":{"default":[],"items":{"type":"string"},"markdownDescription":"An array of workspace names to include as roots in the tree (wildcards can be used). An empty array includes all workspace folders.","type":"array"},"todo-tree.filtering.includeGlobs":{"default":[],"items":{"type":"string"},"markdownDescription":"Globs for use in limiting search results by inclusion, e.g. `[\"**/unit-tests/*.js\"]` to only show .js files in unit-tests subfolders.","type":"array"},"todo-tree.filtering.includeHiddenFiles":{"default":false,"markdownDescription":"Include hidden files (starting with a .).","type":"boolean"},"todo-tree.filtering.passGlobsToRipgrep":{"default":true,"markdownDescription":"By default the globs are passed into ripgrep to narrow the search. Set this to false to apply the globs *after* the search (pre 0.0.132 behaviour).","type":"boolean"},"todo-tree.filtering.scopes":{"default":[],"markdownDescription":"Scopes (sets of globs) that can be switched between","type":"array"},"todo-tree.filtering.useBuiltInExcludes":{"default":"none","enum":["none","file excludes","search excludes","file and search excludes"],"markdownDescription":"Add VSCode's `files.exclude` and/or `search.exclude` list to the ignored paths.","markdownEnumDescriptions":["Don't used any built in excludes","Use the Files:Exclude setting","Use the Search:Exclude setting","Use the Files:Exclude and the Search:Exclude setting"],"type":"string"}}},{"title":"Tree","order":4,"type":"object","properties":{"todo-tree.tree.autoRefresh":{"default":true,"markdownDescription":"Refresh the tree when files are opened or saved.","type":"boolean"},"todo-tree.tree.disableCompactFolders":{"default":false,"markdownDescription":"Prevent the tree from showing compact folders.","type":"boolean"},"todo-tree.tree.expanded":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially fully expanded.","type":"boolean"},"todo-tree.tree.filterCaseSensitive":{"default":false,"markdownDescription":"Set to true if you want the view filtering to be case sensitive.","type":"boolean"},"todo-tree.tree.flat":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially as flat list of files.","type":"boolean"},"todo-tree.tree.groupedByTag":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially grouped by tag.","type":"boolean"},"todo-tree.tree.groupedBySubTag":{"default":false,"markdownDescription":"When opening new workspaces, show the tree initially grouped by sub tag.","type":"boolean"},"todo-tree.tree.hideIconsWhenGroupedByTag":{"default":false,"markdownDescription":"Save some space by hiding the item icons when grouped by tag.","type":"boolean"},"todo-tree.tree.hideTreeWhenEmpty":{"default":false,"markdownDescription":"Hide the view if it is empty.","type":"boolean"},"todo-tree.tree.labelFormat":{"default":"${tag} ${after}","markdownDescription":"Format for tree items.","type":"string"},"todo-tree.tree.scanAtStartup":{"default":true,"markdownDescription":"Normally the tree is built as soon as the window is opened. If you have a large code base and want to manually start the scan, set this to false.","type":"boolean"},"todo-tree.tree.scanMode":{"default":"workspace","enum":["workspace","open files","current file","workspace only"],"markdownDescription":"Set this to change which files are scanned.","markdownEnumDescriptions":["Scan the whole workspace (or workspaces) and open file","Scan open files only","Scan the current file only","Scan the workspace but don't refresh files open in the editor"],"type":"string"},"todo-tree.tree.showBadges":{"default":true,"markdownDescription":"Show badges and SCM state in the tree view.","type":"boolean"},"todo-tree.tree.showCountsInTree":{"default":false,"markdownDescription":"Show counts of TODOs in the tree.","type":"boolean"},"todo-tree.tree.showInExplorer":{"default":false,"deprecationMessage":"This setting is no longer used. Please drag the view to move it.","type":"boolean"},"todo-tree.tree.showCurrentScanMode":{"default":true,"markdownDescription":"Show the current scan mode at the top of the tree view","type":"boolean"},"todo-tree.tree.showScanOpenFilesOrWorkspaceButton":{"default":false,"deprecationMessage":"This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.","type":"boolean"},"todo-tree.tree.subTagClickUrl":{"default":"","markdownDescription":"The URL to open when clicking on a sub tag in the tree. Can include placeholders as defined in `todo-tree.tree.labelFormat`.","type":"string"},"todo-tree.tree.showTagsFromOpenFilesOnly":{"default":false,"deprecationMessage":"This setting is no longer used, please use \"todo-tree.tree.scanMode\" instead.","type":"boolean"},"todo-tree.tree.sortTagsOnlyViewAlphabetically":{"default":false,"markdownDescription":"Sort items in the tags only view alphabetically instead of by file and line number.","type":"boolean"},"todo-tree.tree.sort":{"default":true,"markdownDescription":"ripgrep searches using multiple threads to improve performance. The tree is sorted when it is populated so that it stays stable. If you want to use ripgrep's own sort arguments, set this to false.","type":"boolean"},"todo-tree.tree.tagsOnly":{"default":false,"markdownDescription":"When opening new workspaces, show only tag elements in tree.","type":"boolean"},"todo-tree.tree.tooltipFormat":{"default":"${filepath}, line ${line}","markdownDescription":"Tree item tooltip format.","type":"string"},"todo-tree.tree.trackFile":{"default":true,"markdownDescription":"Track the current file in the tree view.","type":"boolean"}}},{"title":"Buttons","order":5,"type":"object","properties":{"todo-tree.tree.buttons.reveal":{"default":true,"markdownDescription":"Show a button in the tree view title bar to reveal the current item (only when track file is not enabled).","type":"boolean"},"todo-tree.tree.buttons.scanMode":{"default":false,"markdownDescription":"Show a button in the tree view title bar to change the Scan Mode setting.","type":"boolean"},"todo-tree.tree.buttons.viewStyle":{"default":true,"markdownDescription":"Show a button in the tree view title bar to change the view style (tree, flat or tags only).","type":"boolean"},"todo-tree.tree.buttons.groupByTag":{"default":true,"markdownDescription":"Show a button in the tree view title bar to enable grouping items by tag.","type":"boolean"},"todo-tree.tree.buttons.groupBySubTag":{"default":false,"markdownDescription":"Show a button in the tree view title bar to enable grouping items by sub tag.","type":"boolean"},"todo-tree.tree.buttons.filter":{"default":true,"markdownDescription":"Show a button in the tree view title bar allowing the tree to be filtered by entering some text.","type":"boolean"},"todo-tree.tree.buttons.refresh":{"default":true,"markdownDescription":"Show a refresh button in the tree view title bar.","type":"boolean"},"todo-tree.tree.buttons.expand":{"default":true,"markdownDescription":"Show a button in the tree view title bar to expand or collapse the whole tree.","type":"boolean"},"todo-tree.tree.buttons.export":{"default":false,"markdownDescription":"Show a button in the tree view title bar to create a file showing the tree content.","type":"boolean"}}},{"title":"Regex","order":6,"type":"object","properties":{"todo-tree.regex.regex":{"default":"(//|#|<!--|;|/\\*|^|^[ \\t]*(-|\\d+.))\\s*($TAGS)","markdownDescription":"Regular expression for matching TODOs. Note: **($TAGS)** will be replaced by the expanded tag list. For some of the extension features to work, **($TAGS)** should be present in the regex, however, the basic functionality should still work if you need to explicitly expand the tag list.","type":"string","minLength":1},"todo-tree.regex.regexCaseSensitive":{"default":true,"markdownDescription":"Use a case sensitive regular expression.","type":"boolean"},"todo-tree.regex.subTagRegex":{"default":"","markdownDescription":"Regular expression for processing the text to the right of the tag, e.g. for extracting a sub tag, or removing unwanted characters.","type":"string"},"todo-tree.regex.enableMultiLine":{"default":false,"markdownDescription":"Force the regex to match over multiple lines. Allows use of `[\\s\\S]` to match anything including newlines.","type":"boolean"},"todo-tree.ripgrep.ripgrep":{"default":"","markdownDescription":"Location of your version of ripgrep.","type":"string"},"todo-tree.ripgrep.ripgrepArgs":{"default":"--max-columns=1000 --no-config ","markdownDescription":"Additional arguments to pass to ripgrep (Use with caution!).","type":"string"}}},{"title":"Ripgrep","order":7,"type":"object","properties":{"todo-tree.ripgrep.ripgrepMaxBuffer":{"default":200,"markdownDescription":"Size of the buffer to use for retrieving output from ripgrep (kilobytes).","type":"integer"},"todo-tree.ripgrep.usePatternFile":{"default":true,"markdownDescription":"A pattern file is used with ripgrep by default. If you experience issues with deleting the pattern file, set this to false to use the legacy method of providing the regex to ripgrep.","type":"boolean"}}}]},"dependencies":{"@primer/octicons":"^11.0.0","comment-patterns":"^0.10.1","fast-strftime":"^1.1.1","find":"^0.3.0","micromatch":"^4.0.2","node-qunit":"^2.0.0","regexp-match-indices":"^1.0.2","treeify":"^1.1.0"},"devDependencies":{"parse-code-context":"^1.0.0","webpack":"^4.43.0","webpack-cli":"^4.9.1"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/gruntfuggly.todo-tree-0.0.215-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Gruntfuggly","metadata":{"installedTimestamp":1752772775127,"pinned":false,"source":"gallery","id":"261cac81-cd7b-4555-bb41-0c2d2bcd3e70","publisherId":"d4906d2e-f2ee-492d-9c7c-02b6160599ec","publisherDisplayName":"Gruntfuggly","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1223539},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"aaron-bond.better-comments","uuid":"7a0110bb-231a-4598-aa1b-0769ea46d28b"},"manifest":{"name":"better-comments","displayName":"Better Comments","icon":"icon.png","description":"Improve your code commenting by annotating with alert, informational, TODOs, and more!","version":"3.0.2","publisher":"aaron-bond","author":{"name":"Aaron Bond"},"homepage":"https://github.com/aaron-bond/better-comments/blob/master/README.md","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/aaron-bond/better-comments"},"sponsor":{"url":"https://github.com/sponsors/aaron-bond"},"bugs":"https://github.com/aaron-bond/better-comments/issues","categories":["Formatters"],"engines":{"vscode":"^1.65.0"},"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"galleryBanner":{"color":"#e3f4ff","theme":"light"},"browser":"./out/web/extension.js","main":"./out/extension","scripts":{"vscode:prepublish":"npm run compile && npm run package-web","compile":"tsc -p ./","watch":"tsc -watch -p ./","lint":"tslint -c tslint.json 'src/**/*.ts'","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"contributes":{"configuration":{"title":"Better Comments configuration","properties":{"better-comments.multilineComments":{"type":"boolean","description":"Whether the multiline comment highlighter should be active","default":true},"better-comments.highlightPlainText":{"type":"boolean","description":"Whether the plaintext comment highlighter should be active","default":false},"better-comments.tags":{"type":"array","description":"Tags which are used to color the comments. Changes require a restart of VS Code to take effect","default":[{"tag":"!","color":"#FF2D00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"?","color":"#3498DB","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"//","color":"#474747","strikethrough":true,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"todo","color":"#FF8C00","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false},{"tag":"*","color":"#98C379","strikethrough":false,"underline":false,"backgroundColor":"transparent","bold":false,"italic":false}]}}}},"dependencies":{"json5":"^2.2.1"},"devDependencies":{"@types/json5":"^2.2.0","@types/node":"^17.0.23","@types/vscode":"^1.65.0","path-browserify":"^1.0.1","process":"^0.11.10","ts-loader":"^9.3.1","tslint":"^6.1.3","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.10.0","webpack":"^5.74.0","webpack-cli":"^4.10.0"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/aaron-bond.better-comments-3.0.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"aaron-bond","metadata":{"installedTimestamp":1752772775131,"pinned":false,"source":"gallery","id":"7a0110bb-231a-4598-aa1b-0769ea46d28b","publisherId":"02145bab-b083-4d1e-b8ec-08d7abdd68da","publisherDisplayName":"aaron-bond","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":357211},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"gydunhn.vsc-essentials-core","uuid":"b982ea50-b9ba-4aae-a800-7a85eb0e374e"},"manifest":{"name":"vsc-essentials-core","displayName":"VSC-Essentials-Core","description":"The Essential extensions (core) for Developers","icon":"img/essentials.png","galleryBanner":{"color":"#6B8E23","theme":"dark"},"license":"LICENSE.md","repository":{"type":"git","url":"https://github.com/Gydunhn/VSC-Essentials-Core.git"},"keywords":["VSC","Code","VSCode","Visual Studio","Visual Studio Code","VSC Essentials","Essentials","Esenciales","Essenciais","Essentiel","Essenziali","Essentielles","Esencajoj","必需品","골자","अत्यावश्यकम्","ملزومات","Markdown","markdownlint","Markdown All in One","Markdown Checkboxes","Todo Tree","Emoji","Better Comments","Emojisense","Bookmarks","indent-rainbow","Error Lens","Output Colorizer","Terminal Status Bar","Path Intellisense","Format Toggle","Gydunhn"],"version":"0.5.0","publisher":"Gydunhn","engines":{"vscode":"^1.35.0"},"categories":["Extension Packs"],"extensionPack":["yzhang.markdown-all-in-one","DavidAnson.vscode-markdownlint","bierner.emojisense","bierner.markdown-emoji","bierner.markdown-checkbox","Gruntfuggly.todo-tree","flyfly6.terminal-in-status-bar","aaron-bond.better-comments","alefragnani.Bookmarks","oderwat.indent-rainbow","usernamehw.errorlens","IBM.output-colorizer","christian-kohler.path-intellisense","tombonnike.vscode-status-bar-format-toggle"]},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/gydunhn.vsc-essentials-core-0.5.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Gydunhn","metadata":{"installedTimestamp":1752772775119,"pinned":false,"source":"gallery","id":"b982ea50-b9ba-4aae-a800-7a85eb0e374e","publisherId":"5ba0db5c-54ed-404d-85d3-eb4f8e655371","publisherDisplayName":"Gydunhn","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":56722},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"bierner.emojisense","uuid":"081cd2e9-bc51-4ea3-977e-544bed2e33a8"},"manifest":{"name":"emojisense","private":true,"displayName":":emojisense:","description":"Adds suggestions and autocomplete for emoji","version":"0.10.0","publisher":"bierner","icon":"media/icon.png","license":"MIT","extensionKind":["ui","workspace"],"keywords":["emoji","emojis","emoticon","emoticons"],"engines":{"vscode":"^1.75.0"},"repository":{"url":"https://github.com/mattbierner/vscode-emojisense.git"},"bugs":{"url":"https://github.com/mattbierner/vscode-emojisense/issues"},"categories":["Other"],"activationEvents":["onStartupFinished"],"main":"./dist/extension","browser":"./dist/web/extension.js","contributes":{"commands":[{"command":"emojisense.quickEmoji","title":"Pick an emoji and insert in editor","category":"Emojisense"},{"command":"emojisense.quickEmojitext","title":"Pick an :emoji: and insert in editor","category":"Emojisense"},{"command":"emojisense.quickEmojiTerminal","title":"Pick an emoji and insert in terminal","category":"Emojisense"},{"command":"emojisense.quickEmojitextTerminal","title":"Pick an :emoji: and insert in terminal","category":"Emojisense"}],"menus":{"commandPalette":[{"command":"emojisense.quickEmojiTerminal","when":"panelFocus && activeViewlet == 'workbench.panel.terminal'"},{"command":"emojisense.quickEmojitextTerminal","when":"panelFocus && activeViewlet == 'workbench.panel.terminal'"}]},"keybindings":[{"mac":"cmd+i","key":"ctrl+i","linux":"ctrl+alt+i","command":"emojisense.quickEmojiTerminal","when":"terminalFocus"},{"mac":"shift+cmd+i","key":"shift+ctrl+i","linux":"shift+ctrl+alt+i","command":"emojisense.quickEmojitextTerminal","when":"terminalFocus"},{"mac":"cmd+i","key":"ctrl+i","command":"emojisense.quickEmoji","when":"editorTextFocus"},{"mac":"shift+cmd+i","key":"shift+ctrl+i","command":"emojisense.quickEmojitext","when":"editorTextFocus"}],"configuration":{"title":":emojisense:","properties":{"emojisense.unicodeCompletionsEnabled":{"type":"boolean","markdownDescription":"Enable completions that insert emoji as unicode, i.e. `:smile_cat:` -> 😸","default":true},"emojisense.markupCompletionsEnabled":{"type":"boolean","markdownDescription":"Enable completions that insert emoji markup, i.e. `::smile_cat` -> `:smile_cat:`","default":true},"emojisense.showOnColon":{"type":"boolean","description":"Should emoji completions automatically be shown when you type a colon?","default":true},"emojisense.emojiDecoratorsEnabled":{"type":"boolean","description":"Enables or disables emoji decorators for emoji markup.","default":true},"emojisense.languages":{"type":"object","description":"Controls which languages emojisense is active in. You can also customize emojisense settings per language.\nTo enable emojisense for all languages, use \"*\": true","default":{"markdown":true,"plaintext":{"markupCompletionsEnabled":false,"emojiDecoratorsEnabled":false},"scminput":true,"git-commit":true},"additionalProperties":{"anyOf":[{"type":"boolean"},{"type":"object","additionalProperties":false,"properties":{"unicodeCompletionsEnabled":{"type":"boolean","markdownDescription":"Enable completions that insert emoji as unicode, i.e. `:smile_cat:` -> 😸","default":false},"markupCompletionsEnabled":{"type":"boolean","markdownDescription":"Enable completions that insert emoji markdown, i.e. `::smile_cat` -> `:smile_cat:`","default":false},"emojiDecoratorsEnabled":{"type":"boolean","description":"Enables or disables emoji decorators for emoji markup.","default":false}}}]}}}}},"scripts":{"compile":"webpack --config ./build/webpack.config.js","watch":"webpack --watch --config ./build/webpack.config.js","package":"webpack --mode production --config ./build/webpack.config.js","lint":"eslint -c .eslintrc.js --ext .ts src","vscode:prepublish":"npm run package ; npm run package-web","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"devDependencies":{"@types/node":"^18","@types/vscode":"^1.75.0","@typescript-eslint/eslint-plugin":"^5.59.0","@typescript-eslint/parser":"^5.59.0","eslint":"^8.42.0","process":"^0.11.10","ts-loader":"^9.2.5","typescript":"^5.1.3","webpack":"^5.52.0","webpack-cli":"^4.8.0"},"dependencies":{"gemoji":"^8.1.0"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/bierner.emojisense-0.10.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"bierner","metadata":{"installedTimestamp":1752772775129,"pinned":false,"source":"gallery","id":"081cd2e9-bc51-4ea3-977e-544bed2e33a8","publisherId":"f164f116-e2aa-496b-84dc-2451248e8beb","publisherDisplayName":"bierner","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":506952},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"firefox-devtools.vscode-firefox-debug","uuid":"c5f4d87f-a524-462c-ac01-923eb19cf3e9"},"manifest":{"name":"vscode-firefox-debug","displayName":"Debugger for Firefox","version":"2.15.0","author":"Holger Benl <hbenl@evandor.de>","publisher":"firefox-devtools","description":"Debug your web application or browser extension in Firefox","icon":"icon.png","engines":{"vscode":"^1.80.0"},"categories":["Debuggers"],"scripts":{"reinstall":"rimraf node_modules package-lock.json && npm install","clean":"rimraf dist/*.bundle.js dist/*.bundle.js.map dist/mappings.wasm coverage .nyc_output vscode-firefox-debug-*.vsix","build":"webpack --mode=production","watch":"webpack --watch --mode=development","rebuild":"npm run clean && npm run build","typecheck":"tsc","typecheck-watch":"tsc -w","test":"mocha","cover":"nyc npm test && nyc report --reporter=lcov && nyc report --reporter=html","package":"vsce package","publish":"npm run rebuild && vsce publish","package-npm":"cd dist && npm pack","publish-npm":"npm run rebuild && cd dist && npm publish"},"dependencies":{"@babel/polyfill":"^7.12.1","@vscode/debugadapter":"^1.68.0","chokidar":"^3.6.0","core-js":"^3.39.0","data-uri-to-buffer":"3.0.1","debounce":"^2.2.0","escape-string-regexp":"4.0.0","file-uri-to-path":"^2.0.0","file-url":"^4.0.0","firefox-profile":"^4.7.0","fs-extra":"^11.2.0","is-absolute-url":"3.0.3","minimatch":"^9.0.5","source-map":"^0.7.4","strip-json-comments":"3.1.1","uuid":"^11.0.3","vscode-uri":"^3.0.8"},"devDependencies":{"@babel/cli":"^7.26.4","@babel/core":"^7.26.0","@babel/plugin-proposal-class-properties":"^7.18.6","@babel/plugin-proposal-object-rest-spread":"^7.20.7","@babel/preset-env":"^7.26.0","@babel/preset-typescript":"^7.26.0","@gulp-sourcemaps/map-sources":"^1.0.0","@types/debounce":"^1.2.4","@types/fs-extra":"^11.0.4","@types/gulp":"^4.0.17","@types/gulp-concat":"^0.0.37","@types/gulp-rename":"^2.0.6","@types/gulp-sourcemaps":"^0.0.38","@types/gulp-uglify":"^3.0.11","@types/mocha":"^10.0.10","@types/node":"^16.18.122","@types/vscode":"~1.80.0","@vscode/debugadapter-testsupport":"^1.68.0","babel-loader":"^9.2.1","copy-webpack-plugin":"^12.0.2","dotenv":"^16.4.7","gulp":"^5.0.0","gulp-concat":"^2.6.1","gulp-nop":"0.0.3","gulp-rename":"^2.0.0","gulp-sourcemaps":"^3.0.0","gulp-uglify":"^3.0.2","mocha":"^11.0.1","nyc":"^17.1.0","original-fs":"^1.2.0","rimraf":"^6.0.1","terser-webpack-plugin":"^5.3.11","ts-node":"^10.9.2","typescript":"^5.7.2","vsce":"^2.15.0","webpack":"^5.97.1","webpack-cli":"^5.1.4"},"babel":{"presets":["@babel/typescript",["@babel/env",{"modules":false,"useBuiltIns":"usage","corejs":3}]],"plugins":["@babel/proposal-class-properties","@babel/proposal-object-rest-spread"]},"browserslist":["node 8"],"nyc":{"include":["out/**/*.js"],"exclude":["out/test/**/*.js"]},"repository":{"type":"git","url":"https://github.com/firefox-devtools/vscode-firefox-debug.git"},"keywords":["vscode","firefox","debug"],"license":"MIT","bugs":{"url":"https://github.com/firefox-devtools/vscode-firefox-debug/issues"},"homepage":"https://github.com/firefox-devtools/vscode-firefox-debug","extensionKind":["ui"],"main":"./dist/extension.bundle.js","activationEvents":["onDebug"],"contributes":{"commands":[{"command":"extension.firefox.reloadAddon","title":"Firefox: Reload add-on"},{"command":"extension.firefox.toggleSkippingFile","title":"Toggle skipping this file"},{"command":"extension.firefox.openScript","title":"Open script"},{"command":"extension.firefox.addPathMapping","title":"Map to local directory"},{"command":"extension.firefox.addFilePathMapping","title":"Map to local file"},{"command":"extension.firefox.addNullPathMapping","title":"Don't map this directory"},{"command":"extension.firefox.addNullFilePathMapping","title":"Don't map this file"},{"command":"extension.firefox.enablePopupAutohide","title":"Firefox: Enable popup auto-hide"},{"command":"extension.firefox.disablePopupAutohide","title":"Firefox: Disable popup auto-hide"},{"command":"extension.firefox.togglePopupAutohide","title":"Firefox: Toggle popup auto-hide"},{"command":"extension.firefox.pathMappingWizard","title":"Firefox: Run the path mapping wizard"}],"menus":{"debug/callstack/context":[{"command":"extension.firefox.toggleSkippingFile","when":"inDebugMode && debugType == 'firefox' && callStackItemType == 'stackFrame'"}],"view/item/context":[{"command":"extension.firefox.addPathMapping","group":"addPathMapping@1","when":"view == extension.firefox.loadedScripts && viewItem == directory"},{"command":"extension.firefox.addFilePathMapping","group":"addPathMapping@1","when":"view == extension.firefox.loadedScripts && viewItem == file"},{"command":"extension.firefox.addNullPathMapping","group":"addPathMapping@2","when":"view == extension.firefox.loadedScripts && viewItem == directory"},{"command":"extension.firefox.addNullFilePathMapping","group":"addPathMapping@2","when":"view == extension.firefox.loadedScripts && viewItem == file"}],"commandPalette":[{"command":"extension.firefox.pathMappingWizard","when":"editorIsOpen && inDebugMode && debugType == 'firefox'"},{"command":"extension.firefox.toggleSkippingFile","when":"false"},{"command":"extension.firefox.openScript","when":"false"},{"command":"extension.firefox.addPathMapping","when":"false"},{"command":"extension.firefox.addFilePathMapping","when":"false"},{"command":"extension.firefox.addNullPathMapping","when":"false"},{"command":"extension.firefox.addNullFilePathMapping","when":"false"}]},"configuration":{"title":"Firefox debug","properties":{"firefox.executable":{"description":"Absolute path to the Firefox executable","type":"string","scope":"resource"},"firefox.args":{"description":"Additional arguments passed to Firefox","type":"array","items":{"type":"string"},"scope":"resource"},"firefox.profileDir":{"description":"The path of the Firefox profile directory to use","type":"string","scope":"resource"},"firefox.profile":{"description":"The name of the Firefox profile to use","type":"string","scope":"resource"},"firefox.keepProfileChanges":{"description":"Use the specified profile directly instead of a temporary copy","type":"boolean","scope":"resource"},"firefox.port":{"description":"The remote debugging port to use","type":"number","scope":"resource"}}},"views":{"debug":[{"id":"extension.firefox.loadedScripts","name":"Loaded Scripts","when":"inDebugMode && debugType == 'firefox'"},{"id":"extension.firefox.eventBreakpoints","name":"Event Listener Breakpoints","when":"inDebugMode && debugType == 'firefox'"}]},"debuggers":[{"type":"firefox","label":"Firefox","program":"./dist/adapter.bundle.js","runtime":"node","languages":["html"],"initialConfigurations":[{"name":"Launch index.html","type":"firefox","request":"launch","reAttach":true,"file":"${workspaceFolder}/index.html"},{"name":"Launch localhost","type":"firefox","request":"launch","reAttach":true,"url":"http://localhost/index.html","webRoot":"${workspaceFolder}"},{"name":"Attach","type":"firefox","request":"attach"},{"name":"Launch WebExtension","type":"firefox","request":"launch","reAttach":true,"addonPath":"${workspaceFolder}"}],"configurationSnippets":[{"label":"Firefox: Launch (file)","description":"Launch Firefox navigated to a local file in your project","body":{"type":"firefox","request":"launch","reAttach":true,"name":"${1:Launch index.html}","file":"^\"\\${workspaceFolder}/${2:index.html}\""}},{"label":"Firefox: Launch (server)","description":"Launch Firefox navigated to your project running on a server","body":{"type":"firefox","request":"launch","reAttach":true,"name":"${1:Launch localhost}","url":"${2:http://localhost/index.html}","webRoot":"^\"\\${workspaceFolder}${3:}\""}},{"label":"Firefox: Attach","description":"Attach to a running Firefox process","body":{"type":"firefox","request":"attach","name":"${1:Attach}"}},{"label":"Firefox: WebExtension","description":"Launch Firefox with your WebExtension project installed","body":{"type":"firefox","request":"launch","reAttach":true,"name":"${1:Launch add-on}","addonPath":"^\"\\${workspaceFolder}${2:}\""}}],"configurationAttributes":{"launch":{"required":[],"properties":{"file":{"type":"string","description":"The file to open in the browser","default":"${workspaceFolder}/index.html"},"url":{"type":"string","description":"The url to open in the browser"},"webRoot":{"type":"string","description":"If the 'url' property is specified, this property specifies the workspace absolute path corresponding to the path of the url","default":"${workspaceFolder}"},"firefoxExecutable":{"type":"string","description":"Absolute path to the Firefox executable"},"tmpDir":{"type":"string","description":"The path of the directory to use for temporary files"},"profileDir":{"type":"string","description":"The path of the Firefox profile directory to use"},"profile":{"type":"string","description":"The name of the Firefox profile to use"},"keepProfileChanges":{"type":"boolean","description":"Use the specified profile directly instead of a temporary copy","default":true},"port":{"type":"number","description":"The remote debugging port to use","default":6000},"timeout":{"type":"number","description":"The timeout in seconds for the adapter to connect to Firefox after launching it","default":5},"firefoxArgs":{"type":"array","description":"Additional arguments passed to Firefox","items":{"type":"string"},"default":[]},"reAttach":{"type":"boolean","description":"Don't terminate Firefox at the end of the debugging session and re-attach to it when starting the next session","default":true},"reloadOnAttach":{"type":"boolean","description":"Reload all tabs after re-attaching to Firefox","default":true},"reloadOnChange":{"description":"Watch the specified files, directories or glob patterns and reload the tabs or add-on when they change","type":["string","array","object"],"items":{"type":"string"},"properties":{"watch":{"description":"Files, directories or glob patterns to be watched for file changes","type":["string","array"],"items":{"type":"string"},"default":"${workspaceFolder}/**/*.js"},"ignore":{"description":"Files, directories or glob patterns to be ignored","type":["string","array"],"items":{"type":"string"},"default":"**/node_modules/**"},"debounce":{"description":"The time in milliseconds to wait after a file change before reloading, or false to start reloading immediately","type":["number","boolean"]}},"default":{"watch":"${workspaceFolder}/**/*.js","ignore":"**/node_modules/**"}},"clearConsoleOnReload":{"type":"boolean","description":"Clear the debug console in VS Code when the page is reloaded in Firefox","default":false},"pathMappings":{"type":"array","description":"Additional mappings from URLs (as seen by Firefox) to filesystem paths (as seen by VS Code)","items":{"type":"object","properties":{"url":{"type":"string","description":"The URL as seen by Firefox"},"path":{"type":["string","null"],"description":"The corresponding filesystem path as seen by VS Code"}}}},"pathMappingIndex":{"type":"string","description":"The name of the directory index file configured in the webserver","default":"index.html"},"skipFiles":{"type":"array","description":"An array of glob patterns to skip when debugging","items":{"type":"string"}},"preferences":{"type":"object","description":"Set additional Firefox preferences","additionalProperties":{"type":["boolean","integer","string","null"]}},"tabFilter":{"description":"Only attach to tabs whose URL matches this","type":["string","array","object"],"items":{"type":"string"},"properties":{"include":{"description":"URLs to attach to","type":["string","array"],"items":{"type":"string"},"default":"*"},"exclude":{"description":"URLs not to attach to","type":["string","array"],"items":{"type":"string"},"default":[]}},"default":"*"},"showConsoleCallLocation":{"type":"boolean","description":"Show the location of console API calls","default":true},"addonPath":{"type":"string","description":"The path of the directory containing the WebExtension","default":"${workspaceFolder}"},"popupAutohideButton":{"type":"boolean","description":"Show a button in the status bar for toggling popup auto-hide (WebExtension debugging)","default":false},"liftAccessorsFromPrototypes":{"type":"number","description":"The number of prototype levels that should be scanned for accessor properties","default":0},"suggestPathMappingWizard":{"type":"boolean","description":"Suggest using the Path Mapping Wizard when the user tries to set a breakpoint in an unmapped source during a debug session","default":true},"enableCRAWorkaround":{"type":"boolean","description":"Enable a workaround for breakpoints not working in projects created using create-react-app","default":true},"log":{"type":"object","description":"Configuration for diagnostic logging of the debug adapter","properties":{"fileName":{"type":"string","description":"The name of the logfile","default":"${workspaceFolder}/vscode-firefox-debug.log"},"fileLevel":{"type":"object","description":"The minimum loglevel(s) for messages written to the logfile","properties":{"default":{"type":"string","enum":["Debug","Info","Warn","Error"],"description":"The default loglevel"}},"additionalProperties":{"type":"string","enum":["Debug","Info","Warn","Error"]},"default":{"default":"Debug"}},"consoleLevel":{"type":"object","description":"The minimum loglevel(s) for messages written to the console","properties":{"default":{"type":"string","enum":["Debug","Info","Warn","Error"],"description":"The default loglevel"}},"additionalProperties":{"type":"string","enum":["Debug","Info","Warn","Error"]},"default":{"default":"Debug"}}},"default":{"fileName":"${workspaceFolder}/vscode-firefox-debug.log","fileLevel":{"default":"Debug"},"consoleLevel":{"default":"Warn"}}}}},"attach":{"required":[],"properties":{"url":{"type":"string","description":"The url to open in the browser"},"webRoot":{"type":"string","description":"If the 'url' property is specified, this property specifies the workspace absolute path corresponding to the path of the url","default":"${workspaceFolder}"},"firefoxExecutable":{"type":"string","description":"Absolute path to the Firefox executable"},"profileDir":{"type":"string","description":"The path of the Firefox profile directory to use"},"port":{"type":"number","description":"The remote debugging port to use","default":6000},"host":{"type":"string","description":"The remote debugging host to use","default":"localhost"},"reloadOnAttach":{"type":"boolean","description":"Reload all tabs after attaching to Firefox","default":false},"reloadOnChange":{"description":"Watch the specified files, directories or glob patterns and reload the tabs or add-on when they change","type":["string","array","object"],"items":{"type":"string"},"properties":{"watch":{"description":"Files, directories or glob patterns to be watched for file changes","type":["string","array"],"items":{"type":"string"},"default":"${workspaceFolder}/**/*.js"},"ignore":{"description":"Files, directories or glob patterns to be ignored","type":["string","array"],"items":{"type":"string"},"default":"**/node_modules/**"},"debounce":{"description":"The time in milliseconds to wait after a file change before reloading, or false to start reloading immediately","type":["number","boolean"]}},"default":{"watch":"${workspaceFolder}/**/*.js","ignore":"**/node_modules/**"}},"clearConsoleOnReload":{"type":"boolean","description":"Clear the debug console in VS Code when the page is reloaded in Firefox","default":false},"pathMappings":{"type":"array","description":"Additional mappings from URLs (as seen by Firefox) to filesystem paths (as seen by VS Code)","items":{"type":"object","properties":{"url":{"type":"string","description":"The URL as seen by Firefox"},"path":{"type":["string","null"],"description":"The corresponding filesystem path as seen by VS Code"}}}},"pathMappingIndex":{"type":"string","description":"The name of the directory index file configured in the webserver","default":"index.html"},"skipFiles":{"type":"array","description":"An array of glob patterns to skip when debugging","items":{"type":"string"},"default":["${workspaceFolder}/node_modules/**/*"]},"tabFilter":{"description":"Only attach to tabs whose URL matches this","type":["string","array","object"],"items":{"type":"string"},"properties":{"include":{"description":"URLs to attach to","type":["string","array"],"items":{"type":"string"},"default":"*"},"exclude":{"description":"URLs not to attach to","type":["string","array"],"items":{"type":"string"},"default":[]}},"default":"*"},"showConsoleCallLocation":{"type":"boolean","description":"Show the location of console API calls","default":true},"addonPath":{"type":"string","description":"The path of the directory containing the WebExtension","default":"${workspaceFolder}"},"popupAutohideButton":{"type":"boolean","description":"Show a button in the status bar for toggling popup auto-hide (WebExtension debugging)","default":false},"liftAccessorsFromPrototypes":{"type":"number","description":"The number of prototype levels that should be scanned for accessor properties","default":0},"suggestPathMappingWizard":{"type":"boolean","description":"Suggest using the Path Mapping Wizard when the user tries to set a breakpoint in an unmapped source during a debug session","default":true},"enableCRAWorkaround":{"type":"boolean","description":"Enable a workaround for breakpoints not working in projects created using create-react-app","default":true},"log":{"type":"object","description":"Configuration for diagnostic logging of the debug adapter","properties":{"fileName":{"type":"string","description":"The name of the logfile","default":"${workspaceFolder}/vscode-firefox-debug.log"},"fileLevel":{"type":"object","description":"The minimum loglevel(s) for messages written to the logfile","properties":{"default":{"type":"string","enum":["Debug","Info","Warn","Error"],"description":"The default loglevel"}},"additionalProperties":{"type":"string","enum":["Debug","Info","Warn","Error"]},"default":{"default":"Debug"}},"consoleLevel":{"type":"object","description":"The minimum loglevel(s) for messages written to the console","properties":{"default":{"type":"string","enum":["Debug","Info","Warn","Error"],"description":"The default loglevel"}},"additionalProperties":{"type":"string","enum":["Debug","Info","Warn","Error"]},"default":{"default":"Debug"}}},"default":{"fileName":"${workspaceFolder}/vscode-firefox-debug.log","fileLevel":{"default":"Debug"},"consoleLevel":{"default":"Warn"}}}}}}}]}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/firefox-devtools.vscode-firefox-debug-2.15.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"firefox-devtools","metadata":{"installedTimestamp":1752772775137,"pinned":false,"source":"gallery","id":"c5f4d87f-a524-462c-ac01-923eb19cf3e9","publisherId":"a159f731-e4cf-45ea-8249-dc7f3806c7d5","publisherDisplayName":"firefox-devtools","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":718212},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"usernamehw.errorlens","uuid":"9d8c32ab-354c-4daf-a9bf-20b633734435"},"manifest":{"name":"errorlens","displayName":"Error Lens","description":"Improve highlighting of errors, warnings and other language diagnostics.","version":"3.26.0","publisher":"usernamehw","license":"MIT","engines":{"vscode":"^1.95.0","npm":">=10.0.0"},"extensionKind":["ui","workspace"],"categories":["Other"],"qna":false,"keywords":["highlight","problem","problems","error","warning","inline","message","diagnostic","status bar","gutter"],"icon":"img/icon.png","repository":{"type":"git","url":"https://github.com/usernamehw/vscode-error-lens"},"activationEvents":["onStartupFinished"],"main":"./dist/extension.js","browser":"./dist/extension.js","contributes":{"commands":[{"command":"errorLens.toggle","title":"Toggle (Enable/Disable) Everything","description":"Toggle (Enable/Disable) Everything (toggle global setting `\"errorLens.enabled\"`)","category":"Error Lens"},{"command":"errorLens.toggleError","title":"Toggle Errors","description":"Enable/Disable Errors in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleWarning","title":"Toggle Warnings","description":"Enable/Disable Warnings in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleInfo","title":"Toggle Info","description":"Enable/Disable Info in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleHint","title":"Toggle Hint","description":"Enable/Disable Hint in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleInlineMessage","title":"Toggle Inline Message","description":"Toggle global setting `\"errorLens.messageEnabled\"`.","category":"Error Lens"},{"command":"errorLens.searchForProblem","title":"Search for problem","description":"Open problem in default browser (controlled by `errorLens.searchForProblemQuery` setting).","category":"Error Lens"},{"command":"errorLens.selectProblem","title":"Select Problem","description":"Set editor selection to the problem range (controlled by `errorLens.selectProblemType` setting).","category":"Error Lens"},{"command":"errorlens.toggleWorkspace","title":"Toggle Workspace in Disabled List","description":"Exclude/Include current workspace by fs path.","category":"Error Lens"},{"command":"errorLens.disableLine","title":"Disable line","description":"Add a comment to disable line for linter rule. Comment format is controlled by `\"errorLens.disableLineComments\"` setting.","category":"Error Lens"},{"command":"errorLens.findLinterRuleDefinition","title":"Find Linter Rule Definition","description":"Search in local linter files (like `.eslintrc.json`) for the rule definition. Target files are controlled by \"errorLens.lintFilePaths\" setting.","category":"Error Lens"},{"command":"errorLens.copyProblemMessage","title":"Copy Problem Message","description":"Copy problem message to the clipboard (at the active cursor).","category":"Error Lens"},{"command":"errorLens.excludeProblem","title":"Exclude Problem","description":"Exclude problem (at the active cursor) (write into settings).","category":"Error Lens"},{"command":"errorLens.copyProblemCode","title":"Copy Problem Code","description":"Copy problem code to the clipboard (at the active cursor).","category":"Error Lens"},{"command":"errorLens.updateEverything","title":"Update Everything","description":"Update all decorations. Supports args {\"kind\": \"update\" | \"clear\"}","category":"Error Lens"}],"configuration":{"properties":{"errorLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Controls all decorations and features (except commands)."},"errorLens.respectUpstreamEnabled":{"type":"object","properties":{"enabled":{"type":"boolean","description":"When true - extension will honour VSCode setting `#problems.visibility#` and not show errors if `#problems.visibility#` is false.","default":true},"inlineMessage":{"type":"boolean","default":true},"gutter":{"type":"boolean","default":true},"statusBar":{"type":"boolean","default":false}},"default":{"enabled":true,"inlineMessage":true,"gutter":true,"statusBar":false},"markdownDescription":"When enabled - extension will take into account global VSCode setting `#problems.visibility#`. ([1.85.0 changelog](https://code.visualstudio.com/updates/v1_85#_hide-problem-decorations)).","additionalProperties":false},"errorLens.enabledInMergeConflict":{"type":"boolean","default":true,"markdownDescription":"Controls if decorations are shown if the editor has git merge conflict indicators `<<<<<<<` or `=======` or `>>>>>>>`."},"errorLens.fontFamily":{"type":"string","default":"","markdownDescription":"Font family of inline message. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontfamily). May break `#errorLens.alignMessage#`"},"errorLens.fontWeight":{"type":"string","enum":["100","200","300","400","normal","500","600","700","bold","800","900"],"default":"normal","markdownDescription":"Font weight of inline message. `\"normal\"` is alias for 400, `\"bold\"` is alias for 700). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontweight)"},"errorLens.fontStyleItalic":{"type":"boolean","default":false,"markdownDescription":"When enabled - shows inline message in italic font style. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontstyleitalic)"},"errorLens.fontSize":{"type":"string","default":"","markdownDescription":"Font size of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length)). Use negative value to have it relative to the editor's fontSize (e.g. `-3px`). May break `#errorLens.alignMessage#`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontsize)."},"errorLens.margin":{"type":"string","default":"4ch","markdownDescription":"Distance between the last word on the line and the start of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length)). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmargin)"},"errorLens.alignMessage":{"type":"object","properties":{"start":{"type":"integer","minimum":0,"description":"Starting column where to align decorations."},"end":{"type":"integer","minimum":0,"description":"Ending column where to align decorations."},"minimumMargin":{"type":"integer","description":"Minimal space between line end and decoration. Very similar to the global setting `errorLens.margin`, but can only be a number of characters.","minimum":4},"padding":{"type":"array","items":{"type":"number","default":0,"minimum":0},"minItems":2,"maxItems":2,"default":[0,0],"description":"Very similar to the global setting `errorLens.padding`, but it can only be a number (not any CSS unit like pixels). First number is top+bottom padding; Second number - left+right padding."},"useFixedPosition":{"type":"boolean","default":true,"description":"Use fixed position for decoration that has stuttering/twitching on the active line (e.g. when typing). Will prevent hover over decoration text."}},"default":{"start":0,"end":0,"minimumMargin":4,"padding":[0,0],"useFixedPosition":true},"markdownDescription":"Align inline error message (either by starting position or ending position). Only works for monospace fonts. Set \"start\" and \"end\" to **0** to disable. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensalignmessage)","additionalProperties":false},"errorLens.border":{"type":"array","default":["","","",""],"items":{"type":"string","default":""},"minItems":4,"maxItems":4,"additionalItems":false,"markdownDescription":"Border of the inline message. Examples: `1px solid`, `1px dashed`, `2px dotted`, `1px solid #00000050`... Set to empty string to disable. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensborder)"},"errorLens.padding":{"type":"string","default":"","markdownDescription":"Padding of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\". [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenspadding)","examples":["2px 1ch"]},"errorLens.borderRadius":{"type":"string","default":"0.2em","markdownDescription":"Border radius of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\". [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensborderradius)","examples":["5px","5em 0px","0px 5em 5em 0px"]},"errorLens.enabledDiagnosticLevels":{"type":"array","items":{"type":"string","enum":["error","warning","info","hint"]},"uniqueItems":true,"markdownDescription":"Customize which diagnostic levels(severity) to highlight. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensenableddiagnosticlevels)","default":["error","warning","info"]},"errorLens.messageTemplate":{"type":"string","default":"$message","markdownDescription":"Template used for all inline messages. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagetemplate)"},"errorLens.messageMaxChars":{"type":"integer","default":500,"minimum":0,"markdownDescription":"Cut off inline message if it's longer than this value. (Improves performance when the diagnostic message is long). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagemaxchars)"},"errorLens.severityText":{"type":"array","items":{"type":"string"},"markdownDescription":"Replaces `$severity` variable in `#errorLens.messageTemplate#`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensseveritytext)","default":["⛔","⚠","ℹ","🍏"],"minItems":4,"maxItems":4},"errorLens.messageEnabled":{"type":"boolean","default":true,"markdownDescription":"Controls whether inline message is shown or not (Including background highlight). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessageenabled)"},"errorLens.messageBackgroundMode":{"type":"string","default":"line","enum":["line","message","none"],"enumDescriptions":["The entire line is highlighted.","Inline message is highlighted.","Message is not highlighted (only has foreground colors)."],"markdownDescription":"Controls how inline message is highlighted in the editor (entire line / only message / none). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagebackgroundmode)"},"errorLens.problemRangeDecorationEnabled":{"type":"boolean","default":false,"markdownDescription":"When checked - highlight the entire problem range. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensproblemrangedecorationenabled)"},"errorLens.editorHoverPartsEnabled":{"type":"object","properties":{"messageEnabled":{"type":"boolean","default":false},"sourceCodeEnabled":{"type":"boolean","default":false},"buttonsEnabled":{"type":"boolean","default":false}},"additionalProperties":false,"default":{"messageEnabled":false,"sourceCodeEnabled":false,"buttonsEnabled":false},"markdownDescription":"Controls which parts of the editor hover tooltip to show."},"errorLens.statusBarIconsEnabled":{"type":"boolean","markdownDescription":"When enabled - shows highlighted error/warning icons in status bar. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbariconsenabled)","default":false},"errorLens.statusBarIconsPriority":{"type":"integer","markdownDescription":"Move status bar icons left or right by adjusting the number priority.","default":-9000},"errorLens.statusBarIconsAlignment":{"type":"string","markdownDescription":"Choose on which side the icons status bar is on: left or right.","enum":["left","right"],"default":"left"},"errorLens.statusBarIconsTargetProblems":{"type":"string","enum":["all","activeEditor","visibleEditors"],"enumDescriptions":["Should be the same as native status bar icons - counts all known problems from all files.","Count only problems from the Active Text Editor.","Count only problems from the Visible Text Editors."],"default":"all","markdownDescription":"Which problems to use for counting problems at icons status bar."},"errorLens.statusBarIconsUseBackground":{"type":"boolean","markdownDescription":"When enabled - highlights status bar icons with background, when disabled - with foreground.","default":true},"errorLens.statusBarIconsAtZero":{"type":"string","markdownDescription":"What to do when there are 0 errors/warnings - hide the item or strip its background color.","enum":["hide","removeBackground"],"default":"removeBackground"},"errorLens.statusBarMessageEnabled":{"type":"boolean","markdownDescription":"When enabled - shows message in status bar. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbarmessageenabled)","default":false},"errorLens.statusBarMessagePriority":{"type":"integer","markdownDescription":"Move status bar message left or right by adjusting the number priority.","default":-10000},"errorLens.statusBarMessageAlignment":{"type":"string","markdownDescription":"Choose on which side the message status bar is on: left or right.","enum":["left","right"],"default":"left"},"errorLens.statusBarColorsEnabled":{"type":"boolean","markdownDescription":"When enabled - use message decoration foreground as color of Status Bar text. Uses colors `errorLens.statusBarErrorForeground`, `errorLens.statusBarWarningForeground`, `errorLens.statusBarInfoForeground`, `errorLens.statusBarHintForeground`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbarcolorsenabled)","default":false},"errorLens.statusBarMessageType":{"type":"string","markdownDescription":"Pick what to show in Status Bar: closest message or only message for the active line.","enum":["closestProblem","closestSeverity","activeLine","activeCursor"],"enumDescriptions":["Show closest to the cursor diagnostic.","Show closest to the cursor diagnostic sorted by severity (e.g. error will be shown before warning even if it's farther from the cursor).","Show only diagnostic that is on the same line as the cursor.","Similar to \"activeLine\" but follows the cursor movement inside the line."],"default":"activeLine"},"errorLens.statusBarCommand":{"type":"string","markdownDescription":"Command that executes on click for Status Bar.","enum":["goToProblem","goToLine","copyMessage"],"default":"goToProblem"},"errorLens.statusBarMessageTemplate":{"type":"string","default":"","markdownDescription":"Template for status bar message. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic"},"errorLens.replace":{"type":"array","default":[],"items":{"type":"object","properties":{"matcher":{"type":"string","description":"The RegExp pattern against which to match diagnostic messages"},"message":{"type":"string","description":"The entire replacement for messages matching matcher. Can reference match groups like $0 (entire expression), $1 (first capture group), etc."}},"required":["matcher","message"]},"markdownDescription":"Specify message to transform. E.g. if this is configured to [{ matcher: 'foo (.*)', message: 'just $1' }], the message 'foo bar' would be displayed as 'just bar'. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensreplace)"},"errorLens.exclude":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"❗Deprecated. Use `#errorLens.excludeByMessage#`. Specify messages that should not be highlighted (RegExp). Strings passed to the RegExp constructor: `new RegExp(EXCLUDE_ITEM, 'iu');`","markdownDeprecationMessage":"Deprecated in favor of `#errorLens.excludeByMessage#`. This setting makes all exclude messages to be Regular Expressions which is bad for performance. It could lead to `Extension causes high cpu load` problem. New setting `#errorLens.excludeByMessage#` matches strings by default, but can also use Regular Expressions if needed(usually not)."},"errorLens.excludeByMessage":{"type":"array","default":[],"items":{"oneOf":[{"type":"string","default":""},{"type":"object","properties":{"regex":{"type":"string","default":""},"flags":{"type":"string","default":"iu"}},"additionalProperties":false,"default":{"regex":"","flags":"iu"}}]},"markdownDescription":"Exclude diagnostics by message. Excludes when the diagnostic message contains the exlcuding string(case-insensitive). Can use Regular Expressions (use object instead of a string)."},"errorLens.excludeBySource":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specify `source` or `source(code)` pair to exclude. Examples: \n\n```json\n[\n\t\"eslint\",// exclude all problems from eslint linter\n\t\"eslint(padded-blocks)\",// exclude padded-blocks rule from eslint linter\n\t\"Pylance(reportUndefinedVariable)\",// exlude reportUndefinedVariable rule from Pylance linter\n]\n```"},"errorLens.excludePatterns":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Exclude files by using [glob](https://code.visualstudio.com/docs/editor/glob-patterns) pattern. Example `[\"**/*.{ts,js}\"]`"},"errorLens.excludeWorkspaces":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Exclude workspaces by path."},"errorLens.disableLineComments":{"type":"object","markdownDescription":"Used for `errorLens.disableLine` command that adds a comment disabling linter rule for a line.\nTo force comment on the same line - add `SAME_LINE` to the message: `\"eslint\": \"// eslint-disable-line $code SAME_LINE\"`","patternProperties":{".*":{"type":"string"}},"default":{"eslint":"// eslint-disable-next-line $code","Stylelint":"/* stylelint-disable-next-line $code */"}},"errorLens.lintFilePaths":{"type":"object","default":{"eslint":["**/*.eslintrc.{js,cjs,yaml,yml,json}","**/*package.json"],"Stylelint":["**/*.stylelintrc","**/*.stylelintrc.{cjs,js,json,yaml,yml}","**/*stylelint.config.{cjs,js}","**/*package.json"]},"patternProperties":{".*":{"oneOf":[{"type":"array","items":{"type":"string"}},{"type":"string","enum":["none"]}]}},"markdownDescription":"Specify where to search for linter rule definitions by diagnostic source ([glob](https://code.visualstudio.com/docs/editor/glob-patterns) for local linter files). `node_modules` folder is excluded."},"errorLens.searchForProblemQuery":{"type":"string","default":"https://duckduckgo.com/?q=$message","markdownDescription":"Pick query to open in default browser when searching for problem with `errorLens.searchForProblem` command."},"errorLens.selectProblemType":{"type":"string","default":"closestProblem","enum":["closestProblem","closestSeverity","activeLine"],"enumDescriptions":["Show closest to the cursor diagnostic.","Show closest to the cursor diagnostic (sorted by severity e.g. error will be shown before warning even if it's farther from the cursor).","Show only diagnostic that is on the same line as the cursor."],"markdownDescription":"Which problem to select (closest / active line) when executing `errorLens.selectProblem` command."},"errorLens.light":{"type":"object","markdownDescription":"Specify color of decorations for when the light color theme is active.","properties":{"errorGutterIconPath":{"type":"string","description":"Absolute path to error gutter icon for light themes.","default":""},"warningGutterIconPath":{"type":"string","description":"Absolute path to warning gutter icon for light themes.","default":""},"infoGutterIconPath":{"type":"string","description":"Absolute path to info gutter icon for light themes.","default":""},"hintGutterIconPath":{"type":"string","description":"Absolute path to hint gutter icon for light themes.","default":""},"errorGutterIconColor":{"type":"string","default":"","markdownDescription":"Error color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"warningGutterIconColor":{"type":"string","default":"","markdownDescription":"Warning color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"infoGutterIconColor":{"type":"string","default":"","markdownDescription":"Info color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"hintGutterIconColor":{"type":"string","default":"","markdownDescription":"Hint color of simple gutter icons (shapes and letters) for light themes.","format":"color"}}},"errorLens.delay":{"type":"integer","markdownDescription":"Delay (ms) before showing problem decorations (**0** to disable). Minimum delay of **500** is enforced by the extension. `#errorLens.delayMode#` controls how to handle the delay.","default":0},"errorLens.delayMode":{"type":"string","default":"new","enum":["new","old","debounce"],"markdownEnumDescriptions":["New problems appear according to `errorLens.delay` setting. Fixed problems disappear faster.","Decorations for problems are debounced according to `errorLens.delay` setting.","Decorations disappear when document changes (typing)."],"markdownDescription":"Pick which version of the delay to use."},"errorLens.onSave":{"type":"boolean","markdownDescription":"When enabled - updates decorations only on document save (manual).","default":false},"errorLens.onSaveTimeout":{"type":"integer","markdownDescription":"Time period (ms) that used for showing decorations after the document save (manual, not auto save).","default":500,"minimum":50},"errorLens.onSaveUpdateOnActiveEditorChange":{"type":"boolean","markdownDescription":"When `#errorLens.onSave#` enabled - extension still draws decorations when active/visible editors change.","default":true},"errorLens.enableOnDiffView":{"type":"boolean","markdownDescription":"Enable decorations when viewing a diff view in the editor (e.g. Git diff). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensenableondiffview)","default":false},"errorLens.followCursor":{"type":"string","enum":["allLines","allLinesExceptActive","activeLine","closestProblem"],"enumDescriptions":["Highlight all problems in file","Highlight all problems in file (except the line at the cursor)","Highlight only the problem at the cursor","Highlight only closest to the cursor problem"],"markdownDescription":"Highlight only portion of the problems. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfollowcursor)","default":"allLines"},"errorLens.followCursorMore":{"type":"number","markdownDescription":"Augments `#errorLens.followCursor#`.\nAdds number of lines to top and bottom when `#errorLens.followCursor#` is set to `activeLine`.\n Adds number of closest problems when `#errorLens.followCursor#` is `closestProblem` [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfollowcursormore)","default":0},"errorLens.gutterIconsEnabled":{"type":"boolean","markdownDescription":"When enabled - shows gutter icons (In place of the debug breakpoint icon). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsenabled)","default":false},"errorLens.gutterIconsFollowCursorOverride":{"type":"boolean","markdownDescription":"When enabled and `#errorLens.followCursor#` setting is not `allLines`, then gutter icons would be rendered for all problems. But line decorations (background, message) only for active line. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsfollowcursoroverride)","default":true},"errorLens.gutterIconSize":{"type":"string","markdownDescription":"Change gutter icon size. Examples: `auto`, `contain`, `cover`, `50%`, `150%` ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/background-size)). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsize)","examples":["auto","contain","cover","50%","150%"],"default":"100%"},"errorLens.gutterIconSet":{"type":"string","markdownDescription":"Change gutter icon style. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonset)","enum":["default","defaultOutline","borderless","circle","square","squareRounded","letter","emoji"],"enumDescriptions":["Similar to vscode icons in Problems Panel (old).","Similar to vscode icons in Problems Panel (new).","Similar to vscode icons in Problems Panel, only without a border.","Simple filled circle.","Simple filled square.","Simple filled square with rounded corners.","Simple one letter icon (E,W,I,H).","Emoji. (`errorLens.gutterEmoji` to control which emoji to show.)"],"default":"default"},"errorLens.gutterEmoji":{"type":"object","properties":{"error":{"type":"string","minLength":0,"default":"💀"},"warning":{"type":"string","minLength":0,"default":"😞"},"info":{"type":"string","minLength":0,"default":"🆗"},"hint":{"type":"string","minLength":0,"default":"🍏"}},"default":{"error":"💀","warning":"😞","info":"🆗","hint":"🍏"},"additionalProperties":false,"markdownDescription":"Pick emoji symbol for gutter icon when `#errorLens.gutterIconSet#` is `emoji`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensgutteremoji)"},"errorLens.errorGutterIconPath":{"type":"string","markdownDescription":"Absolute path to error gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.warningGutterIconPath":{"type":"string","markdownDescription":"Absolute path to warning gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.infoGutterIconPath":{"type":"string","markdownDescription":"Absolute path to info gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.hintGutterIconPath":{"type":"string","markdownDescription":"Absolute path to hint gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.errorGutterIconColor":{"type":"string","default":"#e45454","markdownDescription":"Error color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.warningGutterIconColor":{"type":"string","default":"#ff942f","markdownDescription":"Warning color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.infoGutterIconColor":{"type":"string","default":"#00b7e4","markdownDescription":"Info color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.hintGutterIconColor":{"type":"string","default":"#2faf64","markdownDescription":"Hint color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.removeLinebreaks":{"type":"boolean","default":true,"markdownDescription":"When enabled - replaces line breaks in inline diagnostic message with whitespaces."},"errorLens.replaceLinebreaksSymbol":{"type":"string","default":"⏎","markdownDescription":"Symbol to replace linebreaks. Requires enabling `#errorLens.removeLinebreaks#`."},"errorLens.scrollbarHackEnabled":{"type":"boolean","default":false,"markdownDescription":"When enabled - prevents showing horizontal scrollbar in editor (caused by inline decorations). Also prevents mouse hover at inline message. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensscrollbarhackenabled)"},"errorLens.decorations":{"type":"object","markdownDescription":"Advanced decoration tweaking. Possible keys: `errorRange`, `warningRange`, `infoRange`, `hintRange`, `errorMessage, `warningMessage`, `infoMessage`, `hintMessage`.\n\n Possible properties: `backgroundColor`, `color`, `outline`, `border`, ... [api](https://code.visualstudio.com/api/references/vscode-api#ThemableDecorationAttachmentRenderOptions). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensdecorations)","default":{"errorRange":{},"warningRange":{},"infoRange":{},"hintRange":{},"errorMessage":{},"warningMessage":{},"infoMessage":{},"hintMessage":{}},"patternProperties":{"^(errorRange|warningRange|infoRange|hintRange|errorMessage|warningMessage|infoMessage|hintMessage)$":{"type":"object","markdownDescription":"☑️ Key exists.","properties":{}}},"additionalProperties":false},"errorLens.ignoreUntitled":{"type":"boolean","default":false,"markdownDescription":"Controls whether to run on untitled (unsaved) files."},"errorLens.ignoreDirty":{"type":"boolean","default":false,"markdownDescription":"Controls whether to run on dirty (modified unsaved) files."},"errorLens.codeLensEnabled":{"type":"boolean","default":false,"markdownDescription":"Controls whether to show the Error Lens as a Code Lens above the code. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenscodelensenabled)"},"errorLens.codeLensLength":{"type":"object","properties":{"min":{"type":"integer","minimum":0,"default":0},"max":{"type":"integer","minimum":10,"default":200}},"additionalProperties":false,"default":{"min":0,"max":200},"markdownDescription":"Enforce minimum and maximum length of code lens messages."},"errorLens.codeLensTemplate":{"type":"string","default":"$severity $message","markdownDescription":"Template used for all messages appearing in the `#errorLens.codeLensEnabled#`. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic"},"errorLens.codeLensOnClick":{"type":"string","enum":["none","showProblemsView","showQuickFix","searchForProblem"],"enumDescriptions":["Does nothing.","Shows problems view.","Shows quick fix menu.","Search for the problem."],"default":"showQuickFix","markdownDescription":"Controls what do on clicking the `#errorLens.codeLensEnabled#`."},"errorLens.experimental":{"type":"object","properties":{},"tags":["experimental"],"additionalProperties":false,"markdownDescription":"Experimental / temporary settings.","default":{}}}},"colors":[{"id":"errorLens.errorBackground","defaults":{"dark":"#e454541b","light":"#e4545420","highContrast":"#e454541b"},"description":"Background color of the entire line containing error."},{"id":"errorLens.errorMessageBackground","defaults":{"dark":"#e4545419","light":"#e4545419","highContrast":"#e4545419"},"description":"Background color of the error message."},{"id":"errorLens.errorRangeBackground","defaults":{"dark":"#e4545419","light":"#e4545419","highContrast":"#e4545419"},"description":"Background color of the error range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.errorBackgroundLight","defaults":{"dark":"#e4545420","light":"#e4545420","highContrast":"#e4545420"},"description":"Background color of the entire line containing error (Only in light themes)."},{"id":"errorLens.errorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Text color used to highlight lines containing errors."},{"id":"errorLens.errorForegroundLight","defaults":{"dark":"#e45454","light":"#e45454","highContrast":"#e45454"},"description":"Text color used to highlight lines containing errors (Only in light themes)."},{"id":"errorLens.warningBackground","defaults":{"dark":"#ff942f1b","light":"#ff942f20","highContrast":"#ff942f1b"},"description":"Background color used to highlight lines containing warnings."},{"id":"errorLens.warningMessageBackground","defaults":{"dark":"#ff942f19","light":"#ff942f19","highContrast":"#ff942f19"},"description":"Background color of the warning message."},{"id":"errorLens.warningRangeBackground","defaults":{"dark":"#ff942f19","light":"#ff942f19","highContrast":"#ff942f19"},"description":"Background color of the warning range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.warningBackgroundLight","defaults":{"dark":"#ff942f20","light":"#ff942f20","highContrast":"#ff942f20"},"description":"Background color used to highlight lines containing warnings (Only in light themes)."},{"id":"errorLens.warningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Text color used to highlight lines containing warnings."},{"id":"errorLens.warningForegroundLight","defaults":{"dark":"#ff942f","light":"#ff942f","highContrast":"#ff942f"},"description":"Text color used to highlight lines containing warnings (Only in light themes)."},{"id":"errorLens.infoBackground","defaults":{"dark":"#00b7e420","light":"#00b7e420","highContrast":"#00b7e420"},"description":"Background color used to highlight lines containing info."},{"id":"errorLens.infoMessageBackground","defaults":{"dark":"#00b7e419","light":"#00b7e419","highContrast":"#00b7e419"},"description":"Background color of the info message."},{"id":"errorLens.infoRangeBackground","defaults":{"dark":"#00b7e419","light":"#00b7e419","highContrast":"#00b7e419"},"description":"Background color of the info range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.infoBackgroundLight","defaults":{"dark":"#00b7e420","light":"#00b7e420","highContrast":"#00b7e420"},"description":"Background color used to highlight lines containing info (Only in light themes)."},{"id":"errorLens.infoForeground","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Text color used to highlight lines containing info."},{"id":"errorLens.infoForegroundLight","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Text color used to highlight lines containing info (Only in light themes)."},{"id":"errorLens.hintBackground","defaults":{"dark":"#17a2a220","light":"#17a2a220","highContrast":"#17a2a220"},"description":"Background color used to highlight lines containing hints."},{"id":"errorLens.hintMessageBackground","defaults":{"dark":"#17a2a219","light":"#17a2a219","highContrast":"#17a2a219"},"description":"Background color of the hint message."},{"id":"errorLens.hintRangeBackground","defaults":{"dark":"#17a2a219","light":"#17a2a219","highContrast":"#17a2a219"},"description":"Background color of the hint range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.hintBackgroundLight","defaults":{"dark":"#17a2a220","light":"#17a2a220","highContrast":"#17a2a220"},"description":"Background color used to highlight lines containing hints (Only in light themes)."},{"id":"errorLens.hintForeground","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Text color used to highlight lines containing hints."},{"id":"errorLens.hintForegroundLight","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Text color used to highlight lines containing hints (Only in light themes)."},{"id":"errorLens.statusBarIconErrorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Status bar icon item error color. Foreground is used when the `errorLens.statusBarIconsUseBackground` setting is disabled."},{"id":"errorLens.statusBarIconWarningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Status bar icon item error color. Foreground is used when the `errorLens.statusBarIconsUseBackground` setting is disabled."},{"id":"errorLens.statusBarErrorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Status bar item error color."},{"id":"errorLens.statusBarWarningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Status bar item warning color."},{"id":"errorLens.statusBarInfoForeground","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Status bar item info color."},{"id":"errorLens.statusBarHintForeground","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Status bar item hint color."}]},"scripts":{"vscode:prepublish":"webpack --mode production --color --devtool hidden-source-map","watch":"webpack --mode development --watch --stats minimal"},"devDependencies":{"@soda/friendly-errors-webpack-plugin":"^1.8.1","@types/lodash":"^4.17.16","@types/node":"^18.19.80","@types/vscode":"^1.95.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","eslint":"^8.57.1","ts-loader":"^9.5.2","typescript":"^5.8.2","webpack":"^5.98.0","webpack-cli":"^6.0.1"},"dependencies":{"lodash":"^4.17.21"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/usernamehw.errorlens-3.26.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"usernamehw","metadata":{"installedTimestamp":1752772775135,"pinned":false,"source":"gallery","id":"9d8c32ab-354c-4daf-a9bf-20b633734435","publisherId":"151820df-5dc5-4c97-8751-eb84643203fa","publisherDisplayName":"usernamehw","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":184116},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"xabikos.javascriptsnippets","uuid":"a2cec723-5349-460d-9de9-0fd1f8d3456f"},"manifest":{"name":"JavaScriptSnippets","description":"Code snippets for JavaScript in ES6 syntax","version":"1.8.0","displayName":"JavaScript (ES6) code snippets","publisher":"xabikos","icon":"images/javascript.png","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/xabikos/vscode-javascript"},"engines":{"vscode":"0.10.x"},"categories":["Snippets"],"contributes":{"snippets":[{"language":"javascript","path":"./snippets/snippets.json"},{"language":"typescript","path":"./snippets/snippets.json"},{"language":"javascriptreact","path":"./snippets/snippets.json"},{"language":"typescriptreact","path":"./snippets/snippets.json"},{"language":"html","path":"./snippets/snippets.json"},{"language":"vue","path":"./snippets/snippets.json"}]}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/xabikos.javascriptsnippets-1.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"xabikos","metadata":{"installedTimestamp":1752772775136,"pinned":false,"source":"gallery","id":"a2cec723-5349-460d-9de9-0fd1f8d3456f","publisherId":"8961c3fe-3ec6-429d-886a-50b5af362a88","publisherDisplayName":"xabikos","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":22283},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"tombonnike.vscode-status-bar-format-toggle","uuid":"28fcf0b8-26a5-4e99-9b8d-02e990366c6f"},"manifest":{"name":"vscode-status-bar-format-toggle","displayName":"Formatting Toggle","version":"3.2.0","description":"A VS Code extension that allows you to toggle formatting settings ON and OFF with a simple click.","license":"MIT","repository":{"type":"git","url":"https://github.com/Tom-Bonnike/vscode-formatting-toggle.git"},"publisher":"tombonnike","author":"Tom Bonnike (bonniketom@gmail.com)","icon":"icon.png","bugs":{"url":"https://github.com/Tom-Bonnike/vscode-formatting-toggle/issues"},"homepage":"https://marketplace.visualstudio.com/items?itemName=tombonnike.vscode-status-bar-format-toggle","engines":{"vscode":"^1.82.0"},"keywords":["disable","toggle","format","formatting","prettier"],"categories":["Other","Formatters"],"activationEvents":["*"],"main":"./out/extension","contributes":{"commands":[{"command":"formattingToggle.toggleFormat","title":"Toggle formatting"}],"configuration":{"type":"object","title":"Formatting Toggle’s configuration","properties":{"formattingToggle.statusBarText":{"type":"object","scope":"resource","default":{"formattingEnabled":"Formatting: $(check)","formattingDisabled":"Formatting: $(x)"},"description":"The status bar text displayed when the formatting is enabled or disabled. It can include VS Code codicons."},"formattingToggle.affects":{"scope":"resource","type":"array","default":["editor.formatOnPaste","editor.formatOnSave","editor.formatOnType"],"description":"The formatting settings the extension should toggle. Affects all formatting events by default."}}}},"scripts":{"start":"tsc -watch -p ./","vscode:prepublish":"tsc -p ./"},"devDependencies":{"@types/node":"^20.8.2","@types/vscode":"^1.82.0","typescript":"^5.2.2"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/tombonnike.vscode-status-bar-format-toggle-3.2.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"tombonnike","metadata":{"installedTimestamp":1752772775134,"pinned":false,"source":"gallery","id":"28fcf0b8-26a5-4e99-9b8d-02e990366c6f","publisherId":"89227cef-64e4-437d-bf66-0e4b431a4995","publisherDisplayName":"tombonnike","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":29591},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"yzhang.markdown-all-in-one","uuid":"98790d67-10fa-497c-9113-f6c7489207b2"},"manifest":{"name":"markdown-all-in-one","displayName":"Markdown All in One","description":"All you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more)","icon":"images/Markdown-mark.png","version":"3.6.2","publisher":"yzhang","engines":{"vscode":"^1.77.0"},"categories":["Programming Languages","Formatters","Other"],"keywords":["markdown"],"bugs":{"url":"https://github.com/yzhang-gh/vscode-markdown/issues"},"repository":{"type":"git","url":"https://github.com/yzhang-gh/vscode-markdown"},"license":"MIT","activationEvents":["onLanguage:markdown","onLanguage:rmd","onLanguage:quarto","workspaceContains:README.md"],"main":"./dist/node/main.js","contributes":{"colors":[{"id":"markdown.extension.editor.codeSpan.background","description":"Background color of code spans in the Markdown editor.","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"markdown.extension.editor.codeSpan.border","description":"Border color of code spans in the Markdown editor.","defaults":{"dark":"editor.selectionBackground","light":"editor.selectionBackground","highContrast":"editor.selectionBackground"}},{"id":"markdown.extension.editor.formattingMark.foreground","description":"Color of formatting marks (paragraphs, hard line breaks, links, etc.) in the Markdown editor.","defaults":{"dark":"editorWhitespace.foreground","light":"editorWhitespace.foreground","highContrast":"diffEditor.insertedTextBorder"}},{"id":"markdown.extension.editor.trailingSpace.background","description":"Background color of trailing space (U+0020) characters in the Markdown editor.","defaults":{"dark":"diffEditor.diagonalFill","light":"diffEditor.diagonalFill","highContrast":"editorWhitespace.foreground"}}],"commands":[{"command":"markdown.extension.toc.create","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Create Table of Contents","category":"Markdown All in One"},{"command":"markdown.extension.toc.update","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Update Table of Contents","category":"Markdown All in One"},{"command":"markdown.extension.toc.addSecNumbers","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Add/Update section numbers","category":"Markdown All in One"},{"command":"markdown.extension.toc.removeSecNumbers","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Remove section numbers","category":"Markdown All in One"},{"command":"markdown.extension.printToHtml","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Print current document to HTML","category":"Markdown All in One"},{"command":"markdown.extension.printToHtmlBatch","enablement":"workspaceFolderCount >= 1","title":"Print documents to HTML (select a source folder)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleCodeSpan","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle code span","icon":"$(code)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleMath","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle math environment","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleMathReverse","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle math environment (in reverse order)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleList","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle list","icon":"$(list-unordered)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleCodeBlock","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle code block","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleBold","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle Bold","icon":"$(bold)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleItalic","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle Italic","icon":"$(italic)","category":"Markdown All in One"},{"command":"markdown.extension.editing.toggleStrikethrough","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle Strikethrough","category":"Markdown All in One"},{"command":"markdown.extension.checkTaskList","enablement":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","title":"Toggle TaskList","icon":"$(tasklist)","category":"Markdown All in One"}],"menus":{"editor/context":[{"command":"markdown.extension.printToHtml","when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/","group":"markdown.print@1"},{"command":"markdown.extension.printToHtmlBatch","when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && workspaceFolderCount >= 1","group":"markdown.print@2"}],"editor/title":[{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.editing.toggleBold","group":"navigation@1"},{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.editing.toggleItalic","group":"navigation@2"},{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.editing.toggleCodeSpan","group":"navigation@3"},{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.editing.toggleList","group":"navigation@4"},{"when":"editorLangId =~ /^markdown$|^rmd$|^quarto$/ && config.markdown.extension.showActionButtons","command":"markdown.extension.checkTaskList","group":"navigation@5"}]},"keybindings":[{"command":"markdown.extension.editing.toggleBold","key":"ctrl+b","mac":"cmd+b","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.editing.toggleItalic","key":"ctrl+i","mac":"cmd+i","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.editing.toggleStrikethrough","key":"alt+s","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !isMac"},{"command":"markdown.extension.editing.toggleHeadingUp","key":"ctrl+shift+]","mac":"ctrl+shift+]","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.editing.toggleHeadingDown","key":"ctrl+shift+[","mac":"ctrl+shift+[","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.editing.toggleMath","key":"ctrl+m","mac":"cmd+m","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"},{"command":"markdown.extension.onEnterKey","key":"enter","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && (!suggestWidgetVisible || config.editor.acceptSuggestionOnEnter == 'off') && !editorHasMultipleSelections && vim.mode != 'Normal' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && vim.mode != 'SearchInProgressMode' && vim.mode != 'CommandlineInProgress' && vim.mode != 'Replace' && vim.mode != 'EasyMotionMode' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'SurroundInputMode' && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onCtrlEnterKey","key":"ctrl+enter","mac":"cmd+enter","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && (!suggestWidgetVisible || config.editor.acceptSuggestionOnEnter == 'off') && !editorHasMultipleSelections && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onShiftEnterKey","key":"shift+enter","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && (!suggestWidgetVisible || config.editor.acceptSuggestionOnEnter == 'off') && !editorHasMultipleSelections && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onTabKey","key":"tab","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible && !inlineSuggestionVisible && !editorHasMultipleSelections && !editorTabMovesFocus && !inSnippetMode && !hasSnippetCompletions && !hasOtherSuggestions && markdown.extension.editor.cursor.inList && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onShiftTabKey","key":"shift+tab","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible && !editorHasMultipleSelections && !editorTabMovesFocus && !inSnippetMode && !hasSnippetCompletions && !hasOtherSuggestions && markdown.extension.editor.cursor.inList && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onBackspaceKey","key":"backspace","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible && !editorHasMultipleSelections && vim.mode != 'Normal' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && vim.mode != 'SearchInProgressMode' && vim.mode != 'CommandlineInProgress' && vim.mode != 'Replace' && vim.mode != 'EasyMotionMode' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'SurroundInputMode' && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv"},{"command":"markdown.extension.onMoveLineUp","key":"alt+up","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onMoveLineDown","key":"alt+down","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onCopyLineUp","win":"shift+alt+up","mac":"shift+alt+up","linux":"ctrl+shift+alt+up","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onCopyLineDown","win":"shift+alt+down","mac":"shift+alt+down","linux":"ctrl+shift+alt+down","when":"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onIndentLines","key":"ctrl+]","mac":"cmd+]","when":"editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.onOutdentLines","key":"ctrl+[","mac":"cmd+[","when":"editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !suggestWidgetVisible"},{"command":"markdown.extension.checkTaskList","key":"alt+c","when":"editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && !isMac"},{"command":"markdown.extension.closePreview","key":"ctrl+shift+v","mac":"cmd+shift+v","when":"activeWebviewPanelId == 'markdown.preview'"},{"command":"markdown.extension.closePreview","key":"ctrl+k v","mac":"cmd+k v","when":"activeWebviewPanelId == 'markdown.preview'"},{"command":"markdown.extension.editing.paste","key":"ctrl+v","mac":"cmd+v","when":"editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/ && editorHasSelection"}],"configuration":{"type":"object","title":"Markdown All in One","properties":{"markdown.extension.completion.enabled":{"type":"boolean","default":false,"description":"Whether to enable auto-completion.","scope":"resource"},"markdown.extension.completion.respectVscodeSearchExclude":{"type":"boolean","default":true,"markdownDescription":"Whether to exclude files from auto-completion using VS Code's `#search.exclude#` setting. (`node_modules`, `bower_components` and `*.code-search` are **always excluded**, not affected by this option.)","scope":"resource"},"markdown.extension.completion.root":{"type":"string","default":"","description":"The root folder for path auto-completion.","scope":"resource"},"markdown.extension.italic.indicator":{"type":"string","default":"*","markdownDescription":"Use `*` or `_` to wrap italic text.","enum":["*","_"]},"markdown.extension.bold.indicator":{"type":"string","default":"**","markdownDescription":"Use `**` or `__` to wrap bold text.","enum":["**","__"]},"markdown.extension.katex.macros":{"type":"object","default":{},"description":"User-defined KaTeX macros."},"markdown.extension.list.indentationSize":{"type":"string","enum":["adaptive","inherit"],"markdownEnumDescriptions":["Adaptive indentation size according to the context, trying to **left align the sublist with its parent's content**. For example:\n\n```markdown\n- Parent\n  - Sublist\n\n1. Parent\n   1. Sublist\n\n10. Parent with longer marker\n    1. Sublist\n```","Use the configured tab size of the current document (see the status bar). For example (with `tabSize: 4`):\n\n```markdown\n- Parent\n    - Sublist\n\n1. Parent\n    1. Sublist\n\n10. Parent with longer marker\n    1. Sublist\n```"],"default":"adaptive","markdownDescription":"List indentation scheme. (Also affects TOC generation.)\n\nWhether to use different indentation sizes on different list contexts or stick to VS Code's tab size.","scope":"resource"},"markdown.extension.list.toggle.candidate-markers":{"type":"array","default":["-","*","+","1.","1)"],"items":{"enum":["-","*","+","1.","1)"]},"minItems":1,"maxItems":5,"uniqueItems":true,"description":"List candidate markers. It will cycle through those markers"},"markdown.extension.math.enabled":{"type":"boolean","default":true,"description":"Enable basic math support (Powered by KaTeX)."},"markdown.extension.orderedList.autoRenumber":{"type":"boolean","default":true,"description":"Auto fix ordered list markers."},"markdown.extension.orderedList.marker":{"type":"string","default":"ordered","description":"Ordered list marker.","enum":["one","ordered"],"markdownEnumDescriptions":["Always use `1.` as ordered list marker.","Use increasing numbers as ordered list marker."]},"markdown.extension.preview.autoShowPreviewToSide":{"type":"boolean","default":false,"description":"Auto show preview to side."},"markdown.extension.print.absoluteImgPath":{"type":"boolean","default":true,"description":"Convert image path to absolute path.","scope":"resource"},"markdown.extension.print.imgToBase64":{"type":"boolean","default":false,"description":"Convert images to base64 when printing to HTML.","scope":"resource"},"markdown.extension.print.includeVscodeStylesheets":{"type":"boolean","default":true,"description":"Include VS Code's basic Markdown styles so that the exported HTML looks similar as inside VS Code."},"markdown.extension.print.onFileSave":{"type":"boolean","default":false,"description":"Print current document to HTML when file is saved.","scope":"resource"},"markdown.extension.print.pureHtml":{"type":"boolean","default":false,"description":"Print current document to pure HTML (without any stylesheets).","scope":"resource"},"markdown.extension.print.theme":{"type":"string","default":"light","enum":["light","dark"],"description":"Theme of the exported HTML. Only affects code blocks.","scope":"resource"},"markdown.extension.print.validateUrls":{"type":"boolean","default":true,"description":"Enable/disable URL validation when printing."},"markdown.extension.showActionButtons":{"type":"boolean","default":false,"markdownDeprecationMessage":"Show buttons (e.g. toggle bold, italic) on the editor toolbar."},"markdown.extension.syntax.decorations":{"type":"boolean","default":null,"markdownDeprecationMessage":"(**Deprecated**) Use `#markdown.extension.theming.decoration.renderCodeSpan#` instead. See <https://github.com/yzhang-gh/vscode-markdown/issues/888> for details."},"markdown.extension.syntax.decorationFileSizeLimit":{"type":"number","default":50000,"description":"If a file is larger than this size (in byte/B), we won't attempt to render syntax decorations."},"markdown.extension.syntax.plainTheme":{"type":"boolean","default":false,"markdownDescription":"(**Experimental**) Report issue at <https://github.com/yzhang-gh/vscode-markdown/issues/185>."},"markdown.extension.tableFormatter.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable [GitHub Flavored Markdown](https://github.github.com/gfm/) table formatter."},"markdown.extension.tableFormatter.normalizeIndentation":{"type":"boolean","default":false,"markdownDescription":"Normalize table indentation to closest multiple of configured editor tab size."},"markdown.extension.tableFormatter.delimiterRowNoPadding":{"type":"boolean","default":false,"markdownDescription":"Don't add padding to the delimiter row."},"markdown.extension.theming.decoration.renderCodeSpan":{"type":"boolean","default":true,"markdownDescription":"Apply a border around a [code span](https://spec.commonmark.org/0.29/#code-spans).","scope":"application"},"markdown.extension.theming.decoration.renderHardLineBreak":{"type":"boolean","default":false,"markdownDescription":"(**Experimental**)","scope":"application"},"markdown.extension.theming.decoration.renderLink":{"type":"boolean","default":false,"markdownDescription":"(**Experimental**)","scope":"application"},"markdown.extension.theming.decoration.renderParagraph":{"type":"boolean","default":false,"markdownDescription":"(**Experimental**)","scope":"application"},"markdown.extension.theming.decoration.renderStrikethrough":{"type":"boolean","default":true,"markdownDescription":"Show a line through the middle of a [strikethrough](https://github.github.com/gfm/#strikethrough-extension-).","scope":"application"},"markdown.extension.theming.decoration.renderTrailingSpace":{"type":"boolean","default":false,"markdownDescription":"Shade the background of trailing space (U+0020) characters on a [line](https://spec.commonmark.org/0.29/#line).","scope":"application"},"markdown.extension.toc.levels":{"type":"string","default":"1..6","markdownDescription":"Range of levels for table of contents. Use `x..y` for level `x` to `y`.","pattern":"^[1-6]\\.\\.[1-6]$"},"markdown.extension.toc.omittedFromToc":{"type":"object","default":{},"description":"Lists of headings to omit by project file.\nExample:\n{ \"README.md\": [\"# Introduction\"] }"},"markdown.extension.toc.orderedList":{"type":"boolean","default":false,"description":"Use ordered list, that is:\n1. ...\n2. ..."},"markdown.extension.toc.plaintext":{"type":"boolean","default":false,"description":"Just plain text TOC, no links."},"markdown.extension.toc.slugifyMode":{"type":"string","default":"github","markdownDescription":"The method to generate heading ID. This affects **links to headings** in **TOC**, **code completion**, and **printing**.","enum":["github","azureDevops","bitbucket-cloud","gitea","gitlab","vscode"],"enumDescriptions":["GitHub","Azure DevOps","Bitbucket Cloud","Gitea","GitLab","Visual Studio Code"]},"markdown.extension.toc.unorderedList.marker":{"type":"string","default":"-","markdownDescription":"Use `-`, `*`, or `+` in the table of contents (for **unordered** list).","enum":["-","*","+"]},"markdown.extension.toc.updateOnSave":{"type":"boolean","default":true,"description":"Auto update TOC on save."},"markdown.extension.extraLangIds":{"type":"array","default":[],"items":{"enum":["rmd","quarto"]},"description":"List of extra supported languages (e.g., rmd, quarto), default []."}}},"markdown.markdownItPlugins":true,"markdown.previewStyles":["./media/checkbox.css","./node_modules/katex/dist/katex.min.css","./node_modules/markdown-it-github-alerts/styles/github-colors-light.css","./node_modules/markdown-it-github-alerts/styles/github-colors-dark-media.css","./node_modules/markdown-it-github-alerts/styles/github-base.css"],"grammars":[{"scopeName":"markdown.math_display","path":"./syntaxes/math_display.markdown.tmLanguage.json","injectTo":["text.html.markdown"]},{"scopeName":"markdown.math_inline","path":"./syntaxes/math_inline.markdown.tmLanguage.json","injectTo":["text.html.markdown"]},{"scopeName":"text.katex","path":"./syntaxes/katex.tmLanguage.json"}]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, some features may not work well."}},"scripts":{"vscode:prepublish":"npm run build","build":"node ./build/build.js","dev-build":"webpack --mode development","dev-compile":"tsc --build --watch --verbose","pretest":"tsc --build","test":"node ./out/test/runTest.js"},"dependencies":{"@neilsustc/markdown-it-katex":"^1.0.0","entities":"^3.0.1","grapheme-splitter":"^1.0.4","highlight.js":"^11.5.1","image-size":"^0.9.3","katex":"^0.16.4","markdown-it":"^13.0.2","markdown-it-github-alerts":"^0.1.2","markdown-it-task-lists":"^2.1.1","string-similarity":"^4.0.4"},"devDependencies":{"@types/glob":"^7.2.0","@types/katex":"^0.14.0","@types/markdown-it":"^13.0.7","@types/mocha":"^9.1.0","@types/node":"~14.18.13","@types/string-similarity":"^4.0.0","@types/vscode":"~1.63.2","@vscode/test-electron":"^1.6.2","glob":"^7.2.0","mocha":"^9.2.2","ts-loader":"^9.2.8","typescript":"~4.5.5","webpack":"~5.65.0","webpack-cli":"^4.9.2"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/yzhang.markdown-all-in-one-3.6.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"yzhang","metadata":{"installedTimestamp":1752772775133,"pinned":false,"source":"gallery","id":"98790d67-10fa-497c-9113-f6c7489207b2","publisherId":"36c8b41c-6ef6-4bf5-a5b7-65bef29b606f","publisherDisplayName":"yzhang","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":3543493},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"christian-kohler.path-intellisense","uuid":"a41c1549-4053-44d4-bf30-60fc809b4a86"},"manifest":{"name":"path-intellisense","private":true,"displayName":"Path Intellisense","description":"Visual Studio Code plugin that autocompletes filenames","version":"2.8.0","publisher":"christian-kohler","engines":{"vscode":"^1.43.0"},"homepage":"https://github.com/ChristianKohler/PathIntellisense","repository":{"type":"git","url":"https://github.com/ChristianKohler/PathIntellisense.git"},"categories":["Other"],"activationEvents":["*"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":{"supported":true}},"contributes":{"configuration":{"type":"object","title":"path-intellisense","properties":{"path-intellisense.extensionOnImport":{"type":"boolean","default":false,"description":"Adds the file extension to a import statements"},"path-intellisense.mappings":{"type":"object","default":{},"description":"Mappings for paths.  The values should be interpreted as absolute paths (and can use '${workspaceFolder}')"},"path-intellisense.showHiddenFiles":{"type":"boolean","default":false,"description":"Show hidden files"},"path-intellisense.autoSlashAfterDirectory":{"type":"boolean","default":false,"description":"Automatically adds slash after directory"},"path-intellisense.absolutePathToWorkspace":{"type":"boolean","default":true,"description":"Sets an absolute path to the current workspace"},"path-intellisense.absolutePathTo":{"type":"string","description":"If defined, unmapped absolute path imports are based on this location.  Takes priority over 'absolutePathToWorkspace' if both are defined"},"path-intellisense.showOnAbsoluteSlash":{"type":"boolean","default":true,"description":"Shows suggestions when the import starts with a forward slash ('/')"},"path-intellisense.ignoreTsConfigBaseUrl":{"type":"boolean","default":false,"description":"Ignores tsconfig file for mappings"},"path-intellisense.autoTriggerNextSuggestion":{"type":"boolean","default":false,"description":"Automatically triggers next suggestion after previous suggestion"}}}},"main":"./out/extension.js","browser":"./dist/web/extension.js","icon":"icon/path-intellisense.png","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","lint":"eslint src --ext ts","watch":"tsc -watch -p ./","pretest":"npm run compile && npm run lint","test":"node ./out/test/runTest.js","test-headless":"xvfb-run -a npm test","package":"vsce package","deploy":"vsce publish","prepack":"npm run package && npm run package-web","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"devDependencies":{"@semantic-release/changelog":"^5.0.1","@semantic-release/git":"^9.0.0","@semantic-release/npm":"^7.0.5","@types/benchmark":"^1.0.31","@types/glob":"^7.1.1","@types/mocha":"^7.0.1","@types/node":"^12.11.7","@types/vscode":"^1.43.0","@typescript-eslint/eslint-plugin":"^2.18.0","@typescript-eslint/parser":"^2.18.0","eslint":"^6.8.0","glob":"^7.1.6","mocha":"^7.0.1","path-browserify":"^1.0.1","process":"^0.11.10","ts-loader":"^9.2.5","typescript":"^3.9.10","vsce":"^1.76.0","vscode-test":"^1.3.0","webpack":"^5.51.1","webpack-cli":"^4.8.0"},"dependencies":{"@types/json5":"0.0.30","benchmark":"^2.1.4","json5":"^2.1.2","lodash":"^4.17.19","minimatch":"^3.0.4"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/christian-kohler.path-intellisense-2.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"christian-kohler","metadata":{"installedTimestamp":1752772775130,"pinned":false,"source":"gallery","id":"a41c1549-4053-44d4-bf30-60fc809b4a86","publisherId":"a892fb38-060b-475f-9e73-2e06a8a17a68","publisherDisplayName":"christian-kohler","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":522375},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"alefragnani.bookmarks","uuid":"b689fcc8-d494-4dbf-a228-2c694a578afc"},"manifest":{"name":"Bookmarks","displayName":"Bookmarks","description":"Mark lines and jump to them","version":"13.5.0","publisher":"alefragnani","engines":{"vscode":"^1.78.0"},"categories":["Other"],"keywords":["bookmark","sticky","jump","mark","selection","navigation","multi-root ready"],"extensionKind":["ui","workspace"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"icon":"images/icon.png","license":"GPL-3.0","homepage":"https://github.com/alefragnani/vscode-bookmarks/blob/master/README.md","repository":{"type":"git","url":"https://github.com/alefragnani/vscode-bookmarks.git"},"bugs":{"url":"https://github.com/alefragnani/vscode-bookmarks/issues"},"sponsor":{"url":"https://github.com/sponsors/alefragnani"},"activationEvents":["onStartupFinished"],"main":"./dist/extension-node.js","l10n":"./l10n","contributes":{"viewsContainers":{"activitybar":[{"id":"bookmarks","title":"Bookmarks","icon":"images/bookmark-activity-bar.svg"}]},"views":{"bookmarks":[{"id":"bookmarksExplorer","name":"Explorer"},{"id":"bookmarksHelpAndFeedback","name":"Help and Feedback","visibility":"collapsed"}]},"viewsWelcome":[{"view":"bookmarksExplorer","contents":"In order to use Bookmarks, you have to open a folder or workspace first.\n[Open a Folder](command:_bookmarks.openFolderWelcome)\n[Open a Workspace](command:workbench.action.openWorkspace)\nTo learn more about how to use Bookmarks in VS Code [read the docs](http://github.com/alefragnani/vscode-bookmarks/#bookmarks).","when":"workbenchState == empty"},{"view":"bookmarksExplorer","contents":"No bookmarks yet.\nIn order to use Bookmarks, you have to open a file in the editor.\n[Open a File](command:workbench.action.quickOpen)\nTo learn more about how to use Bookmarks in VS Code [read the docs](http://github.com/alefragnani/vscode-bookmarks/#bookmarks).","when":"workbenchState != empty && !editorIsOpen"},{"view":"bookmarksExplorer","contents":"No bookmarks yet.\nIn order to use Bookmarks, place the cursor in any location in the file and run the command:\n[Bookmarks: Toggle](command:bookmarks.toggle)\nTo learn more about how to use Bookmarks in VS Code [read the docs](http://github.com/alefragnani/vscode-bookmarks/#bookmarks).","when":"workbenchState != empty && editorIsOpen"}],"commands":[{"command":"bookmarks.toggle","title":"Toggle","category":"Bookmarks"},{"command":"bookmarks.jumpToNext","title":"Jump to Next","category":"Bookmarks"},{"command":"bookmarks.jumpToPrevious","title":"Jump to Previous","category":"Bookmarks"},{"command":"_bookmarks.jumpTo","title":"Jump to Document/Line","category":"Bookmarks"},{"command":"bookmarks.selectLines","title":"Select Lines","category":"Bookmarks (Selection)"},{"command":"bookmarks.expandSelectionToNext","title":"Expand Selection to Next","category":"Bookmarks (Selection)"},{"command":"bookmarks.expandSelectionToPrevious","title":"Expand Selection to Previous","category":"Bookmarks (Selection)"},{"command":"bookmarks.shrinkSelection","title":"Shrink Selection","category":"Bookmarks (Selection)"},{"command":"bookmarks.list","title":"List","category":"Bookmarks"},{"command":"bookmarks.toggleLabeled","title":"Toggle Labeled","category":"Bookmarks"},{"command":"bookmarks.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"_bookmarks.viewAsTree#sideBar","title":"View as Tree","icon":"$(list-tree)","enablement":"bookmarks.viewAsList"},{"command":"_bookmarks.viewAsList#sideBar","title":"View as List","icon":"$(list-flat)","enablement":"!bookmarks.viewAsList"},{"command":"bookmarks.openSettings","title":"Open Settings"},{"command":"_bookmarks.sidebar.hidePosition","title":"Hide Position"},{"command":"_bookmarks.sidebar.showPosition","title":"Show Position"},{"command":"bookmarks.clear","title":"Clear","category":"Bookmarks"},{"command":"_bookmarks.clearFromFile","title":"Clear","icon":"$(clear-all)"},{"command":"_bookmarks.deleteBookmark","title":"Delete","icon":"$(close)"},{"command":"_bookmarks.editLabel","title":"Edit Label","icon":"$(edit)"},{"command":"_bookmarks.addBookmarkAtLine#gutter","title":"Add Bookmark"},{"command":"_bookmarks.addLabeledBookmarkAtLine#gutter","title":"Add Labeled Bookmark"},{"command":"_bookmarks.removeBookmarkAtLine#gutter","title":"Remove Bookmark"},{"command":"bookmarks.listFromAllFiles","title":"List from All Files","category":"Bookmarks"},{"command":"bookmarks.clearFromAllFiles","title":"Clear from All Files","category":"Bookmarks"},{"command":"bookmarks.whatsNew","title":"What's New","category":"Bookmarks"},{"command":"_bookmarks.whatsNewContextMenu","title":"What's New"},{"command":"_bookmarks.openFolderWelcome","title":"Open Folder"},{"command":"bookmarks.supportBookmarks","title":"Support Bookmarks","category":"Bookmarks"},{"command":"_bookmarks.openSideBar","title":"Open Side Bar"}],"menus":{"commandPalette":[{"command":"_bookmarks.jumpTo","when":"false"},{"command":"bookmarks.refresh","when":"false"},{"command":"_bookmarks.viewAsTree#sideBar","when":"false"},{"command":"_bookmarks.viewAsList#sideBar","when":"false"},{"command":"bookmarks.openSettings","when":"false"},{"command":"_bookmarks.sidebar.hidePosition","when":"false"},{"command":"_bookmarks.sidebar.showPosition","when":"false"},{"command":"_bookmarks.clearFromFile","when":"false"},{"command":"_bookmarks.deleteBookmark","when":"false"},{"command":"_bookmarks.editLabel","when":"false"},{"command":"_bookmarks.addBookmarkAtLine#gutter","when":"false"},{"command":"_bookmarks.addLabeledBookmarkAtLine#gutter","when":"false"},{"command":"_bookmarks.removeBookmarkAtLine#gutter","when":"false"},{"command":"_bookmarks.whatsNewContextMenu","when":"false"},{"command":"_bookmarks.openFolderWelcome","when":"false"},{"command":"_bookmarks.openSideBar","when":"false"}],"editor/context":[{"submenu":"bookmarks.editor.context","group":"bookmarks"}],"editor/title":[{"submenu":"bookmarks.editor.title","group":"bookmarks"}],"editor/lineNumber/context":[{"command":"_bookmarks.addBookmarkAtLine#gutter","when":"editorLineNumber not in bookmarks.linesWithBookmarks","group":"bookmarks"},{"command":"_bookmarks.addLabeledBookmarkAtLine#gutter","when":"editorLineNumber not in bookmarks.linesWithBookmarks","group":"bookmarks"},{"command":"_bookmarks.removeBookmarkAtLine#gutter","when":"editorLineNumber in bookmarks.linesWithBookmarks","group":"bookmarks"}],"view/title":[{"command":"bookmarks.refresh","when":"view == bookmarksExplorer","group":"navigation@10"},{"command":"_bookmarks.viewAsList#sideBar","when":"view == bookmarksExplorer && !bookmarks.viewAsList","group":"navigation@10"},{"command":"_bookmarks.viewAsTree#sideBar","when":"view == bookmarksExplorer && bookmarks.viewAsList","group":"navigation@10"},{"submenu":"bookmarks.sideBar.title","when":"view == bookmarksExplorer","group":"1_bookmarks"},{"command":"_bookmarks.sidebar.hidePosition","when":"view == bookmarksExplorer && !bookmarks.isHidingPosition","group":"2_bookmarks"},{"command":"_bookmarks.sidebar.showPosition","when":"view == bookmarksExplorer && bookmarks.isHidingPosition","group":"2_bookmarks"},{"command":"bookmarks.openSettings","when":"view == bookmarksExplorer","group":"3_bookmarks"}],"view/item/context":[{"command":"_bookmarks.clearFromFile","when":"view == bookmarksExplorer && viewItem == BookmarkNodeFile"},{"command":"_bookmarks.clearFromFile","when":"view == bookmarksExplorer && viewItem == BookmarkNodeFile","group":"inline"},{"command":"_bookmarks.deleteBookmark","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark","group":"bookmark@2"},{"command":"_bookmarks.deleteBookmark","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark","group":"inline@2"},{"command":"_bookmarks.editLabel","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark","group":"bookmark@1"},{"command":"_bookmarks.editLabel","when":"view == bookmarksExplorer && viewItem == BookmarkNodeBookmark","group":"inline@1"}],"extension/context":[{"command":"_bookmarks.whatsNewContextMenu","group":"bookmarks","when":"extension == alefragnani.bookmarks && extensionStatus == installed"}],"bookmarks.editor.context":[{"command":"bookmarks.toggle","group":"bookmarks","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"},{"command":"bookmarks.toggleLabeled","group":"bookmarks","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"},{"command":"bookmarks.jumpToNext","group":"bookmarks@1","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"},{"command":"bookmarks.jumpToPrevious","group":"bookmarks@1","when":"editorTextFocus && config.bookmarks.showCommandsInContextMenu"}],"bookmarks.editor.title":[{"command":"bookmarks.list","group":"bookmarks"},{"command":"bookmarks.clear","group":"bookmarks"},{"command":"bookmarks.selectLines","group":"bookmarks"}],"bookmarks.sideBar.title":[{"command":"_bookmarks.viewAsTree#sideBar","group":"bookmarks#sideBar.view@1"},{"command":"_bookmarks.viewAsList#sideBar","group":"bookmarks#sideBar.view@2"}]},"submenus":[{"id":"bookmarks.editor.context","label":"Bookmarks"},{"id":"bookmarks.editor.title","label":"Bookmarks"},{"id":"bookmarks.sideBar.title","label":"View & Sort"}],"configuration":{"type":"object","title":"Bookmarks","properties":{"bookmarks.saveBookmarksInProject":{"type":"boolean","default":false,"description":"Allow bookmarks to be saved (and restored) locally in the opened Project/Folder instead of VS Code"},"bookmarks.gutterIconPath":{"type":"string","default":"","description":"Path to another image to be presented as Bookmark","scope":"machine","deprecationMessage":"Use `bookmarks.gutterIconFillColor` and `bookmarks.gutterIconBorderColor` instead"},"bookmarks.gutterIconFillColor":{"type":"string","default":"#157EFB","description":"Specifies the fill color of the bookmark icon","scope":"application"},"bookmarks.gutterIconBorderColor":{"type":"string","default":"#157EFB","description":"Specifies the border color of the bookmark icon","scope":"application"},"bookmarks.backgroundLineColor":{"type":"string","default":"","description":"Background color of the decoration. Use rgba() and define transparent background colors to play well with other decorations. Ex.: rgba(21, 126, 251, 0.1)","deprecationMessage":"Use `bookmarks.lineBackground` in `workbench.colorCustomizations` instead"},"bookmarks.navigateThroughAllFiles":{"type":"boolean","default":true,"description":"Allow navigation look for bookmarks in all files in the project, instead of only the current"},"bookmarks.wrapNavigation":{"type":"boolean","default":true,"description":"Allow navigation to wrap around at the first and last bookmarks in scope (current file or all files)"},"bookmarks.useWorkaroundForFormatters":{"type":"boolean","default":false,"description":"Use a workaround for formatters like Prettier, which does not notify on document changes and messes Bookmark's Sticky behavior"},"bookmarks.experimental.enableNewStickyEngine":{"type":"boolean","default":true,"description":"Experimental. Enables the new Sticky engine with support for Formatters, improved source change detections and undo operations"},"bookmarks.keepBookmarksOnLineDelete":{"type":"boolean","default":false,"description":"Specifies whether bookmarks on deleted line should be kept on file, moving it down to the next line, instead of deleting it with the line where it was toggled."},"bookmarks.showNoMoreBookmarksWarning":{"type":"boolean","default":true,"description":"Specifies whether a notification will be shown when attempting to navigate between bookmarks when no more exist."},"bookmarks.showCommandsInContextMenu":{"type":"boolean","default":true,"description":"Specifies whether Bookmarks commands are displayed on the context menu"},"bookmarks.sideBar.expanded":{"type":"boolean","default":false,"description":"Specifies whether the Side Bar show be displayed expanded"},"bookmarks.sideBar.countBadge":{"type":"string","default":"all","enum":["all","files","off"],"enumDescriptions":["Show the sum of bookmarks from all files","Show the sum of files that contains some bookmarks","Disable the Bookmarks count badge"],"description":"Controls the count badge on the Bookmark icon on the Activity Bar"},"bookmarks.multicursor.toggleMode":{"type":"string","default":"allLinesAtOnce","enum":["allLinesAtOnce","eachLineIndependently"],"enumDescriptions":["Creates bookmarks in all selected lines at once, if at least one of the lines don't have a bookmark","Literally toggles a bookmark in each line, instead of making all lines equal"],"description":"Specifies how multi cursor handles already bookmarked lines"},"bookmarks.label.suggestion":{"type":"string","default":"dontUse","description":"Specifies how labels are suggested when creating bookmarks","enum":["dontUse","useWhenSelected","suggestWhenSelected","suggestWhenSelectedOrLineWhenNoSelected"],"enumDescriptions":["Don't use the selection (original behavior)","Use the selected text (if available) directly, no confirmation required","Suggests the selected text (if available). You still need to confirm.","Suggests the selected text (if available) or the entire line (when has no selection). You still need to confirm."]},"bookmarks.revealLocation":{"type":"string","default":"center","description":"Specifies the location where the bookmarked line will be revealed","enum":["top","center"],"enumDescriptions":["Reveals the bookmarked line at the top of the editor","Reveals the bookmarked line in the center of the editor"]}}},"keybindings":[{"command":"bookmarks.toggle","key":"ctrl+alt+k","mac":"cmd+alt+k","when":"editorTextFocus"},{"command":"bookmarks.jumpToNext","key":"ctrl+alt+l","mac":"cmd+alt+l","when":"editorTextFocus"},{"command":"bookmarks.jumpToPrevious","key":"ctrl+alt+j","mac":"cmd+alt+j","when":"editorTextFocus"},{"command":"bookmarks.shrinkSelection","key":"shift+alt+k","mac":"shift+alt+k","when":"editorTextFocus"},{"command":"bookmarks.expandSelectionToNext","key":"shift+alt+l","mac":"shift+alt+l","when":"editorTextFocus"},{"command":"bookmarks.expandSelectionToPrevious","key":"shift+alt+j","mac":"shift+alt+j","when":"editorTextFocus"}],"colors":[{"id":"bookmarks.lineBackground","description":"Background color for the bookmarked line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"bookmarks.lineBorder","description":"Background color for the border around the bookmarked line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"bookmarks.overviewRuler","description":"Overview ruler marker color for bookmarks","defaults":{"dark":"#157EFB88","light":"#157EFB88","highContrast":"#157EFB88"}}],"walkthroughs":[{"id":"bookmarksWelcome","title":"Get Started with Bookmarks","description":"Learn more about Bookmarks to optimize your workflow","steps":[{"id":"toggle","title":"Toggle Bookmarks","description":"Easily Mark/Unmark Bookmarks at any position.\nAn icon is added to both the gutter and overview ruler to easily identify the lines with Bookmarks.","media":{"markdown":"walkthrough/toggle.md"}},{"id":"navigateToBookmarks","title":"Navigate to Bookmarks","description":"Quickly jump between bookmarked lines.\nSearch bookmarks using the line's content and/or labels.","media":{"markdown":"walkthrough/navigateToBookmarks.md"}},{"id":"defineLabelsForYourBookmarks","title":"Define labels for your bookmarks","description":"You can define labels for any bookmark, giving them an special meaning other than its position.","media":{"markdown":"walkthrough/defineLabelsForYourBookmarks.md"}},{"id":"exclusiveSideBar","title":"Exclusive Side Bar","description":"An exclusive Side Bar with everything you need to increase your productivity.\n[Open Side Bar](command:_bookmarks.openSideBar)","media":{"markdown":"walkthrough/exclusiveSideBar.md"}},{"id":"workingWithRemotes","title":"Working with Remotes","description":"The extension support [Remote Development](https://code.visualstudio.com/docs/remote/remote-overview) scenarios. Even installed locally, you can use Bookmarks in WSL, Containers, SSH and Codespaces.","media":{"markdown":"walkthrough/workingWithRemotes.md"}},{"id":"customizingAppearance","title":"Customizing Appearance","description":"Customize how Bookmarks are presented, its icon, line and overview ruler\n[Open Settings - Gutter Icon](command:workbench.action.openSettings?%5B%22bookmarks.gutterIcon%22%5D)\n[Open Settings - Line](command:workbench.action.openSettingsJson?%5B%22workbench.colorCustomizations%22%5D)","media":{"markdown":"walkthrough/customizingAppearance.md"}}]}]},"eslintConfig":{"extends":["vscode-ext"]},"scripts":{"build":"webpack --mode development","watch":"webpack --watch --mode development","vscode:prepublish":"webpack --mode production","webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","compile":"tsc -watch -p ./","lint":"eslint -c package.json --ext .ts src vscode-bookmarks-core vscode-whats-new"},"dependencies":{"os-browserify":"^0.3.0","path-browserify":"^1.0.1","vscode-ext-codicons":"^1.0.0","vscode-ext-decoration":"1.1.0","vscode-ext-help-and-feedback-view":"^1.0.1","vscode-ext-selection":"1.0.0"},"devDependencies":{"@types/node":"^14.17.27","@types/vscode":"^1.78.0","@types/mocha":"^9.0.0","@types/glob":"^7.1.4","@vscode/test-electron":"^1.6.2","@typescript-eslint/eslint-plugin":"^5.1.0","@typescript-eslint/parser":"^5.1.0","eslint":"^8.1.0","eslint-config-vscode-ext":"^1.1.0","terser-webpack-plugin":"^5.2.4","ts-loader":"^9.2.5","typescript":"^4.4.4","webpack":"^5.76.0","webpack-cli":"^4.8.0","mocha":"^9.1.3"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/alefragnani.bookmarks-13.5.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"alefragnani","metadata":{"installedTimestamp":1752772775120,"pinned":false,"source":"gallery","id":"b689fcc8-d494-4dbf-a228-2c694a578afc","publisherId":"3fbdef65-bdf5-4723-aeaf-9e12a50546ef","publisherDisplayName":"alefragnani","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":6509518},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"oderwat.indent-rainbow","uuid":"eaa2127d-cb69-4ab9-8505-a60c9ee5f28b"},"manifest":{"name":"indent-rainbow","description":"Makes indentation easier to read","version":"8.3.1","publisher":"oderwat","author":{"name":"Hans Raaf"},"icon":"assets/icon.png","license":"MIT","engines":{"vscode":"^1.52.0"},"repository":{"url":"https://github.com/oderwat/vscode-indent-rainbow.git","type":"git"},"bugs":{"url":"https://github.com/oderwat/vscode-indent-rainbow/issues"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"Indent-Rainbow configuration","properties":{"indentRainbow.includedLanguages":{"type":"array","default":[],"description":"For which languages indent-rainbow should be activated. When empty will use for all languages."},"indentRainbow.excludedLanguages":{"type":"array","default":["plaintext"],"description":"For which languages indent-rainbow should be deactivated. When left empty will ignore."},"indentRainbow.ignoreErrorLanguages":{"type":"array","default":["markdown"],"description":"For which languages indent-rainbow should skip indent error detection (use '*' to deactivate errors for all languages)."},"indentRainbow.updateDelay":{"type":"integer","default":100,"description":"The delay in ms until the editor gets updated."},"indentRainbow.indentSetter":{"type":"object","default":{},"description":"Automatically change indent settings for languages (see README.md for details)."},"indentRainbow.errorColor":{"type":"string","default":"rgba(128,32,32,0.6)","description":"Indent color for when there is an error in the indentation, for example if you have your tabs set to 2 spaces but the indent is 3 spaces. Can be any type of web based color format (hex, rgba, rgb)."},"indentRainbow.tabmixColor":{"type":"string","default":"rgba(128,32,96,0.6)","description":"Indent color for when there is a mix between spaces and tabs in the indentation. Can be any type of web based color format (hex, rgba, rgb) or a empty string(to be disabled this coloring)."},"indentRainbow.ignoreLinePatterns":{"type":"array","default":["/[ \t]* [*]/g","/[ \t]+[/]{2}/g"],"description":"Skip error highlighting for RegEx patterns. Defaults to c/cpp decorated block and full line comments."},"indentRainbow.colors":{"type":"array","default":["rgba(255,255,64,0.07)","rgba(127,255,127,0.07)","rgba(255,127,255,0.07)","rgba(79,236,236,0.07)"],"description":"An array with color (hex, rgba, rgb) strings which are used as colors, can be any length."},"indentRainbow.colorOnWhiteSpaceOnly":{"type":"boolean","default":false,"description":"If error color is disabled, indent colors will be rendered until the length of rendered characters (white spaces, tabs, and other ones) is divisible by tabsize. Turn on this option to render white spaces and tabs only."},"indentRainbow.indicatorStyle":{"type":"string","default":"classic","enum":["classic","light"],"markdownDescription":"Classic mode uses a full colored tab to indicate the indendation. Light mode will only display a colored border similar to the default indent guide lines. You can disable the default indicators with `#editor.guides.indentation#`."},"indentRainbow.lightIndicatorStyleLineWidth":{"type":"number","default":1,"description":"This property defines the indent indicator lineWidth when using light mode."}}}},"browser":"./dist/web/extension.js","main":"./out/src/extension","scripts":{"vscode:prepublish":"npm run compile && npm run package-web","compile":"tsc -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"devDependencies":{"@types/glob":"^7.1.3","@types/mocha":"^8.0.4","@types/node":"^12.11.7","@types/vscode":"^1.52.0","@typescript-eslint/eslint-plugin":"^4.11.1","@typescript-eslint/parser":"^4.11.1","eslint":"^7.16.0","glob":"^7.1.6","mocha":"^9.1.4","ts-loader":"^9.2.3","typescript":"^4.1.2","vscode-test":"^1.4.1","webpack":"^5.45.1","webpack-cli":"^4.7.2"},"dependencies":{"@vscode/test-web":"^0.0.8"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/oderwat.indent-rainbow-8.3.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"oderwat","metadata":{"installedTimestamp":1752772775121,"pinned":false,"source":"gallery","id":"eaa2127d-cb69-4ab9-8505-a60c9ee5f28b","publisherId":"ac064ae0-224d-4351-9aa4-45ef7bf3ed21","publisherDisplayName":"oderwat","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":8987942},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"christian-kohler.npm-intellisense","uuid":"dff6b801-247e-40e9-82e8-8c9b1d19d1b8"},"manifest":{"name":"npm-intellisense","displayName":"npm Intellisense","description":"Visual Studio Code plugin that autocompletes npm modules in import statements","version":"1.4.5","publisher":"christian-kohler","engines":{"vscode":"^1.0.0"},"homepage":"https://github.com/ChristianKohler/NpmIntellisense","sponsor":{"url":"https://github.com/sponsors/ChristianKohler"},"repository":{"type":"git","url":"https://github.com/ChristianKohler/NpmIntellisense.git"},"categories":["Other"],"activationEvents":["onLanguage:typescript","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescriptreact","onCommand:npm-intellisense.import"],"capabilities":{"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"type":"object","title":"npm-intellisense","properties":{"npm-intellisense.scanDevDependencies":{"type":"boolean","default":false,"description":"Scans devDependencies as well"},"npm-intellisense.recursivePackageJsonLookup":{"type":"boolean","default":true,"description":"Look for package.json inside nearest directory instead of workspace root"},"npm-intellisense.packageSubfoldersIntellisense":{"type":"boolean","default":false,"description":"(experimental) Enables path intellisense in subfolders of modules"},"npm-intellisense.showBuildInLibs":{"type":"boolean","default":false,"description":"shows build in node modules like 'path' of 'fs'"},"npm-intellisense.importES6":{"type":"boolean","default":true,"description":"For import command. Use import statements instead of require()"},"npm-intellisense.importQuotes":{"type":"string","default":"'","description":"For import command. The type of quotes to use in the snippet"},"npm-intellisense.importLinebreak":{"type":"string","default":";\r\n","description":"For import command. The linebreak used after the snippet"},"npm-intellisense.importDeclarationType":{"type":"string","default":"const","description":"For import command. The declaration type used for require()"}}},"commands":[{"command":"npm-intellisense.import","title":"NPM Intellisense: Import module"}]},"icon":"images/icon.png","main":"./out/src/extension","scripts":{"vscode:prepublish":"tsc","compile":"tsc -p ./","watch":"tsc -watch -p ./","pretest":"npm run compile","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/mocha":"^9.0.0","@types/node":"^14.17.34","@types/vscode":"^1.0.0","glob":"^7.2.0","mocha":"^9.1.3","typescript":"^4.5.2","vscode-test":"^1.6.1"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/christian-kohler.npm-intellisense-1.4.5-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"christian-kohler","metadata":{"installedTimestamp":1752772775117,"pinned":false,"source":"gallery","id":"dff6b801-247e-40e9-82e8-8c9b1d19d1b8","publisherId":"a892fb38-060b-475f-9e73-2e06a8a17a68","publisherDisplayName":"christian-kohler","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":1822169},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"knisterpeter.vscode-github","uuid":"8699dfcb-4beb-4760-b976-c46dcdd87df2"},"manifest":{"name":"vscode-github","displayName":"GitHub","description":"Integrates github and its workflows into vscode","icon":"images/octocat.png","galleryBanner":{"color":"#dddddd","theme":"light"},"version":"0.30.7","publisher":"KnisterPeter","engines":{"vscode":"^1.18.0"},"categories":["Other"],"keywords":["git","github","gitlab","pull request"],"activationEvents":["*"],"main":"./out/src/main","contributes":{"configuration":{"title":"GitHub configuration","type":"object","properties":{"github.gitCommand":{"type":"string","description":"Path to the git executable. If it is in the OS path, this should not be necessary to set.","scope":"window"},"github.preferedMergeMethod":{"type":"string","description":"By default the extension asks the user during merge process. This could be set to on of 'merge', 'squash' or 'rebase' to define the prefered method and not to be asked every time.","scope":"resource"},"github.remoteName":{"type":"string","description":"Defines the name of the git remote. Defaults to undefined which automatically tries to determine the proper remote name.","scope":"resource"},"github.upstream":{"type":"string","description":"By default the extension get the repository and user from .git/config. For forks where upstream is a different repository this could be configured here (e.g. microsoft/typescript).","scope":"resource"},"github.customPullRequestTitle":{"type":"boolean","default":false,"description":"Ask the user for a custom title when creating the PR. If false, defaults to the last commit message.","scope":"resource"},"github.customPullRequestDescription":{"type":"string","enum":["off","singleLine","gitEditor"],"default":"off","description":"By default the pull request description is the first commit message. When this property is set, the user is asked for a description when creating the PR. This can be a single-line description via an input dialog ('singleLine') or a multi-line markdown description via the editor configured in git ('gitEditor').","scope":"resource"},"github.autoPublish":{"type":"boolean","description":"Automatically publish the current branch before creating a pull request. Defaults to false","default":false,"scope":"resource"},"github.allowUnsafeSSL":{"type":"boolean","description":"Allow SSL connnection with unauthorized self-signed certificates. Defaults to false","default":false,"scope":"resource"},"github.statusbar.enabled":{"type":"boolean","description":"True if the statusbar integration should be enabled. Defaults to true","default":true,"scope":"window"},"github.statusbar.command":{"type":["string","null"],"description":"Defines which command is executed when clicking the status bar item. Default behaviour is the create-pull-request-then-merge cycle (different command based on state). For example to open the current pull request set this to 'vscode-github.browserSimplePullRequest'","default":null,"scope":"window"},"github.statusbar.refresh":{"type":"number","default":5,"description":"Interval in seconds to refresh the current pull request status.","scope":"window"},"github.statusbar.color":{"type":"boolean","default":true,"description":"Enables or disables the coloring of the status bar based on the mergeable state.","scope":"window"},"github.statusbar.successText":{"type":"string","description":"Overrides the default success text.","scope":"window"},"github.statusbar.pendingText":{"type":"string","description":"Overrides the default pending text.","scope":"window"},"github.statusbar.failureText":{"type":"string","description":"Overrides the default failure text.","scope":"window"},"gitlab.removeSourceBranch":{"type":"boolean","description":"GitLab setting to 'remove_source_branch' per MergeRequest.","default":false,"scope":"resource"}}},"commands":[{"command":"vscode-github.setGitHubToken","title":"Set Personal Access Token...","category":"GitHub"},{"command":"vscode-github.setGitHubEnterpriseToken","title":"Setup GitHub Enterprise Token...","category":"GitHub"},{"command":"vscode-github.setGitlabToken","title":"Setup Gitlab Token...","category":"GitHub"},{"command":"vscode-github.clearToken","title":"Remove Token...","category":"GitHub"},{"command":"vscode-github.browseProject","title":"Browse project","category":"GitHub"},{"command":"vscode-github.createPullRequest","title":"Create pull request...","category":"GitHub"},{"command":"vscode-github.createSimplePullRequest","title":"Create pull request from current branch in current repository (quick)","category":"GitHub"},{"command":"vscode-github.checkoutPullRequests","title":"Checkout open pull request...","category":"GitHub"},{"command":"vscode-github.browserSimplePullRequest","title":"Browse pull request of current branch","category":"GitHub"},{"command":"vscode-github.browserPullRequest","title":"Browse open pull request...","category":"GitHub"},{"command":"vscode-github.mergePullRequest","title":"Merge pull request (current branch)...","category":"GitHub"},{"command":"vscode-github.addAssignee","title":"Add assignee to pull request...","category":"GitHub"},{"command":"vscode-github.removeAssignee","title":"Remove assignee from pull request...","category":"GitHub"},{"command":"vscode-github.requestReview","title":"Request a review for the current pull request...","category":"GitHub"},{"command":"vscode-github.deleteReviewRequest","title":"Cancel a pull request review...","category":"GitHub"},{"command":"vscode-github.browseOpenIssue","title":"Browse open issue...","category":"GitHub"},{"command":"vscode-github.browseCurrentFile","title":"Browse current file","category":"GitHub"}]},"scripts":{"linter":"tslint --project ./tsconfig.json","pretest":"rm -rf /tmp/test-workspace && mkdir /tmp/test-workspace && cd /tmp/test-workspace && git init && cd -","test":"CODE_TESTS_WORKSPACE=/tmp/test-workspace node ./node_modules/vscode/bin/test","vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","prerelease":"git checkout master && git pull origin master && npm run vscode:prepublish","release":"standard-version","postrelease":"git push --follow-tags origin master","publish-extension":"vsce publish $(node -e \"console.log(require('./package.json').version)\")"},"devDependencies":{"@knisterpeter/standard-tslint":"1.7.2","@types/common-tags":"1.8.1","@types/lru-cache":"5.1.1","@types/mocha":"9.0.0","@types/node":"9.6.61","conventional-changelog-lint":"2.1.1","cz-customizable":"6.3.0","husky":"7.0.4","mocha":"9.1.2","standard-version":"9.3.2","tslint":"6.1.3","typescript":"4.3.5","vscode":"1.1.37"},"dependencies":{"common-tags":"1.8.0","conventional-changelog-lint-config-angular":"1.0.0","decko":"1.2.0","execa":"5.1.1","https":"1.0.0","isomorphic-fetch":"3.0.0","lru-cache":"6.0.0","pretend":"3.1.0","sander":"0.6.0","tsdi":"0.25.0","vscode-extension-telemetry":"0.4.2"},"repository":{"type":"git","url":"https://github.com/KnisterPeter/vscode-github.git"},"author":{"name":"Markus Wolf","email":"knister.peter@shadowrun-clan.de"},"license":"MIT","bugs":{"url":"https://github.com/KnisterPeter/vscode-github/issues"},"homepage":"https://github.com/KnisterPeter/vscode-github","config":{"commitizen":{"path":"./node_modules/cz-customizable"},"cz-customizable":{"config":"./.cz-config.js"}},"prettier":{"singleQuote":true},"husky":{"hooks":{"commit-msg":"conventional-changelog-lint -e"}}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/knisterpeter.vscode-github-0.30.7-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"KnisterPeter","metadata":{"installedTimestamp":1752772822691,"pinned":false,"source":"gallery","id":"8699dfcb-4beb-4760-b976-c46dcdd87df2","publisherId":"b0d75e1c-cb67-4716-ab82-786fa4c02e04","publisherDisplayName":"KnisterPeter","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":3301915},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"devsense.composer-php-vscode","uuid":"eed2a934-7bb6-4a5b-a29d-353077efd839"},"manifest":{"name":"composer-php-vscode","displayName":"Composer","description":"All-in-One composer integration, quick actions, commands, automatic installation, tasks, code lenses, diagnostics, and composer.json IntelliSense.","icon":"icons/composer-icon.png","version":"1.59.17515","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":false,"license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.63.1","node":"^8.11.0"},"categories":["Programming Languages","Snippets","Linters","Other","Visualization"],"keywords":["php","composer","schema","validation","commands","tools","php tools","packagist","codelens"],"activationEvents":["workspaceContains:composer.json"],"main":"./out/src/extension","contributes":{"languages":[{"id":"json"}],"configuration":{"type":"object","title":"Composer","properties":{"composer.workingPath":{"markdownDescription":"Root path for the `composer.json` and `vendor` folders. By default, it's the root of the workspace.","scope":"resource","type":["string","null"],"default":null},"composer.bin":{"markdownDescription":"Optional. Full path to user's `composer.phar` file, i.e. `/usr/bin/composer`. If not specified, `composer.phar` is either located in known directories or downloaded automatically.","scope":"window","type":["string","null"],"default":null},"composer.inlayVersionEnabled":{"markdownDescription":"Enable actual installed package version as an inlay hint right in `composer.json`. Enabled by default.","scope":"window","type":"boolean","default":true},"composer.diagnosticsEnabled":{"markdownDescription":"Enable or disable abandoned packages diagnostics. Enabled by default.","scope":"window","type":"boolean","default":true}}},"jsonValidation":[{"fileMatch":"composer.json","url":"https://raw.githubusercontent.com/composer/composer/master/res/composer-schema.json"}],"commands":[{"category":"Composer","title":"update local 'composer.phar' ...","command":"composer.download"},{"category":"Composer","title":"install","command":"composer.install"},{"category":"Composer","title":"update","command":"composer.update"},{"category":"Composer","title":"create-project ...","command":"composer.create-project"},{"category":"Composer","title":"require package ...","command":"composer.require"},{"category":"Composer","title":"require dev package ...","command":"composer.require-dev"},{"category":"Composer","title":"remove package ...","command":"composer.remove"},{"category":"Composer","title":"about","command":"composer.about"},{"category":"Composer","title":"archive ...","command":"composer.archive"},{"category":"Composer","title":"clear-cache","command":"composer.clear-cache"},{"category":"Composer","title":"fund","command":"composer.fund"},{"category":"Composer","title":"licenses","command":"composer.licenses"},{"category":"Composer","title":"check-platform-reqs","command":"composer.check-platform-reqs"},{"category":"Composer","title":"outdated","command":"composer.outdated"},{"category":"Composer","title":"search ...","command":"composer.search"},{"category":"Composer","title":"reinstall","command":"composer.reinstall"},{"category":"Composer","title":"run-script ...","command":"composer.run-script"},{"category":"Composer","title":"show --tree","command":"composer.show-tree"}],"taskDefinitions":[{"type":"composer","properties":{"command":{"type":"string","enum":["init","install","update","require","remove","bump","reinstall","check-platform-reqs","global","search","show","outdated","browse","suggests","fund","depends","prohibits","validate","status","self-update","config","create-project","dump-autoload","clear-cache","licenses","run-script","exec","diagnose","archive","audit","help"],"format":"[a-z\\-]+","description":"The composer command to run."},"args":{"type":"array","description":"Additional arguments for the composer command."}},"required":["command"]}],"keybindings":[],"debuggers":[],"walkthroughs":[]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, composer packages can't be installed or updated."},"untrustedWorkspaces":{"supported":true,"description":"The extension may require workspace trust to use 'php' 3rd party tool, or to navigate to PHP documentation website, or to navigate to the product website."}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en?from=vscode","description":"PHP Tools product page"}],"scripts":{"generate-resource":"pwsh ../../scripts/Generate-Resource.ps1 -path .","prepare":"npm run -S generate-resource && pwsh ./prepare.ps1","precompile":"npm run -S prepare","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","vscode:prepublish":"npm run -S esbuild-base -- --minify && pwsh ./minify.ps1","compile":"npm run -S esbuild-base -- --sourcemap","postinstall":"cd ../common/node && npm i && cd ../../Composer","vscode:uninstall":""},"dependencies":{"applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","file-url":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.4","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","minimatch":"^3.0.4","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","@vscode/vsce":"^2.7.0","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.17.60","@types/vscode":"^1.63.1","esbuild":"^0.14.48","mocha":"^9.2.2","typescript":"^4.7.4","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/devsense.composer-php-vscode-1.59.17515-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"devsense","metadata":{"installedTimestamp":1752772982406,"pinned":false,"source":"gallery","id":"eed2a934-7bb6-4a5b-a29d-353077efd839","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"devsense","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":557865},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"devsense.profiler-php-vscode","uuid":"6e4e2904-96c2-4c5c-8b78-23da062f2f9e"},"manifest":{"name":"profiler-php-vscode","displayName":"PHP Profiler","description":"Support for PHP (Xdebug) profiling files and inspecting them.","icon":"icons/profiler-icon.png","version":"1.59.17515","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":false,"pricing":"Trial","license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.63.1","node":"^8.11.0"},"categories":["Programming Languages","Testing","Debuggers","Other","Visualization"],"keywords":["php","xdebug","profiler","profile","php tools","cachegrind","tools"],"activationEvents":["onCommand:phpprofiler.openfile","onCommand:phpprofiler.loadprofile","onCustomEditor:phpprofiler.cachegrind"],"main":"./out/src/extension","contributes":{"languages":[{"id":"php"},{"id":"cachegrind","filenamePatterns":["cachegrind.out.*.gz"]}],"configuration":{"type":"object","title":"PHP Profiler","properties":{"phpprofiler.hotpath.treshold":{"type":"number","default":1,"markdownDescription":"(`0`..`100`) Value specifies minimum time (_in percent_) so the line in source code will be highlighted as hot-path."}}},"commands":[{"category":"PHP Profiler","title":"Open Profile File (Xdebug Profiling Output)","command":"phpprofiler.openfile"},{"category":"PHP Profiler","title":"Load CacheGrind Profile (from Xdebug)","command":"phpprofiler.loadprofile","enablement":"false"}],"taskDefinitions":[],"keybindings":[],"debuggers":[],"walkthroughs":[],"customEditors":[{"viewType":"phpprofiler.cachegrind","displayName":"CacheGrind (from Xdebug)","selector":[{"filenamePattern":"cachegrind.out.*.gz"}]}]},"capabilities":{"virtualWorkspaces":{"supported":true,"description":"Virtual workspaces are supported as long as you can open a remote file."},"untrustedWorkspaces":{"supported":true,"description":"All functionality is enabled as long as you can open a remote file."}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en?from=vscode","description":"PHP Tools product page"}],"scripts":{"generate-resource":"pwsh ../../scripts/Generate-Resource.ps1 -path .","prepare":"npm run -S generate-resource && pwsh ./prepare.ps1","precompile":"npm run -S prepare","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","vscode:prepublish":"npm run -S esbuild-base -- --minify && pwsh ./minify.ps1","compile":"npm run -S esbuild-base -- --sourcemap","postinstall":"cd ../common/node && npm i && cd ../../Profiler","vscode:uninstall":""},"dependencies":{"applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","file-url":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.4","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","minimatch":"^3.0.4","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","readline":"1.3.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vsce":"^2.7.0","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-languageserver-protocol-foldingprovider":"^2.0.1","vscode-languageserver-textdocument":"^1.0.7","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.17.60","@types/uuid":"^9.0.8","@types/vscode":"^1.63.1","esbuild":"^0.14.48","mocha":"^9.2.2","typescript":"^4.8.3","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/devsense.profiler-php-vscode-1.59.17515-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"devsense","metadata":{"installedTimestamp":1752772982410,"pinned":false,"source":"gallery","id":"6e4e2904-96c2-4c5c-8b78-23da062f2f9e","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"devsense","targetPlatform":"universal","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":536710},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"devsense.phptools-vscode","uuid":"93916db4-e944-4c74-b68e-47f2834e9e93"},"manifest":{"name":"phptools-vscode","displayName":"PHP","description":"All-in-One PHP support - IntelliSense, Debug, Formatter, Code Lenses, Code Fixes, Linting, Refactoring, PHPUnit Tests, Web Server, and more.","icon":"icons/phptools-icon.png","version":"1.59.17515","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":false,"license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.70.0","node":"^18.0.0"},"categories":["Programming Languages","Debuggers","Snippets","Linters","Formatters","Testing"],"keywords":["php","debug","autocomplete","refactoring","testing","completion","codeactions","format","IntelliSense","Xdebug","test","phpunit","composer","profiler","server","built-in"],"extensionPack":["devsense.intelli-php-vscode","devsense.composer-php-vscode","devsense.profiler-php-vscode"],"activationEvents":["onDebugResolve:php","onDebugDynamicConfigurations:php","onLanguage:php","onLanguage:blade","workspaceContains:phpunit.*"],"main":"./out/src/extension.js","extensionKind":["workspace"],"contributes":{"languages":[{"id":"php","aliases":["PHP","php"]},{"id":"phpx","aliases":["PHPX","phpx"],"configuration":"./syntaxes/phpx.configuration.json"}],"grammars":[{"language":"phpx","scopeName":"source.phpx","path":"./syntaxes/phpx.json"},{"scopeName":"html-blade.injection","path":"./syntaxes/blade.injection.json","injectTo":["text.html.php"],"embeddedLanguages":{"meta.embedded.inline.phpx":"phpx"}}],"semanticTokenScopes":[{"language":"php","scopes":{"keyword":["keyword.other.phpdoc.php"]}}],"breakpoints":[{"language":"php"}],"configuration":[{"title":"PHP","properties":{"php.executablePath":{"description":"Default path to the 'php' executable.","type":["string","array","null"],"scope":"window"},"php.format.autoimport":{"markdownDeprecationMessage":"Use `#php.completion.autoimport#` instead."},"php.format.autoimport-docblock":{"markdownDeprecationMessage":"Use `#php.completion.autoimport-docblock#` instead."},"php.format.exclude":{"markdownDescription":"Exclude document format and format-on-type in specific files and folders. Specify a glob pattern or array of glob patterns.","default":null,"type":["null","string","array"],"examples":["cache/**"],"scope":"window"},"php.files.exclude":{"markdownDescription":"Configure glob patterns for excluding files and folders from being indexed by PHP Language Server.","default":null,"type":["null","object"],"examples":[{"**/tmp/**":true}],"scope":"window"},"php.codeActions.enabled":{"markdownDescription":"Enable or disable Code Actions and Quick Fixes in PHP code. Enabled by default.","type":"boolean","default":true},"php.completion.intelliPHP.preSelect":{"markdownDescription":"Pre-Select most probable item in completion list using local AI model. Enabled by default. Requires [IntelliPHP](command:workbench.extensions.search?%22devsense.intelli-php-vscode%22) installed.","type":"boolean","default":true},"php.completion.parameters":{"markdownDescription":"Automatically insert parentheses `()` after completion of functions, and trigger parameter hints.","type":"string","default":"parentheses","enum":["none","parentheses","parameters"],"markdownEnumDescriptions":["Do not insert parentheses and do not trigger parameters completion.","Insert parentheses `()` after the function completion and place cursor inside them.","Insert parentheses and parameters snippet."],"scope":"window"},"php.completion.docblock":{"markdownDescription":"Generate DocBlock comment automatically by typing `/**` above a declaration.","type":"boolean","default":true},"php.completion.showNamespaceLabel":{"type":"boolean","default":true,"markdownDescription":"Show item namespace in the completion list.","scope":"window"},"php.completion.showParameters":{"type":"boolean","default":false,"markdownDescription":"Show function signature in the completion list.","scope":"window"},"php.completion.showDeprecated":{"type":["boolean","string"],"default":true,"enum":[true,false,"hide","showNormal","showStrikethrough"],"markdownDescription":"Customize deprecated symbols in the completion list.","scope":"window"},"php.completion.autoimport":{"markdownDescription":"Completion of types, functions, and constants outside of the current namespace scope.","type":"string","default":"auto-import","enum":["auto-import","fqn","none","hide"],"markdownEnumDescriptions":["Add corresponding `use` alias upon completion.","Fully qualifies the name upon completion.","Inserts the name as it is, without importing the alias.","Do not show inaccessible symbols in code completion."],"scope":"window"},"php.completion.autoimport-docblock":{"markdownDescription":"Completion of type names outside of the current namespace scope, when completing inside a PHP doc block (e.g. in `@param` tag).","type":"string","default":"fqn","enum":["fqn","auto-import","none","hide","default"],"markdownEnumDescriptions":["Fully qualifies the name upon completion.","Add corresponding `use` alias upon completion.","Inserts the name as it is, without importing the alias.","Do not show inaccessible types in code completion.","Use the setting from `#php.completion.autoimport#` option."],"scope":"window"},"php.completion.namingConvention":{"type":"string","markdownDescription":"Naming convention for generated member names.","enum":["camelCase","PascalCase","snake_case"],"default":"camelCase","scope":"window"},"php.completion.getterSnippet":{"type":"string","markdownDescription":"Code to be placed inside the getter function. This is inserted using code action over a private class properties to generate `getter` function.\n\nBy default it's similar to:\n\n```php\nreturn {PROPERTY};\n```\nUse variables:\n- `{PROPERTY}` (`$this->property` or `self::property`)\n- `{THIS}` (`$this` or ``)\n- `{NAME}` (the property name without `$`).","scope":"window"},"php.completion.setterSnippet":{"type":"string","markdownDescription":"Code to be placed inside the setter function. This is inserted using code action over a private class properties to generate `setter` function.\n\nBy default it's similar to:\n\n```php\n{PROPERTY} = ${NAME};\nreturn {THIS};\n```\nUse variables:\n- `{PROPERTY}` (`$this->property` or `self::property`)\n- `{THIS}` (`$this` or ``)\n- `{NAME}` (the property name without `$`).","scope":"window"},"php.sortUses.caseSensitive":{"type":"boolean","markdownDescription":"Whether sorting of `use` statements is case sensitive. Case sensitive sorting puts upper case letters on top.","scope":"window","default":false},"php.inlayHints.insertOnDoubleClick":{"type":"boolean","markdownDescription":"The inlay hint will be inserted to the code on double-clicking on it. Enabled by default.","scope":"application","default":true},"php.inlayHints.parameters.enabled":{"type":"boolean","default":true,"markdownDescription":"Display inlay parameter names.\n```phpx\nfoo( /*name:*/ x ); \n```\n","scope":"window"},"php.inlayHints.parameters.suppressNameMatchingValue":{"type":"boolean","default":false,"markdownDescription":"Suppress inlay parameter name hint, when the parameter name matches the argument value.\n```phpx\n// foo( name: $name ); # suppress 'name:' because the argument looks the same\nfoo( $name );\n```\n","scope":"window"},"php.inlayHints.parameters.byReference":{"type":"boolean","default":true,"markdownDescription":"Display inlay `&` sign in front of arguments passed by reference.\n```phpx\nfoo( /*&*/$x ); // show '&' because '$x' is passed by reference \n```\n","scope":"window"},"php.inlayHints.types.return":{"type":["boolean","string"],"enum":[true,false,"named"],"enumItemLabels":["Enable","Disable","Named Functions Only"],"markdownEnumDescriptions":["**Enable** for all functions without a type hint","**Disable**","Only for global functions and methods. Disabled for anonymous and arrow functions."],"default":true,"markdownDescription":"Display inlay function return type inferred from the function code.\n```phpx\nfunction foo()/*: void*/ {\n```\n","scope":"window"},"php.inlayHints.types.variable":{"type":"boolean","default":false,"markdownDescription":"Display assigned variable type.\n```phpx\n$value/*: int*/ = strlen('str');\n```\n","scope":"window"},"php.inlayHints.types.lambdaParameter":{"type":"boolean","default":true,"markdownDescription":"Display infered lambda parameter type if possible.\n```phpx\n$collection->map(function ( /*string*/ $value) {\n```\n","scope":"window"},"php.inlayHints.types.suppressVariableFromLiteral":{"type":"boolean","default":true,"markdownDescription":"Suppress inlay hint for obvious variable assignments.\n```phpx\n$value/*: int*/ = 1;\n```\n","scope":"window"},"php.docblock.colorMode":{"type":"string","default":null,"scope":"application","enum":[null,"fallback","simple"],"enumItemLabels":["default","fallback","simple"],"markdownEnumDescriptions":["Colorize PHPDoc tags, variables, and all the types using corresponding colors.","Does not add semantic colors to PHPDoc blocks. Colors are managed by Visual Studio Code or other extensions.","Colorize tags, variables, and types with solid colors."]},"php.docblock.packageSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet at file beginning. Example:\n```json\n\"php.docblock.packageSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@copyright\": \"(c) $CURRENT_YEAR\"\n}\n```"},"php.docblock.classSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet above a class/interface/trait/enum. Example:\n```json\n\"php.docblock.classSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@copyright\": \"(c) $CURRENT_YEAR\"}\n```"},"php.docblock.propertySnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet above a property. Example:\n```json\n\"php.docblock.propertySnippet\": {\n  \"@author\": \"${name:John}\"\n}\n```"},"php.docblock.functionSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}","@throws":false}],"markdownDescription":"DocBlock snippet above a function. Example:\n```json\n\"php.docblock.functionSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@throws\": false\n}\n```"},"php.docblock.variableSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"singleline":true}],"markdownDescription":"DocBlock snippet above a variable assignment. Example:\n```json\n\"php.docblock.variableSnippet\": {\n  \"singleline\": true\n}\n```"},"php.docblock.getterSetterSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}","summary":false}],"markdownDescription":"Snippet for DocBlocks generated using getter/setter code action"},"php.hover.parameters":{"type":"boolean","default":true,"markdownDescription":"Show function parameters description in the mouse hover tool-tip.","scope":"window"},"php.hover.parametersFullName":{"type":"boolean","default":false,"markdownDescription":"Show fully qualified parameter type name in function tool-tip.","scope":"window"},"php.hover.documentation":{"type":"boolean","default":true,"markdownDescription":"If available, show symbol documentation link in the mouse hover tool-tip.","scope":"window"},"php.hover.fullname":{"type":"boolean","default":false,"markdownDescription":"Show full name of symbols, including the full class name.","scope":"window"},"php.hover.containingClass":{"type":"boolean","default":true,"markdownDescription":"Show containing class name of class members.","scope":"window"},"php.linkedEditing.variables":{"markdownDescription":"When `#editor.linkedEditing#` setting is enabled, this option specifies whether to apply linked edits to local variable names.","default":false,"type":"boolean","scope":"window"},"php.workspace.includePath":{"description":"Paths containing additional PHP declarations. Separated with semi-colon.","type":["string","array"],"scope":"window"},"php.workspace.shortOpenTag":{"markdownDescription":"Enable or disable parsing inside `<?` tag. Default value is `\"auto\"` so short open tags will be _enabled_ if there is no `<?xml` tag.","type":"string","scope":"window","default":"auto","enum":["auto","true","false"],"markdownEnumDescriptions":["Enable short open tags unless there is `<?xml` tag.","Enable PHP code inside short open tags.","Disable PHP code inside short open tags."]},"php.navigation.referencesScope":{"markdownDescription":"Specify target locations when navigating to a symbol references.","scope":"window","type":"string","default":"any","enum":["any","strict"],"enumDescriptions":["Target matches source symbol's type, or its type is unknown, or it's a dynamic construct which may be possibly a valid reference as well.","Target and the source symbol are strictly typed."]},"php.executables":{"markdownDescription":"Defines PHP profiles as a user defined name and a `php` binary path.\nExample: `\"php.executables\": { \"v7.4\": \"/usr/bin/php7.4\" }`","examples":[{"v7.4":"/usr/bin/php7.4"}],"type":"object","scope":"application"},"php.version":{"markdownDescription":"A PHP version or a profile name defined in `#php.executables#`.","type":"string","scope":"window"},"php.codeLens.enabled":{"description":"Enable/disable code lenses in PHP files.","type":"boolean","default":true,"scope":"application"},"php.problems.scope":{"markdownDescription":"What workspace folders get analyzed for problems.\n\nDefault is `\"opened\"` which gets problems for opened documents only.\n\n_Note, **fatal errors** and **parse errors** are always reported across the entire workspace._","type":"string","default":"opened","enum":["none","opened","all"],"markdownEnumDescriptions":["Workspace won't be analysed.","Only opened documents will be analyzed for problems.","Entire workspace will be analyzed continuously. (PREMIUM)"],"scope":"window"},"php.problems.exclude":{"markdownDescription":"Path patterns to be ignored from reporting problems. Value can be set to `true` to ignore all problems or a comma separated list of specific problem codes.\n\n_See [Problems Configuration](https://docs.devsense.com/vscode/problems#phpproblemsexclude) for more details._\n\n\n_Example:_\n```json\n\"php.problems.exclude\": {\n  \"/\": [406],\n  \"vendor/\": true,\n}\n```","type":["object","null"],"examples":[{"/":[406],"vendor/":true}],"default":null,"scope":"window"},"php.problems.excludeGitIgnore":{"markdownDescription":"Do not report problems in files specified in `.gitignore` file.","type":"boolean","default":false,"scope":"window"},"php.problems.workspaceAnalysis":{"description":"Deprecated. Enable full workspace-wide analysis. Enabled by default.","type":["boolean"],"enum":[true,false],"default":true,"scope":"window","markdownDeprecationMessage":"Use `#php.problems.scope#` instead."},"php.cache.enableOnlineCache":{"markdownDescription":"For better performance, IntelliSense for _composer_ packages may be fetched from a cache server.\n\nThis improves workspace indexing after installing or updating composer packages.","type":"boolean","default":true,"scope":"machine"},"php.cache.location":{"markdownDescription":"Full path for local IntelliSense cache for _composer_ packages.","type":["string","null"],"default":null,"scope":"machine"},"php.stubs":{"markdownDescription":"Array of extension names to be included in the built-in IntelliSense, the localized manual, and code analysis. By default all the standard PHP extensions are included.\n\nExamples:\n\n```json\n{\n  \"php.stubs\": [\"*\", \"com\", \"pcntl\", \"xdebug\"]\n}\n```\n\nList of possible values:\n\n- `\"*\"` includes the standard set of extensions.\n- `\"all\"` includes all the available extensions.\n- `com`\n- `pcntl`\n- `zip`\n- `zlib`\n- ...","default":["*"],"type":"array","scope":"window","examples":[["*","com"],["all"]]},"php.debug.port":{"markdownDescription":"Default Xdebug port or array of ports. This value is used when `port` is not specified in `launch.json` settings. Usually 9000 or 9003.","default":[9003,9000],"type":["array","integer"],"scope":"window"},"phpTools.license":{"markdownDeprecationMessage":"This setting has been deprecated, you may delete it. Use _Command Palette_, the command `PHP Tools: Activate License`.","description":"The license fingerprint. (deprecated)","type":["string","null"],"scope":"application"},"phpTools.suppressPremiumFeatures":{"markdownDescription":"Most of the premium features will be disabled and user won't be bothered with related messages or blocked code actions.","scope":"machine","type":"boolean","default":false},"phpTools.language":{"description":"Language of PHP Tools IntelliSense.","type":["string",null],"enum":["en","de","es","fr","it","ja","pt","ru","zh",null],"default":null,"scope":"application"},"phpTools.parallelismLimit":{"description":"Maximum number of threads used to index and analyse files in parallel. Recommend value is number of CPU Cores * 2. Extension needs to be restarted after changing this setting.","type":["number","null"],"default":null,"scope":"machine"},"php.highlight-todo.enable":{"markdownDescription":"Enable highligting of to-do comments (`@todo`, `// TODO`, or `# TODO`). Enabled by default.","type":"boolean","default":true,"scope":"window"},"php.highlight-todo.style":{"markdownDescription":"The style of to-do decoration. See [ThemableDecorationRenderOptions](https://code.visualstudio.com/api/references/vscode-api#ThemableDecorationRenderOptions) for details.","type":"object","default":{"backgroundColor":"#eecc00"},"scope":"window"},"phpunit.command":{"markdownDescription":"Custom command to for running and debugging tests. Use variables `${phpunit}`, `${phpunitxml}`, `${phpunitargs}`, `${php}`, `${phpargs}`, `${cwd}`.\n\nExample:\n\n`ddev exec phpunit -c ${phpunitxml} ${phpunitargs}`","type":"string","default":"\"${php}\" ${phpargs} \"${phpunit}\" ${phpunitargs}","examples":["\"${php}\" ${phpargs} \"${phpunit}\" ${phpunitargs}","ddev exec phpunit ${phpunitargs}"],"scope":"window"},"phpunit.phpunit":{"description":"PHPUnit binary to be used to run and debug the tests. It can be either full path or path relative to the workspace root.\n\nExample: `./vendor/bin/phpunit` or `\"phpunit\"`.","type":"string","default":null,"scope":"window"},"phpunit.enableAutomaticRefresh":{"markdownDescription":"Watch for `.php` and `phpunit` changes and refresh tests view automatically. Enabled by default.","type":"boolean","default":true,"scope":"window"},"phpunit.preTask":{"markdownDescription":"Task or array of tasks defined in `tasks.json` to be executed before a test execution is finished. Task attributes will get updated with `\"filter\"` or `\"testsuite\"` values.","type":["string","array"],"scope":"window"},"phpunit.postTask":{"markdownDescription":"Task or array of tasks defined in `tasks.json` to be executed after a test execution is finished. Task attributes will get updated with `\"filter\"` or `\"testsuite\"` values.","type":["string","array"],"scope":"window"}}},{"title":"Code Style","properties":{"php.format.codeStyle":{"markdownDescription":"Base code formatting style. This setting is used as a default for all code formatting rules, unless overwritten with specific code formatting rules.","type":["string"],"enum":["PER","PSR-2","PSR-12","Allman","K&R","PHP Tools","Laravel","WordPress","Drupal","Joomla","Off"],"default":"PSR-12","scope":"window"}}},{"title":"Formatting (BlankLines)","properties":{"php.format.rules.blankLinesAfterClass":{"markdownDescription":"Defines the number of blank lines after a class declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterClassBody":{"markdownDescription":"Defines the number of blank lines after a class body.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterFunction":{"markdownDescription":"Defines the number of blank lines after a function declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterMethod":{"markdownDescription":"Defines the number of blank lines after a method declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterNamespace":{"markdownDescription":"Defines the number of blank lines after a namespace declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterOpenTag":{"markdownDescription":"Defines the number of blank lines after a open tag, except when the close tag is on the same line.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAfterUseStatements":{"markdownDescription":"Defines the number of blank lines after 'use' statements.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAroundClassConstant":{"markdownDescription":"Defines the number of blank lines around a class constant.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAroundEnumCase":{"markdownDescription":"Defines the number of blank lines around an enum case.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesAroundProperty":{"markdownDescription":"Defines the number of blank lines around a property.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeClass":{"markdownDescription":"Defines the number of blank lines before a class declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeClassBody":{"markdownDescription":"Defines the number of blank lines before a class body.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeFunction":{"markdownDescription":"Defines the number of blank lines before a function declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeFunctionBody":{"markdownDescription":"Defines the number of blank lines before a function body.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeMethod":{"markdownDescription":"Defines the number of blank lines before a method declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeMethodBody":{"markdownDescription":"Defines the number of blank lines before a method body.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeNamespace":{"markdownDescription":"Defines the number of blank lines before a namespace declaration.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeReturnStatement":{"markdownDescription":"Defines the number of blank lines before a return statement.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBeforeUseStatements":{"markdownDescription":"Defines the number of blank lines before 'use' statements.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.blankLinesBetweenUseTypes":{"markdownDescription":"Defines the number of blank lines between different types of use statements (e.g., classes, functions, constants), but not between the same type.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"},"php.format.rules.maxBlankLines":{"markdownDescription":"Defines the maximum number of consecutive blank lines allowed in the code.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string","number"],"enum":["keep",0,1,2,3],"enumItemLabels":["Keep","None","One","Two","Three"],"default":"keep","scope":"window"}}},{"title":"Formatting (Conversions)","properties":{"php.format.rules.addCommaAfterLastArrayElement":{"markdownDescription":"Automatically adds a comma after the last array element if it's not on a single line.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.addCommaAfterLastCallParameter":{"markdownDescription":"Automatically adds a comma after the last function call parameter if it's not on a single line.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.addCommaAfterLastDeclParameter":{"markdownDescription":"Automatically adds a comma after the last function or method declaration parameter if it's not on a single line.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.booleanConstantCasing":{"markdownDescription":"Defines casing for `true` and `false` constants.\n* `uppercase` - Changes the casing to upper case\n* `lowercase` - Changes the casing to lower case\n* `keep` - Keeps the original casing\n\n\n```phpx\n#lowercase     #uppercase\ntrue, false    TRUE, FALSE\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["uppercase","lowercase","keep"],"enumItemLabels":["UpperCase","LowerCase","Keep"],"default":null,"scope":"window"},"php.format.rules.importSorting":{"markdownDescription":"Sort 'use' statements order. This setting affects how 'Organize imports' code action will sort 'use' statements.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","alphabetic","byLength"],"enumItemLabels":["Off","Alphabetic sort","Sort by length"],"default":null,"scope":"window"},"php.format.rules.importSortingCaseSensitive":{"markdownDescription":"Case-sensitive alphabetic sort of 'use' statements. Case sensitive sorting puts upper case letters on top.\n\n```phpx\n#Disabled    #Enabled\n\nuse Aad;     use ACME;\nuse ACME;    use Aad;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.nullConstantCasing":{"markdownDescription":"Defines casing for `null` constant.\n* `uppercase` - Changes the casing to upper case\n* `lowercase` - Changes the casing to lower case\n* `keep` - Keeps the original casing\n\n\n```phpx\n#lowercase    #uppercase\nnull          NULL\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["uppercase","lowercase","keep"],"enumItemLabels":["UpperCase","LowerCase","Keep"],"default":null,"scope":"window"}}},{"title":"Formatting (Indentation)","properties":{"php.format.rules.indentBraces":{"markdownDescription":"Gets value indicating whether to indent braces\n\n```phpx\n#Enabled             #Disabled\nfunction foo()       function foo()\n    {                {\n    echo \"Hello\";        echo \"Hello\";\n    }                }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"}}},{"title":"Formatting (NewLines)","properties":{"php.format.rules.catchOnNewLine":{"markdownDescription":"Place `catch` on a new line.\n\n```phpx\n#Enabled    #Disabled\ntry         try\n{           {\n}           } catch\ncatch       {\n{           }\n}           finally\nfinally     {\n{           }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.elseOnNewLine":{"markdownDescription":"Place `else` on a new line.\n\n```phpx\n#Enabled     #Disabled\nif (true)    if (true)\n{            {\n}            } else\nelse         {\n{            }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.endWithNewLine":{"markdownDescription":"Inserts final newline at the end of a file.\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.finallyOnNewLine":{"markdownDescription":"Place `finally` on a new line.\n\n```phpx\n#Enabled    #Disabled\ntry         try\n{           {\n}           }\ncatch       catch\n{           {\n}           } finally\nfinally     {\n{           }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForAnonymousClasses":{"markdownDescription":"Place open brace `{` on a new line for anonymous classes.\n\n```phpx\n#Enabled                                  #Disabled\n$c = new class extends \\Foo implements    $c = new class extends \\Foo implements\n    \\ArrayAccess                              \\ArrayAccess {\n{                                         };\n};\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForBlocks":{"markdownDescription":"Place open brace `{` on a new line for all types of code blocks, except for those controlled by other formatting rules.\n\n```phpx\n#Enabled     #Disabled\nif (true)    if (true) {\n{            }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForFunctions":{"markdownDescription":"Place open brace `{` on a new line for methods, functions and constructors.\n\n```phpx\n#Enabled          #Disabled\nfunction foo()    function foo() {\n{                 }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForLambdas":{"markdownDescription":"Place open brace `{` on a new line for lambda functions.\n\n```phpx\n#Enabled                 #Disabled\n$lambda = function ()    $lambda = function () {\n{                        }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForNamespaces":{"markdownDescription":"Place open brace `{` on a new line for namespace declarations.\n\n```phpx\n#Enabled       #Disabled\nnamespace A    namespace A {\n{              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForTypes":{"markdownDescription":"Place open brace `{` on a new line for types.\n\n```phpx\n#Enabled                           #Disabled\nclass X extends \\Foo implements    class X extends \\Foo implements\n    \\ArrayAccess                       \\ArrayAccess {\n{                                  }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"}}},{"title":"Formatting (Spacing)","properties":{"php.format.rules.spaceAfterCast":{"markdownDescription":"Insert a space after a cast operator.\n\n```phpx\n#Enabled            #Disabled\n$x = (int) $obj;    $x = (int)$obj;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceAfterUnaryNot":{"markdownDescription":"Insert a space after a unary not operator.\n\n```phpx\n#Enabled        #Disabled\n$x = ! $obj;    $x = !$obj;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceAroundConcatenation":{"markdownDescription":"Insert a space around concatenation operator.\n\n```phpx\n#Enabled               #Disabled\n$x = $str1 . $str2;    $x = $str1.$str2;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeColonInControlStatements":{"markdownDescription":"Insert a space before colon in control flow blocks.\n\n```phpx\n#Enabled       #Disabled\nif (true) :    if (true):\nendif;         endif;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeColonInReturnType":{"markdownDescription":"Insert a space before colon in a return type\n\n```phpx\n#Enabled                  #Disabled\nfunction foo() : int {    function foo(): int {\n}                         }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInArrowFunctions":{"markdownDescription":"Insert a space before arrow function parentheses.\n\n```phpx\n#Enabled            #Disabled\n$x = fn () => 1;    $x = fn() => 1;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInCalls":{"markdownDescription":"Insert a space before parentheses in method, function and constructor call parentheses.\n\n```phpx\n#Enabled    #Disabled\nfoo ();     foo();\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInControlStatements":{"markdownDescription":"Insert a space before parentheses in control statements.\n\n```phpx\n#Enabled     #Disabled\nif (true)    if(true)\n{            {\n}            }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInDeclarations":{"markdownDescription":"Insert a space before parentheses in method, function and constructor declaration parentheses.\n\n```phpx\n#Enabled           #Disabled\nfunction foo ()    function foo()\n{                  {\n}                  }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinArrayInitilizersParens":{"markdownDescription":"Insert a space within array initializer parentheses.\n\n```phpx\n#Enabled                                      #Disabled\n$x = array( 1 => \"first\", 2 => \"second\" );    $x = array(1 => \"first\", 2 => \"second\");\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinBrackets":{"markdownDescription":"Insert a space within brackets.\n\n```phpx\n#Enabled         #Disabled\n$y = $x[ 1 ];    $y = $x[1];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinBracketsAroundExpression":{"markdownDescription":"Insert a space within brackets around expression.\n\n```phpx\n#Enabled              #Disabled\n$y = $x[ $i + 1 ];    $y = $x[$i + 1];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinCallParens":{"markdownDescription":"Insert a space within method, function and constructor call parentheses.\n\n```phpx\n#Enabled        #Disabled\nfoo( 1, 2 );    foo(1, 2);\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinCatchParens":{"markdownDescription":"Insert a space within `catch` statement header parentheses.\n\n```phpx\n#Enabled                           #Disabled\ntry { } catch ( Exception ) { }    try { } catch (Exception) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinDeclParens":{"markdownDescription":"Insert a space within method, function and constructor declaration parentheses.\n\n```phpx\n#Enabled                      #Disabled\nfunction foo( $x, $y ) { }    function foo($x, $y) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinExpressionParens":{"markdownDescription":"Insert a space within parentheses around expression.\n\n```phpx\n#Enabled           #Disabled\n$x = ( 1 + 2 );    $x = (1 + 2);\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinForeachParens":{"markdownDescription":"Insert a space within `foreach` statement header parentheses.\n\n```phpx\n#Enabled                                   #Disabled\nforeach ( $expr as $key => $value ) { }    foreach ($expr as $key => $value) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinForParens":{"markdownDescription":"Insert a space within `for` statement header parentheses.\n\n```phpx\n#Enabled                              #Disabled\nfor ( $i = 0; $i < 100; $i++ ) { }    for ($i = 0; $i < 100; $i++) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinIfParens":{"markdownDescription":"Insert a space within `if` statement header parentheses.\n\n```phpx\n#Enabled           #Disabled\nif ( true ) { }    if (true) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinSwitchParens":{"markdownDescription":"Insert a space within `switch` statement header parentheses.\n\n```phpx\n#Enabled             #Disabled\nswitch ( $x ) { }    switch ($x) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinWhileParens":{"markdownDescription":"Insert a space within `while` statement header parentheses.\n\n```phpx\n#Enabled                  #Disabled\nwhile ( $a != $b ) { }    while ($a != $b) { }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"}}},{"title":"Formatting (Wrapping)","properties":{"php.format.rules.alignConsecutiveAssignments":{"markdownDescription":"Automatically align consecutive `=` assignments.\n\n```phpx\n#Enabled       #Disabled\n$a     = 1;    $a = 1;\n$bbb   = 2;    $bbb = 2;\n$ccccc = 3;    $ccccc = 3;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignConstants":{"markdownDescription":"Automatically align constant declarations\n\n```phpx\n#Enabled              #Disabled\nclass X {             class X {\n    const a   = 1;        const a = 1;\n    const bb  = 2;        const bb = 2;\n    const ccc = 3;        const ccc = 3;\n}                     }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignEnumCases":{"markdownDescription":"Automatically align assigned values in backed enumerations\n\n```phpx\n#Enabled             #Disabled\nenum X {             enum X {\n    case a   = 1;        case a = 1;\n    case bb  = 2;        case bb = 2;\n    case ccc = 3;        case ccc = 3;\n}                    }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignMatchArmBodies":{"markdownDescription":"Automatically align the bodies (results) within `match` expression arms\n\n```phpx\n#Enabled                        #Disabled\nmatch ($day) {                  match ($day) {\n    'Monday'    => 'Work',          'Monday' => 'Work',\n    'Tuesday'   => 'Tacos',         'Tuesday' => 'Tacos',\n    'Wednesday' => 'Waffles'        'Wednesday' => 'Waffles'\n};                              };\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignProperties":{"markdownDescription":"Automatically align properties declarations\n\n```phpx\n#Enabled                   #Disabled\nclass X {                  class X {\n    var       $a   = 1;        var $a = 1;\n    public    $bb  = 2;        public $bb = 2;\n    protected $ccc = 3;        protected $ccc = 3;\n}                          }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersAlignKeyValuePairs":{"markdownDescription":"Automatically align `=>` operators.\n\n```phpx\n#Enabled              #Disabled\n$x = [                $x = [\n    1    => 'foo',        1 => 'foo',\n    1234 => 'bar'         1234 => 'bar'\n];                    ];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersNewLineAfterLastElement":{"markdownDescription":"Place a new line after the last element when wrapping.\n\n```phpx\n#Enabled    #Disabled\n$x = [      $x = [\n    1,          1,\n    2           2];\n];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersNewLineBeforeFirstElement":{"markdownDescription":"Place a new line before the first array element when wrapping.\n\n```phpx\n#Enabled    #Disabled\n$x = [      $x = [1,\n    1,          2\n    2       ];\n];\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersWrap":{"markdownDescription":"Defines wrapping behavior for array initializers.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each item is placed on a new line and properly indented if the array initializer is split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.callParametersNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` when wrapping.\n\n```phpx\n#Enabled    #Disabled\nfoo(        foo(1,\n    1,          2\n    2       );\n);\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.callParametersNewLineBeforeRightParen":{"markdownDescription":"Place a new line before the right closing parenthesis `)` when wrapping.\n\n```phpx\n#Enabled    #Disabled\nfoo(        foo(\n    1,          1,\n    2           2);\n);\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.callParametersWrap":{"markdownDescription":"Defines wrapping behavior for method, function and constructor call parameters.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each item is placed on a new line and properly indented if the call arguments are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.declCompactEmptyBody":{"markdownDescription":"Transform empty body into `{}` and keep it at the same line as a previous symbol, separated by single space.\n\n```phpx\n#Enabled         #Disabled\nfunction foo(    function foo(\n    $x,              $x,\n    $y               $y\n) {}             )\n                 {\n                 }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.declKeepRightParenAndOpenBraceOnOneLine":{"markdownDescription":"Keep the right closing parenthesis `)` of a function or method declaration header on the one line as opening brace of the body `{`.\n\n```phpx\n#Enabled         #Disabled\nfunction foo(    function foo(\n    $x,              $x,\n    $y               $y\n) {              )\n}                {\n                 }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.declParametersNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` of function or method declaration header when wrapping.\n\n```phpx\n#Enabled         #Disabled\nfunction foo(    function foo($x,\n    $x,              $y\n    $y           ) {\n) {              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.declParametersNewLineBeforeRightParen":{"markdownDescription":"Place a new line before the right closing parenthesis `)` of a function or method declaration header when wrapping.\n\n```phpx\n#Enabled         #Disabled\nfunction foo(    function foo(\n    $x,              $x,\n    $y               $y) {\n) {              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.declParametersWrap":{"markdownDescription":"Defines wrapping behavior for method or function declaration parameters.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each declaration parameter is placed on a new line and properly indented if the arguments are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.forStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `for` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled         #Disabled\nfor(             for($i = 0;\n    $i = 0;          $i < 100;\n    $i < 100;        $i++\n    $i++         ) {\n) {              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.forStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `for` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled         #Disabled\nfor(             for($i = 0;\n    $i = 0;          $i < 100;\n    $i < 100;        $i++\n    $i++         ) {\n) {              }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.forStatementWrap":{"markdownDescription":"Defines wrapping behavior for `for` statement.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each item in `for` statement is placed on a new line and properly indented if they are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.groupUseNewLineBeforeFirstDeclaration":{"markdownDescription":"Place a new line before first group `use` declaration if the list of declarations is split across multiple lines.\n\n```phpx\n#Enabled               #Disabled\nuse Vendor\\pkg\\ns\\{    use Vendor\\pkg\\ns\\{ns1\\A,\n    ns1\\A,                 ns2\\B,\n    ns2\\B,             };\n};\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.groupUseWrap":{"markdownDescription":"Defines wrapping behavior for group `use` list in type declarations.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each declaration in group `use` list is placed on a new line and properly indented if they are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.chainedMethodCallsSemicolonOnNewLine":{"markdownDescription":"Place `;` on a new line after the last element in the chained method call when wrapping.\n\n```phpx\n#Enabled       #Disabled\n$x->aaa()      $x->aaa()\n    ->bbb()        ->bbb();\n;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.chainedMethodCallsWrap":{"markdownDescription":"Defines wrapping behavior for chained method calls.\n* `Off` - No wrapping is applied\n* `Always` - When this option is selected each method call is placed on a new line and properly indented.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.ifStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `if` or `elseif` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled    #Disabled\nif(         if(true\n    true    ) {\n) {         }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.ifStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `if` or `elseif` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled    #Disabled\nif(         if(\n    true        true) {\n) {         }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.implementsListWrap":{"markdownDescription":"Defines wrapping behavior for `implements` list in type declarations.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each interface in `implements` list is placed on a new line and properly indented if they are split across multiple lines.\n        \n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":["string"],"enum":["off","onEveryItem","always"],"enumItemLabels":["Off","On every item","Always"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","No wrapping is applied.","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","Each item is placed on a new line and properly indented."],"default":null,"scope":"window"},"php.format.rules.indentHeredoc":{"markdownDescription":"Ensures heredoc and nowdoc content lines are indented one level past the declaration's scope.\n\n```phpx\n#Enabled                 #Disabled\n\nfunction example() {     function example() {\n    $var = <<<HEREDOC        $var = <<<HEREDOC\n        content          content\n    HEREDOC;             HEREDOC;\n}                        }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.inlineHeredoc":{"markdownDescription":"Place heredoc and nowdoc on the same line as declaring variable\n\n```phpx\n#Enabled                  #Disabled\n$var = <<<HEREDOC         $var =\n    This is a heredoc.    <<<HEREDOC\nHEREDOC;                      This is a heredoc.\n                          HEREDOC;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.keepClassesOnOneLine":{"markdownDescription":"Clasess are kept on one line.\n\n```phpx\n#Enabled       #Disabled\nclass x { }    class x {\n               }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.keepControlStatementsOnOneLine":{"markdownDescription":"Control statements are kept on one line.\n\n```phpx\n#Enabled           #Disabled\nif ($x) return;    if ($x)\n                   \treturn;\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.keepFunctionsOnOneLine":{"markdownDescription":"Functions and methods are kept on one line.\n\n```phpx\n#Enabled                        #Disabled\nfunction foo() { return 1; }    function foo() {\n                                    return 1;\n                                }\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.newLineAfterImplements":{"markdownDescription":"Place a new line after `implements` in type declaration if the list of interfaces is split across multiple lines.\n\n```phpx\n#Enabled              #Disabled\nclass X implements    class X implements A,\n    A,                    B,\n    B,                    C\n    C                 {\n{                     }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.switchStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `switch` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled    #Disabled\nswitch(     switch($x\n    $x      ) {\n) {         }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.switchStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `switch` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled    #Disabled\nswitch(     switch(\n    $x          $x) {\n) {         }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.whileStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `while` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled       #Disabled\nwhile(         while($x == 2\n    $x == 2    ) {\n) {            }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"},"php.format.rules.whileStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `while` statement header if it's split across multiple lines.\n\n```phpx\n#Enabled       #Disabled\nwhile(         while(\n    $x == 2        $x == 2) {\n) {            }\n}\n```\n\nRequires [`PREMIUM`](command:phptools.activatewindow)","type":"boolean","default":null,"scope":"window"}}}],"configurationDefaults":{"php.suggest.basic":false,"php.validate.enable":false,"files.associations":{"*.embeddedhtml":"html"},"[php]":{}},"menus":{"editor/title/run":[{"command":"phptools.debug.runScript","when":"resourceLangId == php && !inDiffEditor && !virtualWorkspace && shellExecutionSupported","group":"navigation@0"},{"command":"phptools.debug.debugScript","when":"resourceLangId == php && !inDiffEditor && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"commands":[{"command":"phptools.activate","category":"PHP Tools","title":"Activate License","icon":"$(unlock)"},{"command":"phptools.requesttrial","category":"PHP Tools","title":"Begin Free Trial ...","icon":"$(unlock)","enablement":"!phptools.activated"},{"command":"phptools.releasenotes","category":"PHP Tools","title":"About ...","icon":"$(notebook)"},{"command":"phptools.clearVendorCache","category":"PHP Tools","title":"Clear /vendor/ cache."},{"command":"phptools.selfProfile.start","category":"PHP Tools (diagnostic)","title":"Begin Profiling Language Server ...","enablement":"selfProfiler.enabled"},{"command":"phptools.stubs","category":"PHP","title":"Workspace Stubs"},{"command":"phptools.todo.search","category":"PHP","title":"Search todo ...","icon":"$(search)"},{"command":"phptools.formatFiles","category":"PHP","title":"Format Multiple Files"},{"command":"phptools.selectPhpVersion","title":"Select PHP version ...","category":"PHP","icon":"$(versions)","enablement":"editorLangId==php && !isWeb"},{"command":"phptools.selectLanguage","title":"PHP Manual Language ...","category":"PHP","icon":"%(comments-view-icon)"},{"command":"phptools.problems.scope","title":"Background Code Analysis","category":"PHP","icon":"%(alert)"},{"command":"phptools.importClass","category":"PHP","title":"Import class ...","enablement":"phptools.importClass"},{"command":"phptools.fqnClass","category":"PHP","title":"FQN class ...","enablement":"phptools.importClass"},{"command":"phptools.implementOverrides","category":"PHP","title":"Implement class overrides ...","enablement":"phptools.implementOverrides"},{"command":"phptools.blade.switchViewClass","category":"Blade","title":"Switch between Blade View and Class ...","enablement":"phptools.blade.switchViewClass"},{"command":"phptools.debug.startWithStopOnEntry","title":"Start Debugging and Stop on Entry","category":"Debug (PHP)","icon":"$(debug-alt-small)","enablement":"debuggersAvailable && !inDebugMode"},{"command":"phptools.debug.startListen","title":"Start Listening for Xdebug","shortTitle":"Listen for Xdebug","category":"Debug (PHP)","icon":"$(debug-alt-small)","enablement":"debuggersAvailable && !inDebugMode"},{"command":"phptools.debug.debugScript","title":"Debug PHP script","category":"Debug (PHP)","enablement":"editorLangId==php && debuggersAvailable && !inDebugMode","icon":"$(debug-alt)"},{"command":"phptools.debug.runScript","title":"Run PHP Script","category":"Debug (PHP)","enablement":"editorLangId == php","icon":"$(play)"}],"keybindings":[{"command":"phptools.debug.startWithStopOnEntry","key":"F10","mac":"F10","when":"!inDebugMode && debugConfigurationType=='php'"},{"command":"phptools.debug.startWithStopOnEntry","key":"F11","mac":"F11","when":"!inDebugMode && debugConfigurationType=='php'"}],"debuggers":[{"type":"php","label":"PHP (Xdebug)","enableBreakpointsFor":{"languageIds":["php"]},"configurationAttributes":{"launch":{"required":[],"properties":{"program":{"type":"string","description":"Absolute path to the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":false},"externalConsole":{"type":"boolean","description":"Launch debug target in external console.","default":false},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceRoot}"},"envFile":{"type":"string","markdownDescription":"Path to `.env` file. Environment variables will be merged into the process environment variables.","examples":[".env"]},"envfile":{"type":"string","markdownDescription":"Path to `.env` file. Environment variables will be merged into the process environment variables.","deprecationMessage":"Property 'envfile' is deprecated, please use 'envFile' instead."},"phpVersion":{"type":"string","markdownDescription":"PHP version or profile name defined in `#php.executables#`"},"runtimeExecutable":{"type":"string","description":"Absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.","default":"php"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"port":{"type":["integer","array"],"description":"Port on which to listen for Xdebug"},"serverSourceRoot":{"type":"string","description":"Deprecated: The source root when debugging a remote host","deprecationMessage":"Property serverSourceRoot is deprecated, please use pathMappings to define a server root."},"localSourceRoot":{"type":"string","description":"Deprecated: The source root on this machine that is the equivalent to the serverSourceRoot on the server.","deprecationMessage":"Property localSourceRoot is deprecated, please use pathMappings to define a local root."},"pathMappings":{"type":"object","default":{},"description":"A mapping of server paths to local paths."},"exclude":{"type":"array","items":"string","description":"Glob patterns specifying paths to exclude from debugging.","default":["**/vendor/**/*.php"]},"skipEntryPaths":{"type":"array","items":"string","description":"Glob patterns to skip if the initial entry file is matched."},"ignoreExceptions":{"type":"array","items":"string","description":"Exception class names or patterns that should be ignored, supporting '*' and '**' wildcards."},"log":{"type":"boolean","description":"If true, will log all communication between VS Code and the adapter"},"noDebug":{"type":"boolean","description":"If true, starts the process without debugging. False by default ('debug' mode enabled)."},"trigger":{"type":"string","description":"If set, only requests with `XDEBUG_TRIGGER` GET/POST/COOKIE or ENV variable equal to this value, will be debugged. By default, every request is being debugged. Example: \"trigger\": \"Start\", so only requests to http://localhost?XDEBUG_TRIGGER=Start will initiate debugging."},"profile":{"type":"boolean","description":"If true, enables Xdebug 'profile' mode. Disabled by default."},"openProfile":{"type":"boolean","description":"Override profile output dir and open the profiling result after the debug sessions stops."},"dbgpProxy":{"type":"object","properties":{"enable":{"type":"boolean","description":"If True, will connect to DBGp proxy configured in this section","default":false},"host":{"type":"string","description":"The host address where the proxy is located. It's usually same as web server, but it's doesn't have to be.","default":"127.0.0.1"},"port":{"type":"number","description":"The port where the proxy server is listening.","default":9001},"ideKey":{"type":"string","description":"The Xdebug IDE Key used to register the VS CODE. If not set, the current user name is used instead."}}},"maxConnections":{"type":"number","description":"Maximum number of simultaneous debug sessions.","default":3}}}},"languages":["php"],"configurationSnippets":[{"label":"PHP: Launch built-in server","description":"Launches PHP's built-in development server and starts debugging.","body":{"name":"Launch built-in server","type":"php","request":"launch","runtimeArgs":["-S","localhost:8000","-t","."],"port":9003,"serverReadyAction":{"action":"openExternally"}}},{"label":"PHP: Launch & Profile built-in server","description":"Launches PHP's built-in development server and starts profiling requests.","body":{"name":"Launch & Profile built-in server","type":"php","request":"launch","noDebug":true,"profile":true,"runtimeArgs":["-S","localhost:8000","-t","."],"port":9003,"serverReadyAction":{"action":"openExternally"}}},{"label":"PHP: Launch current script in console","description":"Launches currently opened PHP document as a console application.","body":{"name":"Launch current script in console","type":"php","request":"launch","program":"^\"\\${file}\"","cwd":"^\"\\${fileDirname}\"","externalConsole":false,"port":9003}},{"label":"PHP: Listen for Xdebug","description":"Starts debugging by waiting for an incoming Xdebug connection from a remote server.","body":{"name":"Listen for Xdebug","type":"php","request":"launch","port":[9003,9000]}}]}],"taskDefinitions":[{"type":"php","properties":{"file":{"type":"string","description":"Path to the .php file to be executed."},"args":{"type":["array","string"],"description":"Script file arguments."},"phpVersion":{"type":"string","description":"PHP version or profile name defined in 'php.executables'"}},"required":["file"]}]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, not all files might be loaded and resolving and finding references might be limited."},"untrustedWorkspaces":{"supported":true}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/platform-MacOS%20%7C%20Linux%20%7C%20Win-green.svg","href":"https://www.devsense.com/download#vscode","description":"PHP Tools Download"},{"url":"https://img.shields.io/badge/php-5.4%20--%205.6%20%7C%207.0%20--%208.4-8892BF.svg?logo=php","href":"https://docs.devsense.com/en/vscode/configuration","description":"Supported PHP Versions"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en/download/vscode","description":"PHP Tools for VS Code Changelog"}],"clean-package":{"indent":0,"remove":["clean-package","dependencies","devDependencies","scripts.precompile","scripts.build-tests","scripts.test","scripts.pretest","scripts.vscode:prepublish","scripts.esbuild-base","scripts.esbuild-uninstall","scripts.postinstall","scripts.compile","scripts.postbuild","scripts.generate-formatsettings","scripts.generate-resource"],"replace":{}},"scripts":{"generate-resource":"pwsh ../../scripts/Generate-Resource.ps1 -path .","generate-formatsettings":"pwsh ./scripts/generate-formatsettings.ps1","generate-changelog":"pwsh ./scripts/changelog.ps1","generate":"npm run -S generate-resource && npm run -S generate-formatsettings && npm run -S generate-changelog","precompile":"npm run -S generate-changelog","postbuild":"pwsh ./scripts/postbuild.ps1","vscode:prepublish":"pwsh ./scripts/prepublish.ps1 && npm run -S esbuild-base -- --minify && npm run -S esbuild-uninstall -- --minify && npm run -S postbuild","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node --main-fields=module,main","esbuild-uninstall":"esbuild ./src/uninstall.ts --bundle --outfile=out/src/uninstall.js --external:vscode --format=cjs --platform=node","compile":"dotnet build ../Devsense.PHP.LanguageServer -c Debug --ignore-failed-sources --output out/server && npm run -S generate && npm run -S esbuild-base -- --sourcemap && npm run -S esbuild-uninstall && npm run -S postbuild","postinstall":"cd ../devsense-php-ls-node && npm i && cd ../common/node && npm i && cd ../../PhpTools.VsCode","vscode:uninstall":"node ./out/src/uninstall","build-tests":"tsc -p ./test/","pretest":"npm run compile && npm run -S build-tests","test":"node ./out/test/runTest.js"},"dependencies":{"@vscode/debugadapter":"^1.54.0","@vscode/debugprotocol":"^1.54.0","@vscode/vsce":"^2.7.0","applicationinsights":"^1.8.10","crypto":"^1.0.1","dotenv":"^16.4.7","escape-string-regexp":"^1.0.5","highlight.js":"^11.6.0","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","markdown-it":"^13.0.1","minimatch":"^5.1.0","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vscode-html-languageservice":"^5.1.2","vscode-languageclient":"^9.0.1","vscode-languageserver":"^9.0.1","vscode-languageserver-protocol-foldingprovider":"^2.0.1","vscode-nls":"^3.2.2","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/chai":"4.3.9","@types/chai-as-promised":"^7.1.8","@types/glob":"^8.0.0","@types/minimatch":"^5.1.0","@types/mocha":"^10.0.1","@types/node":"^10.17.60","@types/vscode":"^1.70.0","@vscode/debugadapter":"^1.56.0","@vscode/debugadapter-testsupport":"^1.64.0","@vscode/test-electron":"^2.2.1","chai":"^4.3.10","chai-as-promised":"^7.1.1","clean-package":"^2.2.0","esbuild":"^0.14.48","mocha":"^10.1.0","source-map-support":"^0.5.12","ts-node":"^10.9.2","tsconfig-paths":"^4.2.0","typescript":"^4.7.4","uglify-js":"^3.16.1","vscode-uri":"^3.0.8"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/devsense.phptools-vscode-1.59.17515-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"devsense","metadata":{"installedTimestamp":1752772982403,"pinned":false,"source":"gallery","id":"93916db4-e944-4c74-b68e-47f2834e9e93","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"devsense","targetPlatform":"linux-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":34372771},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"devsense.intelli-php-vscode","uuid":"f83b9c6c-24dd-435c-a088-daff1769b0b8"},"manifest":{"name":"intelli-php-vscode","displayName":"IntelliPHP - AI Autocomplete for PHP","description":"AI-assisted development for PHP.","icon":"icons/icon-2.png","version":"0.12.17635","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":true,"pricing":"Trial","license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.70.0","node":"^8.11.0"},"categories":["Programming Languages","Machine Learning","Snippets","Other"],"keywords":["php","ai","tools","php tools","compose"],"activationEvents":["onLanguage:php"],"main":"./out/src/extension","contributes":{"languages":[{"id":"php"}],"configuration":{"type":"object","title":"IntelliPHP","properties":{"intelliphp.inlineSuggestionsEnabled":{"type":"boolean","default":true,"markdownDescription":"Enables or disables AI inline code suggestions. Enabled by default.","scope":"window"}}},"configurationDefaults":{"intelephense.completion.triggerParameterHints":false},"commands":[{"category":"IntelliPHP","title":"About ...","command":"intelliphp.releasenotes","enablement":"true"}],"keybindings":[],"debuggers":[],"walkthroughs":[]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, composer packages can't be installed or updated."},"untrustedWorkspaces":{"supported":true,"description":"The extension may require workspace trust to use 'php' 3rd party tool, or to navigate to PHP documentation website, or to navigate to the product website."}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en?from=vscode","description":"PHP Tools product page"}],"scripts":{"generate-resource":"pwsh ../../scripts/Generate-Resource.ps1 -path .","copy-license":"copy ..\\PhpTools.VSCode\\LICENSE.md /Y","precompile":"npm run -S generate-resource && npm run -S copy-license","vscode:prepublish":"npm run -S precompile && pwsh ./prepublish.ps1 && npm run -S esbuild-base -- --minify && pwsh ./minify.ps1","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","compile":"dotnet publish ../Devsense.IntelliPHP.LanguageServer --ignore-failed-sources --output out/server && npm run -S esbuild-base -- --sourcemap","postinstall":"cd ../common/node && npm i && cd ../../PhpTools.VsCode","vscode:uninstall":""},"dependencies":{"applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","highlight.js":"^11.6.0","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","markdown-it":"^13.0.1","minimatch":"^5.1.0","moment":"^2.17.1","node-rsa":"^1.0.7","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-nls":"^3.2.2","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@vscode/vsce":"^2.7.0","@types/mocha":"^10.0.1","@types/node":"^10.17.60","@types/vscode":"^1.70.0","esbuild":"^0.14.48","mocha":"^10.1.0","typescript":"^4.7.4","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/home/shizai/.vscode-oss/extensions/devsense.intelli-php-vscode-0.12.17635-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"devsense","metadata":{"installedTimestamp":1752772982413,"pinned":false,"source":"gallery","id":"f83b9c6c-24dd-435c-a088-daff1769b0b8","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"devsense","targetPlatform":"linux-x64","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":176642285},"isValid":true,"validations":[],"preRelease":false}]}